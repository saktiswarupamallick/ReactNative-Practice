{"version":3,"file":"Webpack.js","names":["devcert","data","_interopRequireWildcard","require","_betterOpn","_interopRequireDefault","_chalk","_fsExtra","_getenv","path","_webpack","_webpackDevServer","_internal","_formatWebpackMessages","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","WEBPACK_LOG_TAG","webpackDevServerInstance","webpackServerPort","customMessageSocketBroadcaster","clearWebCacheAsync","projectRoot","mode","cacheFolder","join","ProjectUtils","logInfo","chalk","dim","fs","remove","broadcastMessage","message","WebpackDevServer","hackyConvertedMessage","connections","webSocketServer","clients","length","console","warn","sendMessage","startAsync","options","stopAsync","logError","red","fullOptions","transformCLIOptions","env","getWebpackConfigEnvFromBundlingOptionsAsync","clear","https","process","SSL_CRT_FILE","SSL_KEY_FILE","ssl","getSSLCertAsync","name","directory","certPath","keyPath","port","getAvailablePortAsync","defaultPort","underline","protocol","config","loadConfigAsync","platform","compiler","webpack","server","devServer","host","WebpackEnvironment","WEB_HOST","start","onWebpackFinished","error","ProjectSettings","setPackagerInfoAsync","ip","address","url","originalClose","stopCallback","bind","callback","err","finally","location","messageSocket","broadcast","Promise","res","compileWebAppAsync","warnings","resolve","reject","run","stats","_messages","_messages$errors","_messages2","_messages2$warnings","messages","formatWebpackMessages","errors","_showErrors","_showWarnings","toJson","all","XDLError","getenv","boolish","logWarning","yellow","bundleWebAppAsync","green","bundleAsync","offline","Error","getUrlAsync","getProtocolAsync","readAsync","DEFAULT_PORT","choosePortAsync","setMode","BABEL_ENV","NODE_ENV","validateBoolOption","value","defaultValue","isImageEditingEnabled","pwa","applyOptionsToProjectSettingsAsync","newSettings","keys","setAsync","dev","logger","getLogger","webpackEnv","log","magenta","result","certificateFor","cert","folder","ensureDir","writeFile","applyEnvironmentVariables","isDebugModeEnabled","bgYellow","black","output","optimization","pathinfo","moduleIds","chunkIds","assign","argv","projectWebpackConfig","existsSync","webpackConfig","loadDefaultConfigAsync","openAsync","UrlUtils","constructWebAppUrlAsync","hostType","openBrowserAsync","success","e","Logger","global"],"sources":["../src/Webpack.ts"],"sourcesContent":["import type Log from '@expo/bunyan';\nimport { MessageSocket } from '@expo/dev-server';\nimport * as devcert from '@expo/devcert';\nimport openBrowserAsync from 'better-opn';\nimport chalk from 'chalk';\nimport fs from 'fs-extra';\nimport getenv from 'getenv';\nimport * as path from 'path';\nimport webpack from 'webpack';\nimport WebpackDevServer from 'webpack-dev-server';\n\nimport {\n  choosePortAsync,\n  ip,\n  Logger,\n  ProjectSettings,\n  ProjectUtils,\n  UrlUtils,\n  WebpackEnvironment,\n  XDLError,\n} from './internal';\nimport { formatWebpackMessages } from './webpack-utils/formatWebpackMessages';\n\nconst WEBPACK_LOG_TAG = 'expo';\n\nlet webpackDevServerInstance: WebpackDevServer | null = null;\nlet webpackServerPort: number | null = null;\n\ninterface WebpackSettings {\n  url: string;\n  server: WebpackDevServer;\n  port: number;\n  protocol: 'http' | 'https';\n  host?: string;\n}\n\ntype CLIWebOptions = {\n  dev?: boolean;\n  clear?: boolean;\n  pwa?: boolean;\n  nonInteractive?: boolean;\n  port?: number;\n  onWebpackFinished?: (error?: Error) => void;\n  forceManifestType?: 'classic' | 'expo-updates';\n};\n\ntype BundlingOptions = {\n  dev?: boolean;\n  clear?: boolean;\n  port?: number;\n  pwa?: boolean;\n  isImageEditingEnabled?: boolean;\n  entryFile?: string;\n  platform?: string;\n  webpackEnv?: object;\n  mode?: 'development' | 'production' | 'test' | 'none';\n  https?: boolean;\n  nonInteractive?: boolean;\n  onWebpackFinished?: (error?: Error) => void;\n};\n\ntype WebpackConfiguration = webpack.Configuration;\n\nexport type WebEnvironment = {\n  projectRoot: string;\n  isImageEditingEnabled: boolean;\n  // deprecated\n  pwa: boolean;\n  mode: 'development' | 'production' | 'test' | 'none';\n  https: boolean;\n  logger: Log;\n  port?: number;\n  platform?: string;\n};\n\n// A custom message websocket broadcaster used to send messages to a React Native runtime.\nlet customMessageSocketBroadcaster:\n  | undefined\n  | ((message: string, data?: Record<string, any>) => void);\n\nasync function clearWebCacheAsync(projectRoot: string, mode: string): Promise<void> {\n  const cacheFolder = path.join(projectRoot, '.expo', 'web', 'cache', mode);\n  ProjectUtils.logInfo(\n    projectRoot,\n    WEBPACK_LOG_TAG,\n    chalk.dim(`Clearing ${mode} cache directory...`)\n  );\n  try {\n    await fs.remove(cacheFolder);\n  } catch {}\n}\n\nexport type WebpackDevServerResults = {\n  server: WebpackDevServer;\n  location: Omit<WebpackSettings, 'server'>;\n  messageSocket: MessageSocket;\n};\n\nexport async function broadcastMessage(message: 'reload' | string, data?: any) {\n  if (!webpackDevServerInstance || !(webpackDevServerInstance instanceof WebpackDevServer)) {\n    return;\n  }\n\n  // Allow any message on native\n  if (customMessageSocketBroadcaster) {\n    customMessageSocketBroadcaster(message, data);\n    // return;\n  }\n\n  if (message !== 'reload') {\n    // TODO:\n    // Webpack currently only supports reloading the client (browser),\n    // remove this when we have custom sockets, and native support.\n    return;\n  }\n\n  // TODO:\n  // Default webpack-dev-server sockets use \"content-changed\" instead of \"reload\" (what we use on native).\n  // For now, just manually convert the value so our CLI interface can be unified.\n  const hackyConvertedMessage = message === 'reload' ? 'content-changed' : message;\n\n  // @ts-ignore: type not exposed\n  const connections = webpackDevServerInstance.webSocketServer.clients;\n\n  if (!connections.length) {\n    console.warn('No HMR clients are connected to the dev server');\n  }\n  webpackDevServerInstance.sendMessage(connections, hackyConvertedMessage, data);\n}\n\nexport async function startAsync(\n  projectRoot: string,\n  options: CLIWebOptions = {}\n): Promise<WebpackDevServerResults | null> {\n  await stopAsync(projectRoot);\n\n  if (webpackDevServerInstance) {\n    ProjectUtils.logError(projectRoot, WEBPACK_LOG_TAG, chalk.red(`Webpack is already running.`));\n    return null;\n  }\n\n  const fullOptions = transformCLIOptions(options);\n\n  const env = await getWebpackConfigEnvFromBundlingOptionsAsync(projectRoot, fullOptions);\n\n  if (fullOptions.clear) {\n    await clearWebCacheAsync(projectRoot, env.mode);\n  }\n\n  if (env.https) {\n    if (!process.env.SSL_CRT_FILE || !process.env.SSL_KEY_FILE) {\n      const ssl = await getSSLCertAsync({\n        name: 'localhost',\n        directory: projectRoot,\n      });\n      if (ssl) {\n        process.env.SSL_CRT_FILE = ssl.certPath;\n        process.env.SSL_KEY_FILE = ssl.keyPath;\n      }\n    }\n  }\n\n  const port = await getAvailablePortAsync({\n    projectRoot,\n    defaultPort: options.port,\n  });\n\n  webpackServerPort = port;\n\n  ProjectUtils.logInfo(\n    projectRoot,\n    WEBPACK_LOG_TAG,\n    `Starting Webpack on port ${webpackServerPort} in ${chalk.underline(env.mode)} mode.`\n  );\n\n  const protocol = env.https ? 'https' : 'http';\n\n  const config = await loadConfigAsync({\n    ...env,\n    platform: 'web',\n  });\n\n  // Create a webpack compiler\n  const compiler = webpack(config);\n\n  const server = new WebpackDevServer(\n    {\n      ...config.devServer!,\n      port,\n      host: WebpackEnvironment.WEB_HOST,\n    },\n    compiler\n  );\n  try {\n    // Launch WebpackDevServer.\n    await server.start();\n\n    if (typeof options.onWebpackFinished === 'function') {\n      options.onWebpackFinished();\n    }\n  } catch (error: any) {\n    ProjectUtils.logError(projectRoot, WEBPACK_LOG_TAG, error.message);\n    if (typeof options.onWebpackFinished === 'function') {\n      options.onWebpackFinished(error);\n    }\n  }\n\n  webpackDevServerInstance = server;\n\n  await ProjectSettings.setPackagerInfoAsync(projectRoot, {\n    webpackServerPort,\n  });\n\n  const host = ip.address();\n  const url = `${protocol}://${host}:${port}`;\n\n  // Extend the close method to ensure that we clean up the local info.\n  const originalClose = server.stopCallback.bind(server);\n\n  server.stopCallback = (callback?: (err?: Error) => void) => {\n    return originalClose((err?: Error) => {\n      ProjectSettings.setPackagerInfoAsync(projectRoot, {\n        webpackServerPort: null,\n      }).finally(() => {\n        callback?.(err);\n        webpackDevServerInstance = null;\n        webpackServerPort = null;\n      });\n    });\n  };\n\n  return {\n    server,\n    location: {\n      url,\n      port,\n      protocol,\n      host,\n    },\n    // Match the native protocol.\n    messageSocket: {\n      broadcast: broadcastMessage,\n    },\n  };\n}\n\nexport async function stopAsync(projectRoot: string): Promise<void> {\n  if (webpackDevServerInstance) {\n    await new Promise<Error | undefined>(res => {\n      if (webpackDevServerInstance) {\n        ProjectUtils.logInfo(projectRoot, WEBPACK_LOG_TAG, '\\u203A Stopping Webpack server');\n        webpackDevServerInstance.stopCallback(res);\n      }\n    });\n  }\n}\n\n// TODO: Reuse logging system that we use in dev server + extras\nasync function compileWebAppAsync(projectRoot: string, compiler: webpack.Compiler): Promise<any> {\n  // We generate the stats.json file in the webpack-config\n  const { warnings } = await new Promise((resolve, reject) =>\n    compiler.run((error, stats) => {\n      let messages: {\n        errors?: string[];\n        warnings?: string[];\n      };\n      if (error) {\n        if (!error.message) {\n          return reject(error);\n        }\n        messages = formatWebpackMessages({\n          // @ts-ignore: TODO\n          errors: [error.message],\n          warnings: [],\n          _showErrors: true,\n          _showWarnings: true,\n        });\n      } else {\n        messages = formatWebpackMessages(\n          stats?.toJson({ all: false, warnings: true, errors: true })\n        );\n      }\n\n      if (messages?.errors?.length) {\n        // Only keep the first error. Others are often indicative\n        // of the same problem, but confuse the reader with noise.\n        if (messages.errors.length > 1) {\n          messages.errors.length = 1;\n        }\n        return reject(new XDLError('WEBPACK_BUNDLE', messages.errors.join('\\n\\n')));\n      }\n      if (\n        getenv.boolish('EXPO_WEB_BUILD_STRICT', false) &&\n        getenv.boolish('CI', false) &&\n        messages?.warnings?.length\n      ) {\n        ProjectUtils.logWarning(\n          projectRoot,\n          WEBPACK_LOG_TAG,\n          chalk.yellow(\n            '\\nTreating warnings as errors because `process.env.CI = true` and `process.env.EXPO_WEB_BUILD_STRICT = true`. \\n' +\n              'Most CI servers set it automatically.\\n'\n          )\n        );\n        return reject(new XDLError('WEBPACK_BUNDLE', messages.warnings.join('\\n\\n')));\n      }\n      resolve({\n        warnings: messages.warnings,\n      });\n    })\n  );\n  return { warnings };\n}\n\nasync function bundleWebAppAsync(projectRoot: string, config: WebpackConfiguration) {\n  const compiler = webpack(config);\n\n  try {\n    const { warnings } = await compileWebAppAsync(projectRoot, compiler);\n    if (warnings.length) {\n      ProjectUtils.logWarning(\n        projectRoot,\n        WEBPACK_LOG_TAG,\n        chalk.yellow('Compiled with warnings.\\n')\n      );\n      ProjectUtils.logWarning(projectRoot, WEBPACK_LOG_TAG, warnings.join('\\n\\n'));\n    } else {\n      ProjectUtils.logInfo(projectRoot, WEBPACK_LOG_TAG, chalk.green('Compiled successfully.\\n'));\n    }\n  } catch (error: any) {\n    ProjectUtils.logError(projectRoot, WEBPACK_LOG_TAG, chalk.red('Failed to compile.\\n'));\n    throw error;\n  }\n}\n\nexport async function bundleAsync(projectRoot: string, options?: BundlingOptions): Promise<void> {\n  const fullOptions = transformCLIOptions({\n    ...options,\n  });\n\n  const env = await getWebpackConfigEnvFromBundlingOptionsAsync(projectRoot, {\n    ...fullOptions,\n    // Force production\n    mode: 'production',\n  });\n\n  // @ts-ignore\n  if (typeof env.offline !== 'undefined') {\n    throw new Error(\n      'offline support must be added manually: https://expo.fyi/enabling-web-service-workers'\n    );\n  }\n\n  if (fullOptions.clear) {\n    await clearWebCacheAsync(projectRoot, env.mode);\n  }\n\n  const config = await loadConfigAsync(env);\n  await bundleWebAppAsync(projectRoot, config);\n}\n\n/**\n * Get the URL for the running instance of Webpack dev server.\n *\n * @param projectRoot\n */\nexport async function getUrlAsync(projectRoot: string): Promise<string | null> {\n  if (!webpackDevServerInstance) {\n    return null;\n  }\n  const host = ip.address();\n  const protocol = await getProtocolAsync(projectRoot);\n  return `${protocol}://${host}:${webpackServerPort}`;\n}\n\nasync function getProtocolAsync(projectRoot: string): Promise<'http' | 'https'> {\n  // TODO: Bacon: Handle when not in expo\n  const { https } = await ProjectSettings.readAsync(projectRoot);\n  return https === true ? 'https' : 'http';\n}\n\nasync function getAvailablePortAsync(options: {\n  host?: string;\n  defaultPort?: number;\n  projectRoot: string;\n}): Promise<number> {\n  try {\n    const defaultPort =\n      'defaultPort' in options && options.defaultPort\n        ? options.defaultPort\n        : WebpackEnvironment.DEFAULT_PORT;\n    const port = await choosePortAsync(options.projectRoot, {\n      defaultPort,\n      host: 'host' in options && options.host ? options.host : WebpackEnvironment.WEB_HOST,\n    });\n    if (!port) {\n      throw new Error(`Port ${defaultPort} not available.`);\n    }\n    return port;\n  } catch (error: any) {\n    throw new XDLError('NO_PORT_FOUND', error.message);\n  }\n}\n\nfunction setMode(mode: 'development' | 'production' | 'test' | 'none'): void {\n  process.env.BABEL_ENV = mode;\n  process.env.NODE_ENV = mode;\n}\n\nfunction validateBoolOption(name: string, value: unknown, defaultValue: boolean): boolean {\n  if (typeof value === 'undefined') {\n    value = defaultValue;\n  }\n\n  if (typeof value !== 'boolean') {\n    throw new XDLError('WEBPACK_INVALID_OPTION', `'${name}' option must be a boolean.`);\n  }\n\n  return value;\n}\n\nfunction transformCLIOptions(options: CLIWebOptions): BundlingOptions {\n  // Transform the CLI flags into more explicit values\n  return {\n    ...options,\n\n    isImageEditingEnabled: options.pwa,\n  };\n}\n\nasync function applyOptionsToProjectSettingsAsync(\n  projectRoot: string,\n  options: BundlingOptions\n): Promise<ProjectSettings.Settings> {\n  const newSettings: Partial<ProjectSettings.Settings> = {};\n  // Change settings before reading them\n  if (typeof options.https === 'boolean') {\n    newSettings.https = options.https;\n  }\n\n  if (Object.keys(newSettings).length) {\n    await ProjectSettings.setAsync(projectRoot, newSettings);\n  }\n\n  return await ProjectSettings.readAsync(projectRoot);\n}\n\nasync function getWebpackConfigEnvFromBundlingOptionsAsync(\n  projectRoot: string,\n  options: BundlingOptions\n): Promise<WebEnvironment> {\n  const { dev, https } = await applyOptionsToProjectSettingsAsync(projectRoot, options);\n\n  const mode = typeof options.mode === 'string' ? options.mode : dev ? 'development' : 'production';\n\n  const isImageEditingEnabled = validateBoolOption(\n    'isImageEditingEnabled',\n    options.isImageEditingEnabled,\n    true\n  );\n\n  return {\n    projectRoot,\n    pwa: isImageEditingEnabled,\n    isImageEditingEnabled,\n    mode,\n    https,\n    logger: ProjectUtils.getLogger(projectRoot),\n    port: options.port,\n    ...(options.webpackEnv || {}),\n  };\n}\n\nasync function getSSLCertAsync({\n  name,\n  directory,\n}: {\n  name: string;\n  directory: string;\n}): Promise<{ keyPath: string; certPath: string } | false> {\n  console.log(\n    chalk.magenta`Ensuring auto SSL certificate is created (you might need to re-run with sudo)`\n  );\n  try {\n    const result = await devcert.certificateFor(name);\n    if (result) {\n      const { key, cert } = result;\n      const folder = path.join(directory, '.expo', 'web', 'development', 'ssl');\n      await fs.ensureDir(folder);\n\n      const keyPath = path.join(folder, `key-${name}.pem`);\n      await fs.writeFile(keyPath, key);\n\n      const certPath = path.join(folder, `cert-${name}.pem`);\n      await fs.writeFile(certPath, cert);\n\n      return {\n        keyPath,\n        certPath,\n      };\n    }\n    return result;\n  } catch (error: any) {\n    console.log(`Error creating SSL certificates: ${error}`);\n  }\n\n  return false;\n}\n\nfunction applyEnvironmentVariables(config: WebpackConfiguration): WebpackConfiguration {\n  // Use EXPO_DEBUG_WEB=true to enable debugging features for cases where the prod build\n  // has errors that aren't caught in development mode.\n  // Related: https://github.com/expo/expo-cli/issues/614\n  if (WebpackEnvironment.isDebugModeEnabled() && config.mode === 'production') {\n    console.log(chalk.bgYellow.black('Bundling the project in debug mode.'));\n\n    const output = config.output || {};\n    const optimization = config.optimization || {};\n\n    // Add comments that describe the file import/exports.\n    // This will make it easier to debug.\n    output.pathinfo = true;\n    // Readable ids for better debugging.\n    optimization.moduleIds = 'named';\n    // if optimization.namedChunks is enabled optimization.chunkIds is set to 'named'.\n    // This will manually enable it just to be safe.\n    optimization.chunkIds = 'named';\n\n    Object.assign(config, { output, optimization });\n  }\n\n  return config;\n}\n\nasync function loadConfigAsync(\n  env: WebEnvironment,\n  argv?: string[]\n): Promise<WebpackConfiguration> {\n  setMode(env.mode);\n  // Check if the project has a webpack.config.js in the root.\n  const projectWebpackConfig = path.resolve(env.projectRoot, 'webpack.config.js');\n  let config: WebpackConfiguration;\n  if (fs.existsSync(projectWebpackConfig)) {\n    const webpackConfig = require(projectWebpackConfig);\n    if (typeof webpackConfig === 'function') {\n      config = await webpackConfig(env, argv);\n    } else {\n      config = webpackConfig;\n    }\n  } else {\n    // Fallback to the default expo webpack config.\n    const loadDefaultConfigAsync = require('@expo/webpack-config');\n    config = await loadDefaultConfigAsync(env, argv);\n  }\n  return applyEnvironmentVariables(config);\n}\n\nexport async function openAsync(\n  projectRoot: string\n): Promise<{ success: true; url: string } | { success: false; error: Error }> {\n  try {\n    const url = await UrlUtils.constructWebAppUrlAsync(projectRoot, { hostType: 'localhost' });\n    if (!url) {\n      throw new Error('Webpack Dev Server is not running');\n    }\n    openBrowserAsync(url);\n    return { success: true, url };\n  } catch (e: any) {\n    Logger.global.error(`Couldn't start project on web: ${e.message}`);\n    return { success: false, error: e };\n  }\n}\n"],"mappings":"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"}