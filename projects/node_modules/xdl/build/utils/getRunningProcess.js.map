{"version":3,"file":"getRunningProcess.js","names":["_child_process","data","require","path","_interopRequireWildcard","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","defaultOptions","encoding","stdio","getPID","port","execFileSync","split","trim","getPackageName","packageRoot","packageJson","join","name","getProcessCommand","pid","procDirectory","results","execSync","replace","getDirectoryOfProcessById","processId","getRunningProcess","directory","command"],"sources":["../../src/utils/getRunningProcess.ts"],"sourcesContent":["import { execFileSync, execSync, ExecSyncOptionsWithStringEncoding } from 'child_process';\nimport * as path from 'path';\n\nconst defaultOptions: ExecSyncOptionsWithStringEncoding = {\n  encoding: 'utf8',\n  stdio: ['pipe', 'pipe', 'ignore'],\n};\n\nfunction getPID(port: number) {\n  return execFileSync('lsof', [`-i:${port}`, '-P', '-t', '-sTCP:LISTEN'], defaultOptions)\n    .split('\\n')[0]\n    .trim();\n}\n\nfunction getPackageName(packageRoot: string): string | null {\n  const packageJson = path.join(packageRoot.trim(), 'package.json');\n  try {\n    return require(packageJson).name || null;\n  } catch {\n    return null;\n  }\n}\n\nfunction getProcessCommand(pid: string, procDirectory: string): string {\n  const results = execSync(`ps -o command -p ${pid} | sed -n 2p`, defaultOptions)\n    .replace(/\\n$/, '')\n    .trim();\n\n  const name = getPackageName(procDirectory);\n  return name ? name : results;\n}\n\nfunction getDirectoryOfProcessById(processId: string): string {\n  return execSync(\n    'lsof -p ' + processId + ' | awk \\'$4==\"cwd\" {for (i=9; i<=NF; i++) printf \"%s \", $i}\\'',\n    defaultOptions\n  ).trim();\n}\n\nexport function getRunningProcess(\n  port: number\n): { pid: string; directory: string; command: string } | null {\n  try {\n    // 63828\n    const pid = getPID(port);\n    // /Users/evanbacon/Documents/GitHub/lab/myapp\n    const directory = getDirectoryOfProcessById(pid);\n    // /Users/evanbacon/Documents/GitHub/lab/myapp/package.json\n    const command = getProcessCommand(pid, directory);\n    // TODO: Have a better message for reusing another process.\n    return { pid, directory, command };\n  } catch {\n    return null;\n  }\n}\n"],"mappings":"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"}