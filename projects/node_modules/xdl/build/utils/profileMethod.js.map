{"version":3,"file":"profileMethod.js","names":["_chalk","data","_interopRequireDefault","require","_getenv","obj","__esModule","default","isProfiling","boolish","consoleTime","console","time","consoleTimeEnd","timeEnd","profileMethod","fn","functionName","name","chalk","dim","args","results","Promise","resolve","reject","then","catch","error","exports"],"sources":["../../src/utils/profileMethod.ts"],"sourcesContent":["import chalk from 'chalk';\nimport { boolish } from 'getenv';\n\nconst isProfiling = boolish('EXPO_PROFILE', false);\n\n// eslint-disable-next-line no-console\nconst consoleTime: (label?: string) => void = isProfiling ? console.time : () => {};\n// eslint-disable-next-line no-console\nconst consoleTimeEnd: (label?: string) => void = isProfiling ? console.timeEnd : () => {};\n\n/**\n * Wrap a method and profile the time it takes to execute the method using `EXPO_PROFILE`.\n * Works best with named functions (i.e. not arrow functions).\n *\n * @param fn\n * @param functionName\n */\nexport const profileMethod = <T extends any[], U>(fn: (...args: T) => U, functionName?: string) => {\n  const name = chalk.dim(`⏱  [profile] ${functionName ?? (fn.name || 'unknown')}`);\n  return (...args: T): U => {\n    consoleTime(name);\n    const results = fn(...args);\n    if (results instanceof Promise) {\n      // @ts-ignore\n      return new Promise<U>((resolve, reject) => {\n        results\n          .then(results => {\n            resolve(results);\n            consoleTimeEnd(name);\n          })\n          .catch(error => {\n            reject(error);\n            consoleTimeEnd(name);\n          });\n      });\n    } else {\n      consoleTimeEnd(name);\n    }\n    return results;\n  };\n};\n"],"mappings":";;;;;;AAAA,SAAAA,OAAA;EAAA,MAAAC,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAH,MAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAG,QAAA;EAAA,MAAAH,IAAA,GAAAE,OAAA;EAAAC,OAAA,YAAAA,CAAA;IAAA,OAAAH,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAAiC,SAAAC,uBAAAG,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAEjC,MAAMG,WAAW,GAAG,IAAAC,iBAAO,EAAC,cAAc,EAAE,KAAK,CAAC;;AAElD;AACA,MAAMC,WAAqC,GAAGF,WAAW,GAAGG,OAAO,CAACC,IAAI,GAAG,MAAM,CAAC,CAAC;AACnF;AACA,MAAMC,cAAwC,GAAGL,WAAW,GAAGG,OAAO,CAACG,OAAO,GAAG,MAAM,CAAC,CAAC;;AAEzF;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,aAAa,GAAGA,CAAqBC,EAAqB,EAAEC,YAAqB,KAAK;EACjG,MAAMC,IAAI,GAAGC,gBAAK,CAACC,GAAG,CAAE,gBAAeH,YAAY,aAAZA,YAAY,cAAZA,YAAY,GAAKD,EAAE,CAACE,IAAI,IAAI,SAAW,EAAC,CAAC;EAChF,OAAO,CAAC,GAAGG,IAAO,KAAQ;IACxBX,WAAW,CAACQ,IAAI,CAAC;IACjB,MAAMI,OAAO,GAAGN,EAAE,CAAC,GAAGK,IAAI,CAAC;IAC3B,IAAIC,OAAO,YAAYC,OAAO,EAAE;MAC9B;MACA,OAAO,IAAIA,OAAO,CAAI,CAACC,OAAO,EAAEC,MAAM,KAAK;QACzCH,OAAO,CACJI,IAAI,CAACJ,OAAO,IAAI;UACfE,OAAO,CAACF,OAAO,CAAC;UAChBT,cAAc,CAACK,IAAI,CAAC;QACtB,CAAC,CAAC,CACDS,KAAK,CAACC,KAAK,IAAI;UACdH,MAAM,CAACG,KAAK,CAAC;UACbf,cAAc,CAACK,IAAI,CAAC;QACtB,CAAC,CAAC;MACN,CAAC,CAAC;IACJ,CAAC,MAAM;MACLL,cAAc,CAACK,IAAI,CAAC;IACtB;IACA,OAAOI,OAAO;EAChB,CAAC;AACH,CAAC;AAACO,OAAA,CAAAd,aAAA,GAAAA,aAAA"}