{"version":3,"file":"PKCS12Utils.js","names":["_nodeForge","data","_interopRequireDefault","require","obj","__esModule","default","getP12CertFingerprint","p12Buffer","passwordRaw","certData","_getCertData","certAsn1","forge","pki","certificateToAsn1","certDer","asn1","toDer","getBytes","md","sha1","create","update","digest","toHex","toUpperCase","findP12CertSerialNumber","serialNumber","getCertData","_processSerialNumber","maybeSerialNumber","replace","_p12$getBags","_p12$getBags$certBagT","_p12$getBags$certBagT2","Buffer","isBuffer","toString","Error","password","String","p12Der","util","decode64","p12Asn1","fromDer","p12","pkcs12","pkcs12FromAsn1","certBagType","oids","certBag","getBags","bagType","cert"],"sources":["../../src/detach/PKCS12Utils.ts"],"sourcesContent":["import forge from 'node-forge';\n\nexport function getP12CertFingerprint(\n  p12Buffer: Buffer | string,\n  passwordRaw: string | null\n): string {\n  const certData = _getCertData(p12Buffer, passwordRaw);\n  const certAsn1 = forge.pki.certificateToAsn1(certData);\n  const certDer = forge.asn1.toDer(certAsn1).getBytes();\n  return forge.md.sha1.create().update(certDer).digest().toHex().toUpperCase();\n}\n\nexport function findP12CertSerialNumber(\n  p12Buffer: Buffer | string,\n  passwordRaw: string | null\n): string | null {\n  const { serialNumber } = getCertData(p12Buffer, passwordRaw);\n  return serialNumber;\n}\n\nfunction _processSerialNumber(maybeSerialNumber: string | null | undefined) {\n  return maybeSerialNumber ? maybeSerialNumber.replace(/^0+/, '').toUpperCase() : null;\n}\n\nexport function getCertData(p12Buffer: Buffer | string, passwordRaw: string | null) {\n  const certData = _getCertData(p12Buffer, passwordRaw);\n  return {\n    ...certData,\n    serialNumber: _processSerialNumber(certData.serialNumber),\n  };\n}\n\nfunction _getCertData(p12Buffer: Buffer | string, passwordRaw: string | null) {\n  if (Buffer.isBuffer(p12Buffer)) {\n    p12Buffer = p12Buffer.toString('base64');\n  } else if (typeof p12Buffer !== 'string') {\n    throw new Error('_getCertData only takes strings and buffers.');\n  }\n\n  const password = String(passwordRaw || '');\n  const p12Der = forge.util.decode64(p12Buffer);\n  const p12Asn1 = forge.asn1.fromDer(p12Der);\n  const p12 = forge.pkcs12.pkcs12FromAsn1(p12Asn1, password);\n  const certBagType = forge.pki.oids.certBag;\n  const certData = p12.getBags({ bagType: certBagType })?.[certBagType]?.[0]?.cert;\n  if (!certData) {\n    throw new Error(\"_getCertData: couldn't find cert bag\");\n  }\n  return certData;\n}\n"],"mappings":"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"}