{"version":3,"file":"PackagerLogsStream.js","names":["_chalk","data","_interopRequireDefault","require","_getenv","_path","_internal","obj","__esModule","default","_defineProperty","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","PackagerLogsStream","constructor","projectRoot","getCurrentOpenProjectId","updateLogs","onStartBuildBundle","onProgressBuildBundle","onFinishBuildBundle","getSnippetForError","chunk","msg","bundleDetails","bundleDetailsCache","buildID","type","_metroEventType","_handleNewBundleTransformStarted","_bundleBuildChunkID","_handleUpdateBundleTransformProgress","_updateLogs","logs","_logsToAdd","length","nextLogs","concat","match","replace","_projectRoot","_getCurrentOpenProjectId","_onStartBuildBundle","_onProgressBuildBundle","_onFinishBuildBundle","_getSnippetForError","_attachLoggerStream","projectId","ProjectUtils","attachLoggerStream","stream","write","_handleChunk","bind","tag","_maybeParseMsgJSON","_cleanUpNodeErrors","_handleMetroEvent","_enqueueAppendLogChunk","originalChunk","includes","getenv","boolish","_handleBundleTransformEvent","code","error","port","_formatModuleResolutionError","_formatBundlingError","level","Logger","ERROR","warning","WARN","reason","_formatWorkerChunk","JSON","stringify","getPlatformTagForBuildDetails","_bundleDetails$platfo","platform","formatted","ios","android","web","chalk","bold","id","_bundleBuildStart","Date","progressChunk","percentProgress","bundleComplete","duration","getTime","percentage","transformedFileCount","totalFileCount","roundedPercentProgress","Math","floor","progress","start","end","forEach","log","message","exec","originModulePath","moduleName","relativePath","path","relative","DOCS_PAGE_URL","NODE_STDLIB_MODULES","Array","isArray","errors","description","red","snippet","isAmbiguousError","name","isComprehensiveTransformError","filename","stack","gray","origin","shouldHide","push","_enqueueFlushLogsToAdd","parsedMsg","parse","exports"],"sources":["../../src/logs/PackagerLogsStream.ts"],"sourcesContent":["import { JSONObject } from '@expo/json-file';\nimport chalk from 'chalk';\nimport getenv from 'getenv';\nimport path from 'path';\n\nimport { Logger, ProjectUtils } from '../internal';\n\ntype BuildEventType =\n  | 'METRO_INITIALIZE_STARTED'\n  | 'BUILD_STARTED'\n  | 'BUILD_PROGRESS'\n  | 'BUILD_FAILED'\n  | 'BUILD_DONE';\ntype MetroLogRecord = {\n  tag: 'metro';\n  id: string;\n  shouldHide: boolean;\n  msg: ReportableEvent | string;\n  level: number;\n  _metroEventType?: BuildEventType;\n};\ntype ExpoLogRecord = {\n  tag: 'expo';\n  id: string;\n  shouldHide: boolean;\n  msg: any;\n  level: number;\n};\ntype DeviceLogRecord = {\n  tag: 'device';\n  id: string;\n  shouldHide: boolean;\n  msg: any;\n  level: number;\n  deviceId: string;\n  deviceName: string;\n};\nexport type LogRecord = (MetroLogRecord | ExpoLogRecord | DeviceLogRecord) & ProjectUtils.LogFields;\n\nexport type LogUpdater = (logState: LogRecord[]) => LogRecord[];\n\ntype ErrorObject = {\n  name?: string;\n  stack?: string;\n  message?: string;\n  code?: string;\n} & JSONObject;\n\ntype MetroError =\n  | ({\n      originModulePath: string;\n      message: string;\n      errors: { description: string; filename: string; lineNumber: number }[];\n    } & ErrorObject)\n  | ({\n      type: 'TransformError';\n      snippet: string;\n      lineNumber: number;\n      column: number;\n      filename: string;\n      errors: { description: string; filename: string; lineNumber: number }[];\n    } & ErrorObject)\n  | ErrorObject;\n\n// Metro reporter types\n// https://github.com/facebook/metro/blob/2a327fb19dd62169ab3ae9069011d8a599cfcf3e/packages/metro/src/lib/reporting.js\ntype GlobalCacheDisabledReason = 'too_many_errors' | 'too_many_misses';\ntype BundleDetails = {\n  entryFile: string;\n  platform: string;\n  dev: boolean;\n  minify: boolean;\n  bundleType: string;\n};\ntype ReportableEvent =\n  | {\n      port: number | undefined;\n      projectRoots: readonly string[];\n      type: 'initialize_started';\n    }\n  | {\n      type: 'initialize_done';\n    }\n  | {\n      type: 'client_log';\n      data: any;\n    }\n  | {\n      type: 'initialize_failed';\n      port: number;\n      error: MetroError;\n    }\n  | {\n      buildID: string;\n      type: 'bundle_build_done';\n    }\n  | {\n      buildID: string;\n      type: 'bundle_build_failed';\n    }\n  | {\n      buildID: string;\n      bundleDetails: BundleDetails;\n      type: 'bundle_build_started';\n    }\n  | {\n      error: MetroError;\n      type: 'bundling_error';\n    }\n  | {\n      // Currently only sent from Webpack\n      warning: string;\n      type: 'bundling_warning';\n    }\n  | {\n      type: 'dep_graph_loading';\n    }\n  | {\n      type: 'dep_graph_loaded';\n    }\n  | {\n      buildID: string;\n      type: 'bundle_transform_progressed';\n      transformedFileCount: number;\n      totalFileCount: number;\n\n      // A special property added for webpack support\n      percentage?: number;\n    }\n  | {\n      type: 'global_cache_error';\n      error: MetroError;\n    }\n  | {\n      type: 'global_cache_disabled';\n      reason: GlobalCacheDisabledReason;\n    }\n  | {\n      type: 'transform_cache_reset';\n    }\n  | {\n      type: 'worker_stdout_chunk';\n      chunk: string;\n    }\n  | {\n      type: 'worker_stderr_chunk';\n      chunk: string;\n    }\n  | {\n      type: 'transformer_load_started';\n    }\n  | {\n      type: 'transformer_load_done';\n    }\n  | {\n      type: 'hmr_client_error';\n      error: MetroError;\n    };\n\ntype StartBuildBundleCallback = (props: {\n  chunk: LogRecord;\n  bundleDetails: BundleDetails | null;\n}) => void;\ntype ProgressBuildBundleCallback = (props: {\n  progress: number;\n  start: Date | null;\n  chunk: any;\n  bundleDetails: BundleDetails | null;\n}) => void;\ntype FinishBuildBundleCallback = (props: {\n  error: string | null;\n  start: Date;\n  end: Date;\n  chunk: MetroLogRecord;\n  bundleDetails: BundleDetails | null;\n}) => void;\n\nexport default class PackagerLogsStream {\n  _projectRoot: string;\n  _getCurrentOpenProjectId: () => any;\n  _updateLogs: (updater: LogUpdater) => void;\n  _logsToAdd: LogRecord[] = [];\n  _bundleBuildChunkID: string | null = null;\n  _onStartBuildBundle?: StartBuildBundleCallback;\n  _onProgressBuildBundle?: ProgressBuildBundleCallback;\n  _onFinishBuildBundle?: FinishBuildBundleCallback;\n  _bundleBuildStart: Date | null = null;\n  _getSnippetForError?: (error: MetroError) => string | null;\n\n  constructor({\n    projectRoot,\n    getCurrentOpenProjectId,\n    updateLogs,\n    onStartBuildBundle,\n    onProgressBuildBundle,\n    onFinishBuildBundle,\n    getSnippetForError,\n  }: {\n    projectRoot: string;\n    getCurrentOpenProjectId?: () => any;\n    updateLogs: (updater: LogUpdater) => void;\n    onStartBuildBundle?: StartBuildBundleCallback;\n    onProgressBuildBundle?: ProgressBuildBundleCallback;\n    onFinishBuildBundle?: FinishBuildBundleCallback;\n    getSnippetForError?: (error: MetroError) => string | null;\n  }) {\n    this._projectRoot = projectRoot;\n    this._getCurrentOpenProjectId = getCurrentOpenProjectId || (() => 1);\n    this._updateLogs = updateLogs;\n\n    // Optional properties in case the consumer wants to handle updates on\n    // its own, eg: for a progress bar\n    this._onStartBuildBundle = onStartBuildBundle;\n    this._onProgressBuildBundle = onProgressBuildBundle;\n    this._onFinishBuildBundle = onFinishBuildBundle;\n\n    // Optional function for creating custom code frame snippet\n    // (e.g. with terminal colors) from a syntax error.\n    this._getSnippetForError = getSnippetForError;\n\n    this._attachLoggerStream();\n  }\n\n  projectId?: number;\n\n  _attachLoggerStream() {\n    this.projectId = this._getCurrentOpenProjectId();\n\n    ProjectUtils.attachLoggerStream(this._projectRoot, {\n      stream: {\n        write: this._handleChunk.bind(this),\n      },\n      type: 'raw',\n    });\n  }\n\n  _handleChunk(chunk: LogRecord) {\n    if (chunk.tag !== 'metro' && chunk.tag !== 'expo') {\n      return;\n    } else if (this._getCurrentOpenProjectId() !== this.projectId) {\n      // TODO: We should be confident that we are properly unsubscribing\n      // from the stream rather than doing a defensive check like this.\n      return;\n    }\n\n    chunk = this._maybeParseMsgJSON(chunk);\n    chunk = this._cleanUpNodeErrors(chunk);\n    if (chunk.tag === 'metro') {\n      this._handleMetroEvent(chunk);\n    } else if (typeof chunk.msg === 'string' && chunk.msg.match(/\\w/) && chunk.msg[0] !== '{') {\n      this._enqueueAppendLogChunk(chunk);\n    }\n  }\n\n  _handleMetroEvent(originalChunk: MetroLogRecord) {\n    const chunk = { ...originalChunk };\n    const { msg } = chunk;\n\n    if (typeof msg === 'string') {\n      if ((msg as string).includes('HTTP/1.1') && !getenv.boolish('EXPO_DEBUG', false)) {\n        // Do nothing with this message - we want to filter out network requests logged by Metro.\n      } else {\n        // If Metro crashes for some reason, it may log an error message as a plain string to stderr.\n        this._enqueueAppendLogChunk(chunk);\n      }\n      return;\n    }\n\n    switch (msg.type) {\n      // Bundle transform events\n      case 'bundle_build_started':\n      case 'bundle_transform_progressed':\n      case 'bundle_build_failed':\n      case 'bundle_build_done':\n        this._handleBundleTransformEvent(chunk);\n        return;\n\n      case 'initialize_started':\n        chunk._metroEventType = 'METRO_INITIALIZE_STARTED';\n        chunk.msg = 'Starting Metro Bundler';\n        break;\n      case 'initialize_done':\n        chunk.msg = `Started Metro Bundler`;\n        break;\n      case 'initialize_failed': {\n        // SDK <=22\n        const code = msg.error.code;\n        chunk.msg =\n          code === 'EADDRINUSE'\n            ? `Metro Bundler can't listen on port ${msg.port}. The port is in use.`\n            : `Metro Bundler failed to start. (code: ${code})`;\n        break;\n      }\n      case 'bundling_error':\n        chunk.msg =\n          this._formatModuleResolutionError(msg.error) ||\n          this._formatBundlingError(msg.error) ||\n          msg;\n        chunk.level = Logger.ERROR;\n        break;\n      case 'bundling_warning':\n        chunk.msg = msg.warning;\n        chunk.level = Logger.WARN;\n        break;\n      case 'transform_cache_reset':\n        chunk.msg =\n          'Your JavaScript transform cache is empty, rebuilding (this may take a minute).';\n        break;\n      case 'hmr_client_error':\n        chunk.msg = `A WebSocket client got a connection error. Please reload your device to get HMR working again.`;\n        break;\n      case 'global_cache_disabled':\n        if (msg.reason === 'too_many_errors') {\n          chunk.msg =\n            'The global cache is now disabled because it has been failing too many times.';\n        } else if (msg.reason === 'too_many_misses') {\n          chunk.msg = `The global cache is now disabled because it has been missing too many consecutive keys.`;\n        } else {\n          chunk.msg = `The global cache is now disabled. Reason: ${msg.reason}`;\n        }\n        break;\n      case 'worker_stdout_chunk':\n        chunk.msg = this._formatWorkerChunk('stdout', msg.chunk);\n        break;\n      case 'worker_stderr_chunk':\n        chunk.msg = this._formatWorkerChunk('stderr', msg.chunk);\n        break;\n      // Ignored events.\n      case 'client_log':\n      case 'dep_graph_loading':\n      case 'dep_graph_loaded':\n      case 'global_cache_error':\n      case 'transformer_load_started':\n      case 'transformer_load_done':\n        return;\n      default:\n        chunk.msg = `Unrecognized event: ${JSON.stringify(msg)}`;\n        break;\n    }\n    this._enqueueAppendLogChunk(chunk);\n  }\n\n  // A cache of { [buildID]: BundleDetails } which can be used to\n  // add more contextual logs. BundleDetails is currently only sent with `bundle_build_started`\n  // so we need to cache the details in order to print the platform info with other event types.\n  bundleDetailsCache: Record<string, BundleDetails> = {};\n\n  // Any event related to bundle building is handled here\n  _handleBundleTransformEvent = (chunk: MetroLogRecord) => {\n    const msg = chunk.msg as ReportableEvent;\n\n    const bundleDetails = 'buildID' in msg ? this.bundleDetailsCache[msg.buildID] || null : null;\n\n    if (msg.type === 'bundle_build_started') {\n      // Cache bundle details for later.\n      this.bundleDetailsCache[String(msg.buildID)] = msg.bundleDetails;\n      chunk._metroEventType = 'BUILD_STARTED';\n      this._handleNewBundleTransformStarted(chunk, msg.bundleDetails);\n    } else if (msg.type === 'bundle_transform_progressed' && this._bundleBuildChunkID) {\n      chunk._metroEventType = 'BUILD_PROGRESS';\n      this._handleUpdateBundleTransformProgress(chunk, bundleDetails);\n    } else if (msg.type === 'bundle_build_failed' && this._bundleBuildChunkID) {\n      chunk._metroEventType = 'BUILD_FAILED';\n      this._handleUpdateBundleTransformProgress(chunk, bundleDetails);\n    } else if (msg.type === 'bundle_build_done' && this._bundleBuildChunkID) {\n      chunk._metroEventType = 'BUILD_DONE';\n      this._handleUpdateBundleTransformProgress(chunk, bundleDetails);\n    }\n  };\n\n  static getPlatformTagForBuildDetails(bundleDetails?: BundleDetails | null) {\n    const platform = bundleDetails?.platform ?? null;\n    if (platform) {\n      const formatted = { ios: 'iOS', android: 'Android', web: 'Web' }[platform] || platform;\n      return `${chalk.bold(formatted)} `;\n    }\n\n    return '';\n  }\n\n  private _handleNewBundleTransformStarted(\n    chunk: MetroLogRecord,\n    bundleDetails: BundleDetails | null\n  ) {\n    if (this._bundleBuildChunkID) {\n      return;\n    }\n\n    this._bundleBuildChunkID = chunk.id;\n    this._bundleBuildStart = new Date();\n\n    chunk.msg = 'Building JavaScript bundle';\n\n    if (this._onStartBuildBundle) {\n      this._onStartBuildBundle({ chunk, bundleDetails });\n    } else {\n      this._enqueueAppendLogChunk(chunk);\n    }\n  }\n\n  private _handleUpdateBundleTransformProgress(\n    progressChunk: MetroLogRecord,\n    bundleDetails: BundleDetails | null\n  ) {\n    const msg = progressChunk.msg as ReportableEvent;\n\n    let percentProgress;\n    let bundleComplete = false;\n    if (msg.type === 'bundle_build_done') {\n      percentProgress = 100;\n      bundleComplete = true;\n      if (this._bundleBuildStart) {\n        const duration = new Date().getTime() - this._bundleBuildStart.getTime();\n        progressChunk.msg = `Building JavaScript bundle: finished in ${duration}ms.`;\n      } else {\n        progressChunk.msg = `Building JavaScript bundle: finished.`;\n      }\n    } else if (msg.type === 'bundle_build_failed') {\n      percentProgress = -1;\n      bundleComplete = true;\n      progressChunk.msg = `Building JavaScript bundle: error`;\n      progressChunk.level = Logger.ERROR;\n    } else if (msg.type === 'bundle_transform_progressed') {\n      if (msg.percentage) {\n        percentProgress = msg.percentage * 100;\n      } else {\n        percentProgress = (msg.transformedFileCount / msg.totalFileCount) * 100;\n        // percentProgress = Math.floor((msg.transformedFileCount / msg.totalFileCount) * 100);\n      }\n      const roundedPercentProgress = Math.floor(100 * percentProgress) / 100;\n      progressChunk.msg = `Building JavaScript bundle: ${roundedPercentProgress}%`;\n    } else {\n      return;\n    }\n\n    if (this._bundleBuildChunkID) {\n      progressChunk.id = this._bundleBuildChunkID;\n    }\n\n    if (this._onProgressBuildBundle) {\n      this._onProgressBuildBundle({\n        progress: percentProgress,\n        start: this._bundleBuildStart,\n        chunk: progressChunk,\n        bundleDetails,\n      });\n\n      if (bundleComplete) {\n        if (this._onFinishBuildBundle && this._bundleBuildStart) {\n          const error = msg.type === 'bundle_build_failed' ? 'Build failed' : null;\n          this._onFinishBuildBundle({\n            error,\n            start: this._bundleBuildStart,\n            end: new Date(),\n            chunk: progressChunk,\n            bundleDetails,\n          });\n        }\n        this._bundleBuildStart = null;\n        this._bundleBuildChunkID = null;\n      }\n    } else {\n      this._updateLogs(logs => {\n        if (!logs || !logs.length) {\n          return [];\n        }\n\n        logs.forEach(log => {\n          if (log.id === this._bundleBuildChunkID) {\n            log.msg = progressChunk.msg;\n          }\n        });\n\n        if (bundleComplete) {\n          this._bundleBuildChunkID = null;\n        }\n\n        return [...logs];\n      });\n    }\n  }\n\n  _formatModuleResolutionError(error: MetroError): string | null {\n    if (!error.message) {\n      return null;\n    }\n    const match = /^Unable to resolve module `(.+?)`/.exec(error.message);\n    const originModulePath = error.originModulePath as string | null;\n    if (!match || !originModulePath) {\n      return null;\n    }\n    const moduleName = match[1];\n    const relativePath = path.relative(this._projectRoot, originModulePath);\n\n    const DOCS_PAGE_URL =\n      'https://docs.expo.dev/workflow/using-libraries/#using-third-party-libraries';\n\n    if (NODE_STDLIB_MODULES.includes(moduleName)) {\n      if (originModulePath.includes('node_modules')) {\n        return `The package at \"${relativePath}\" attempted to import the Node standard library module \"${moduleName}\". It failed because the native React runtime does not include the Node standard library. Read more at ${DOCS_PAGE_URL}`;\n      } else {\n        return `You attempted attempted to import the Node standard library module \"${moduleName}\" from \"${relativePath}\". It failed because the native React runtime does not include the Node standard library. Read more at ${DOCS_PAGE_URL}`;\n      }\n    }\n    return `Unable to resolve \"${moduleName}\" from \"${relativePath}\"`;\n  }\n\n  _formatBundlingError(error: MetroError): string | null {\n    let message = error.message;\n    if (!message && Array.isArray(error.errors) && error.errors.length) {\n      message = (error.errors[0] as any).description;\n    }\n    if (!message) {\n      return null;\n    }\n\n    message = chalk.red(message);\n\n    const snippet = (this._getSnippetForError && this._getSnippetForError(error)) || error.snippet;\n    if (snippet) {\n      message += `\\n${snippet}`;\n    }\n\n    // Import errors are already pretty useful and don't need extra info added to them.\n    const isAmbiguousError = !error.name || ['SyntaxError'].includes(error.name);\n    // When you have a basic syntax error in application code it will tell you the file\n    // and usually also provide a well informed error.\n    const isComprehensiveTransformError = error.type === 'TransformError' && error.filename;\n\n    // console.log(require('util').inspect(error, { depth: 4 }));\n    if (error.stack && isAmbiguousError && !isComprehensiveTransformError) {\n      message += `\\n${chalk.gray(error.stack)}`;\n    }\n    return message;\n  }\n\n  _formatWorkerChunk(origin: 'stdout' | 'stderr', chunk: string) {\n    return chunk;\n    // const lines = chunk.split('\\n');\n    // if (lines.length >= 1 && lines[lines.length - 1] === '') {\n    //   lines.splice(lines.length - 1, 1);\n    // }\n    // return lines.map(line => `transform[${origin}]: ${line}`).join('\\n');\n  }\n\n  _enqueueAppendLogChunk(chunk: LogRecord) {\n    if (!chunk.shouldHide) {\n      this._logsToAdd.push(chunk);\n      this._enqueueFlushLogsToAdd();\n    }\n  }\n\n  _enqueueFlushLogsToAdd = () => {\n    this._updateLogs(logs => {\n      if (this._logsToAdd.length === 0) {\n        return logs;\n      }\n\n      const nextLogs = logs.concat(this._logsToAdd);\n      this._logsToAdd = [];\n      return nextLogs;\n    });\n  };\n\n  _maybeParseMsgJSON(chunk: LogRecord) {\n    try {\n      const parsedMsg = JSON.parse(chunk.msg);\n      chunk.msg = parsedMsg;\n    } catch {\n      // non-JSON message\n    }\n\n    return chunk;\n  }\n\n  _cleanUpNodeErrors = (chunk: LogRecord) => {\n    if (typeof chunk.msg !== 'string') {\n      return chunk;\n    }\n\n    if (chunk.msg.match(/\\(node:.\\d*\\)/)) {\n      // Example: (node:13817) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 1): SyntaxError: SyntaxError /Users/brent/universe/apps/new-project-template/main.js: Unexpected token (10:6)\n      // The first part of this is totally useless, so let's remove it.\n      if (chunk.msg.match(/UnhandledPromiseRejectionWarning/)) {\n        chunk.msg = chunk.msg.replace(/\\(node:.*\\(rejection .*\\):/, '');\n        if (chunk.msg.match(/SyntaxError: SyntaxError/)) {\n          chunk.msg = chunk.msg.replace('SyntaxError: ', '');\n        }\n      } else if (chunk.msg.match(/DeprecationWarning/)) {\n        chunk.msg = '';\n      }\n    }\n\n    return chunk;\n  };\n}\n\nconst NODE_STDLIB_MODULES = [\n  'assert',\n  'async_hooks',\n  'buffer',\n  'child_process',\n  'cluster',\n  'crypto',\n  'dgram',\n  'dns',\n  'domain',\n  'events',\n  'fs',\n  'http',\n  'https',\n  'net',\n  'os',\n  'path',\n  'punycode',\n  'querystring',\n  'readline',\n  'repl',\n  'stream',\n  'string_decoder',\n  'tls',\n  'tty',\n  'url',\n  'util',\n  'v8',\n  'vm',\n  'zlib',\n];\n"],"mappings":"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"}