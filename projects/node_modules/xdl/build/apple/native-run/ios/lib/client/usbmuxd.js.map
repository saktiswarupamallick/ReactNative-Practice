{"version":3,"file":"usbmuxd.js","names":["_plist","data","_interopRequireDefault","require","_debug","net","_interopRequireWildcard","_parseBinaryPlistAsync","_usbmux","_client","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","debug","Debug","isUsbmuxdConnectResponse","resp","MessageType","Number","undefined","isUsbmuxdDeviceResponse","DeviceList","isUsbmuxdPairRecordResponse","PairRecordData","UsbmuxdClient","ServiceClient","constructor","socket","UsbmuxProtocolClient","connectUsbmuxdSocket","process","platform","connect","port","host","path","device","DeviceID","protocolClient","sendMessage","messageType","extraFields","PortNumber","htons","ResponseError","getDevices","getDevice","udid","devices","length","Error","Properties","SerialNumber","readPairRecord","PairRecordID","BPLIST_MAGIC","Buffer","from","compare","parsePlistBuffer","plist","parse","toString","exports","n"],"sources":["../../../../../../src/apple/native-run/ios/lib/client/usbmuxd.ts"],"sourcesContent":["/**\n * Copyright (c) 2021 Expo, Inc.\n * Copyright (c) 2018 Drifty Co.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport plist from '@expo/plist';\nimport Debug from 'debug';\nimport * as net from 'net';\n\nimport { parsePlistBuffer } from '../../../../../utils/parseBinaryPlistAsync';\nimport { UsbmuxProtocolClient } from '../protocol/usbmux';\nimport { ResponseError, ServiceClient } from './client';\n\nconst debug = Debug('expo:xdl:ios:lib:client:usbmuxd');\n\nexport interface UsbmuxdDeviceProperties {\n  ConnectionSpeed: number;\n  ConnectionType: 'USB';\n  DeviceID: number;\n  LocationID: number;\n  ProductID: number;\n  SerialNumber: string;\n}\n\nexport interface UsbmuxdDevice {\n  DeviceID: number;\n  MessageType: 'Attached'; // TODO: what else?\n  Properties: UsbmuxdDeviceProperties;\n}\n\nexport interface UsbmuxdConnectResponse {\n  MessageType: 'Result';\n  Number: number;\n}\n\nexport interface UsbmuxdDeviceResponse {\n  DeviceList: UsbmuxdDevice[];\n}\n\nexport interface UsbmuxdPairRecordResponse {\n  PairRecordData: Buffer;\n}\n\nexport interface UsbmuxdPairRecord {\n  DeviceCertificate: Buffer;\n  EscrowBag: Buffer;\n  HostCertificate: Buffer;\n  HostID: string;\n  HostPrivateKey: Buffer;\n  RootCertificate: Buffer;\n  RootPrivateKey: Buffer;\n  SystemBUID: string;\n  WiFiMACAddress: string;\n}\n\nfunction isUsbmuxdConnectResponse(resp: any): resp is UsbmuxdConnectResponse {\n  return resp.MessageType === 'Result' && resp.Number !== undefined;\n}\n\nfunction isUsbmuxdDeviceResponse(resp: any): resp is UsbmuxdDeviceResponse {\n  return resp.DeviceList !== undefined;\n}\n\nfunction isUsbmuxdPairRecordResponse(resp: any): resp is UsbmuxdPairRecordResponse {\n  return resp.PairRecordData !== undefined;\n}\n\nexport class UsbmuxdClient extends ServiceClient<UsbmuxProtocolClient> {\n  constructor(public socket: net.Socket) {\n    super(socket, new UsbmuxProtocolClient(socket));\n  }\n\n  static connectUsbmuxdSocket() {\n    debug('connectUsbmuxdSocket');\n    if (process.platform === 'win32') {\n      return net.connect({ port: 27015, host: 'localhost' });\n    } else {\n      return net.connect({ path: '/var/run/usbmuxd' });\n    }\n  }\n\n  async connect(device: UsbmuxdDevice, port: number) {\n    debug(`connect: ${device.DeviceID} on port ${port}`);\n\n    const resp = await this.protocolClient.sendMessage({\n      messageType: 'Connect',\n      extraFields: {\n        DeviceID: device.DeviceID,\n        PortNumber: htons(port),\n      },\n    });\n\n    if (isUsbmuxdConnectResponse(resp) && resp.Number === 0) {\n      return this.protocolClient.socket;\n    } else {\n      throw new ResponseError(\n        `There was an error connecting to ${device.DeviceID} on port ${port}`,\n        resp\n      );\n    }\n  }\n\n  async getDevices() {\n    debug('getDevices');\n\n    const resp = await this.protocolClient.sendMessage({\n      messageType: 'ListDevices',\n    });\n\n    if (isUsbmuxdDeviceResponse(resp)) {\n      return resp.DeviceList;\n    } else {\n      throw new ResponseError('Invalid response from getDevices', resp);\n    }\n  }\n\n  async getDevice(udid?: string) {\n    debug(`getDevice ${udid ? 'udid: ' + udid : ''}`);\n    const devices = await this.getDevices();\n\n    if (!devices.length) {\n      throw new Error('No devices found');\n    }\n\n    if (!udid) {\n      return devices[0];\n    }\n\n    for (const device of devices) {\n      if (device.Properties && device.Properties.SerialNumber === udid) {\n        return device;\n      }\n    }\n\n    throw new Error(`No device with udid ${udid} found`);\n  }\n\n  async readPairRecord(udid: string): Promise<UsbmuxdPairRecord> {\n    debug(`readPairRecord: ${udid}`);\n\n    const resp = await this.protocolClient.sendMessage({\n      messageType: 'ReadPairRecord',\n      extraFields: { PairRecordID: udid },\n    });\n\n    if (isUsbmuxdPairRecordResponse(resp)) {\n      // the pair record can be created as a binary plist\n      const BPLIST_MAGIC = Buffer.from('bplist00');\n      if (BPLIST_MAGIC.compare(resp.PairRecordData, 0, 8) === 0) {\n        debug('Binary plist pair record detected.');\n        return parsePlistBuffer(resp.PairRecordData)[0];\n      } else {\n        // TODO: use parsePlistBuffer\n        return plist.parse(resp.PairRecordData.toString()) as any; // TODO: type guard\n      }\n    } else {\n      throw new ResponseError(`There was an error reading pair record for udid: ${udid}`, resp);\n    }\n  }\n}\n\nfunction htons(n: number) {\n  return ((n & 0xff) << 8) | ((n >> 8) & 0xff);\n}\n"],"mappings":"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"}