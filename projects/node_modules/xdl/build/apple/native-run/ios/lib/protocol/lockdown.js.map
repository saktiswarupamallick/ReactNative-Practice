{"version":3,"file":"lockdown.js","names":["_plist","data","_interopRequireDefault","require","_debug","_libErrors","_protocol","obj","__esModule","default","debug","Debug","LOCKDOWN_HEADER_SIZE","exports","isDefined","val","isLockdownResponse","resp","Status","isLockdownErrorResponse","Error","LockdownProtocolClient","ProtocolClient","constructor","socket","ProtocolReaderFactory","LockdownProtocolReader","LockdownProtocolWriter","PlistProtocolReader","callback","parseHeader","readUInt32BE","parseBody","JSON","stringify","IOSLibError","errorMessage","Service","Request","write","plistData","plistMessage","plist","build","header","Buffer","alloc","writeUInt32BE","length"],"sources":["../../../../../../src/apple/native-run/ios/lib/protocol/lockdown.ts"],"sourcesContent":["/**\n * Copyright (c) 2021 Expo, Inc.\n * Copyright (c) 2018 Drifty Co.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport plist from '@expo/plist';\nimport Debug from 'debug';\nimport type * as net from 'net';\n\nimport { IOSLibError } from '../lib-errors';\nimport type { ProtocolWriter } from './protocol';\nimport { PlistProtocolReader, ProtocolClient, ProtocolReaderFactory } from './protocol';\n\nconst debug = Debug('expo:xdl:ios:lib:protocol:lockdown');\nexport const LOCKDOWN_HEADER_SIZE = 4;\n\nexport interface LockdownCommand {\n  Command: string;\n  [key: string]: any;\n}\n\nexport interface LockdownResponse {\n  Status: string;\n  [key: string]: any;\n}\n\nexport interface LockdownErrorResponse {\n  Error: string;\n  Request?: string;\n  Service?: string;\n}\n\nexport interface LockdownRequest {\n  Request: string;\n  [key: string]: any;\n}\n\nfunction isDefined(val: any) {\n  return typeof val !== 'undefined';\n}\n\nexport function isLockdownResponse(resp: any): resp is LockdownResponse {\n  return isDefined(resp.Status);\n}\n\nexport function isLockdownErrorResponse(resp: any): resp is LockdownErrorResponse {\n  return isDefined(resp.Error);\n}\n\nexport class LockdownProtocolClient<\n  MessageType extends LockdownRequest | LockdownCommand = LockdownRequest\n> extends ProtocolClient<MessageType> {\n  constructor(socket: net.Socket) {\n    super(socket, new ProtocolReaderFactory(LockdownProtocolReader), new LockdownProtocolWriter());\n  }\n}\n\nexport class LockdownProtocolReader extends PlistProtocolReader {\n  constructor(callback: (data: any) => any) {\n    super(LOCKDOWN_HEADER_SIZE, callback);\n  }\n\n  parseHeader(data: Buffer) {\n    return data.readUInt32BE(0);\n  }\n\n  parseBody(data: Buffer) {\n    const resp = super.parseBody(data);\n    debug(`Response: ${JSON.stringify(resp)}`);\n    if (isLockdownErrorResponse(resp)) {\n      if (resp.Error === 'DeviceLocked') {\n        throw new IOSLibError('Device is currently locked.', 'DeviceLocked');\n      }\n\n      if (resp.Error === 'InvalidService') {\n        let errorMessage = `${resp.Error}: ${resp.Service} (request: ${resp.Request})`;\n        if (resp.Service === 'com.apple.debugserver') {\n          errorMessage +=\n            '\\nTry reconnecting your device. You can also debug service logs with `export DEBUG=expo:xdl:ios:*`';\n        }\n        throw new Error(errorMessage);\n      }\n\n      throw new Error(resp.Error);\n    }\n    return resp;\n  }\n}\n\nexport class LockdownProtocolWriter implements ProtocolWriter {\n  write(socket: net.Socket, plistData: any) {\n    debug(`socket write: ${JSON.stringify(plistData)}`);\n    const plistMessage = plist.build(plistData);\n    const header = Buffer.alloc(LOCKDOWN_HEADER_SIZE);\n    header.writeUInt32BE(plistMessage.length, 0);\n    socket.write(header);\n    socket.write(plistMessage);\n  }\n}\n"],"mappings":";;;;;;;;AAQA,SAAAA,OAAA;EAAA,MAAAC,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAH,MAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAG,OAAA;EAAA,MAAAH,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAC,MAAA,YAAAA,CAAA;IAAA,OAAAH,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAGA,SAAAI,WAAA;EAAA,MAAAJ,IAAA,GAAAE,OAAA;EAAAE,UAAA,YAAAA,CAAA;IAAA,OAAAJ,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEA,SAAAK,UAAA;EAAA,MAAAL,IAAA,GAAAE,OAAA;EAAAG,SAAA,YAAAA,CAAA;IAAA,OAAAL,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAAwF,SAAAC,uBAAAK,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAdxF;AACA;AACA;AACA;AACA;AACA;AACA;;AAUA,MAAMG,KAAK,GAAG,IAAAC,gBAAK,EAAC,oCAAoC,CAAC;AAClD,MAAMC,oBAAoB,GAAG,CAAC;AAACC,OAAA,CAAAD,oBAAA,GAAAA,oBAAA;AAuBtC,SAASE,SAASA,CAACC,GAAQ,EAAE;EAC3B,OAAO,OAAOA,GAAG,KAAK,WAAW;AACnC;AAEO,SAASC,kBAAkBA,CAACC,IAAS,EAA4B;EACtE,OAAOH,SAAS,CAACG,IAAI,CAACC,MAAM,CAAC;AAC/B;AAEO,SAASC,uBAAuBA,CAACF,IAAS,EAAiC;EAChF,OAAOH,SAAS,CAACG,IAAI,CAACG,KAAK,CAAC;AAC9B;AAEO,MAAMC,sBAAsB,SAEzBC,0BAAc,CAAc;EACpCC,WAAWA,CAACC,MAAkB,EAAE;IAC9B,KAAK,CAACA,MAAM,EAAE,KAAIC,iCAAqB,EAACC,sBAAsB,CAAC,EAAE,IAAIC,sBAAsB,CAAC,CAAC,CAAC;EAChG;AACF;AAACd,OAAA,CAAAQ,sBAAA,GAAAA,sBAAA;AAEM,MAAMK,sBAAsB,SAASE,+BAAmB,CAAC;EAC9DL,WAAWA,CAACM,QAA4B,EAAE;IACxC,KAAK,CAACjB,oBAAoB,EAAEiB,QAAQ,CAAC;EACvC;EAEAC,WAAWA,CAAC7B,IAAY,EAAE;IACxB,OAAOA,IAAI,CAAC8B,YAAY,CAAC,CAAC,CAAC;EAC7B;EAEAC,SAASA,CAAC/B,IAAY,EAAE;IACtB,MAAMgB,IAAI,GAAG,KAAK,CAACe,SAAS,CAAC/B,IAAI,CAAC;IAClCS,KAAK,CAAE,aAAYuB,IAAI,CAACC,SAAS,CAACjB,IAAI,CAAE,EAAC,CAAC;IAC1C,IAAIE,uBAAuB,CAACF,IAAI,CAAC,EAAE;MACjC,IAAIA,IAAI,CAACG,KAAK,KAAK,cAAc,EAAE;QACjC,MAAM,KAAIe,wBAAW,EAAC,6BAA6B,EAAE,cAAc,CAAC;MACtE;MAEA,IAAIlB,IAAI,CAACG,KAAK,KAAK,gBAAgB,EAAE;QACnC,IAAIgB,YAAY,GAAI,GAAEnB,IAAI,CAACG,KAAM,KAAIH,IAAI,CAACoB,OAAQ,cAAapB,IAAI,CAACqB,OAAQ,GAAE;QAC9E,IAAIrB,IAAI,CAACoB,OAAO,KAAK,uBAAuB,EAAE;UAC5CD,YAAY,IACV,oGAAoG;QACxG;QACA,MAAM,IAAIhB,KAAK,CAACgB,YAAY,CAAC;MAC/B;MAEA,MAAM,IAAIhB,KAAK,CAACH,IAAI,CAACG,KAAK,CAAC;IAC7B;IACA,OAAOH,IAAI;EACb;AACF;AAACJ,OAAA,CAAAa,sBAAA,GAAAA,sBAAA;AAEM,MAAMC,sBAAsB,CAA2B;EAC5DY,KAAKA,CAACf,MAAkB,EAAEgB,SAAc,EAAE;IACxC9B,KAAK,CAAE,iBAAgBuB,IAAI,CAACC,SAAS,CAACM,SAAS,CAAE,EAAC,CAAC;IACnD,MAAMC,YAAY,GAAGC,gBAAK,CAACC,KAAK,CAACH,SAAS,CAAC;IAC3C,MAAMI,MAAM,GAAGC,MAAM,CAACC,KAAK,CAAClC,oBAAoB,CAAC;IACjDgC,MAAM,CAACG,aAAa,CAACN,YAAY,CAACO,MAAM,EAAE,CAAC,CAAC;IAC5CxB,MAAM,CAACe,KAAK,CAACK,MAAM,CAAC;IACpBpB,MAAM,CAACe,KAAK,CAACE,YAAY,CAAC;EAC5B;AACF;AAAC5B,OAAA,CAAAc,sBAAA,GAAAA,sBAAA"}