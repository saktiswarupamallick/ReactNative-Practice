{"version":3,"file":"protocol.js","names":["_plist","data","_interopRequireDefault","require","_parseBinaryPlistAsync","obj","__esModule","default","_defineProperty","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","BPLIST_MAGIC","Buffer","from","ProtocolReaderFactory","constructor","ProtocolReader","create","callback","exports","headerSize","alloc","onData","bind","buffer","concat","bodyLength","length","parseHeader","slice","parseBody","body","err","PlistProtocolReader","compare","parsePlistBuffer","plist","parse","toString","ProtocolClient","socket","readerFactory","writer","sendMessage","msg","Promise","resolve","reject","reader","resp","removeListener","on","write"],"sources":["../../../../../../src/apple/native-run/ios/lib/protocol/protocol.ts"],"sourcesContent":["/**\n * Copyright (c) 2021 Expo, Inc.\n * Copyright (c) 2018 Drifty Co.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport plist from '@expo/plist';\nimport type * as net from 'net';\n\nimport { parsePlistBuffer } from '../../../../../utils/parseBinaryPlistAsync';\n\nconst BPLIST_MAGIC = Buffer.from('bplist00');\n\nexport type ProtocolReaderCallback = (resp: any, err?: Error) => void;\n\nexport class ProtocolReaderFactory<T> {\n  constructor(private ProtocolReader: new (callback: ProtocolReaderCallback) => T) {}\n\n  create(callback: (resp: any, err?: Error) => void): T {\n    return new this.ProtocolReader(callback);\n  }\n}\n\nexport abstract class ProtocolReader {\n  protected body!: Buffer; // TODO: ! -> ?\n  protected bodyLength!: number; // TODO: ! -> ?\n  protected buffer = Buffer.alloc(0);\n  constructor(protected headerSize: number, protected callback: ProtocolReaderCallback) {\n    this.onData = this.onData.bind(this);\n  }\n\n  /** Returns length of body, or -1 if header doesn't contain length */\n  protected abstract parseHeader(data: Buffer): number;\n  protected abstract parseBody(data: Buffer): any;\n\n  onData(data?: Buffer) {\n    try {\n      // if there's data, add it on to existing buffer\n      this.buffer = data ? Buffer.concat([this.buffer, data]) : this.buffer;\n      // we haven't gotten the body length from the header yet\n      if (!this.bodyLength) {\n        if (this.buffer.length < this.headerSize) {\n          // partial header, wait for rest\n          return;\n        }\n        this.bodyLength = this.parseHeader(this.buffer);\n        // move on to body\n        this.buffer = this.buffer.slice(this.headerSize);\n        if (!this.buffer.length) {\n          // only got header, wait for body\n          return;\n        }\n      }\n      if (this.buffer.length < this.bodyLength) {\n        // wait for rest of body\n        return;\n      }\n\n      if (this.bodyLength === -1) {\n        this.callback(this.parseBody(this.buffer));\n        this.buffer = Buffer.alloc(0);\n      } else {\n        this.body = this.buffer.slice(0, this.bodyLength);\n        this.bodyLength -= this.body.length;\n        if (!this.bodyLength) {\n          this.callback(this.parseBody(this.body));\n        }\n        this.buffer = this.buffer.slice(this.body.length);\n        // There are multiple messages here, call parse again\n        if (this.buffer.length) {\n          this.onData();\n        }\n      }\n    } catch (err: any) {\n      this.callback(null, err);\n    }\n  }\n}\n\nexport abstract class PlistProtocolReader extends ProtocolReader {\n  protected parseBody(body: Buffer) {\n    if (BPLIST_MAGIC.compare(body, 0, 8) === 0) {\n      return parsePlistBuffer(body);\n    } else {\n      return plist.parse(body.toString('utf8'));\n    }\n  }\n}\n\nexport interface ProtocolWriter {\n  write(sock: net.Socket, msg: any): void;\n}\n\nexport abstract class ProtocolClient<MessageType = any> {\n  constructor(\n    public socket: net.Socket,\n    protected readerFactory: ProtocolReaderFactory<ProtocolReader>,\n    protected writer: ProtocolWriter\n  ) {}\n\n  sendMessage<ResponseType = any>(msg: MessageType): Promise<ResponseType>;\n  sendMessage<CallbackType = void, ResponseType = any>(\n    msg: MessageType,\n    callback: (response: ResponseType, resolve: any, reject: any) => void\n  ): Promise<CallbackType>;\n  sendMessage<CallbackType = void, ResponseType = any>(\n    msg: MessageType,\n    callback?: (response: ResponseType, resolve: any, reject: any) => void\n  ): Promise<CallbackType | ResponseType> {\n    return new Promise<ResponseType | CallbackType>((resolve, reject) => {\n      const reader = this.readerFactory.create(async (resp: ResponseType, err?: Error) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        if (callback) {\n          callback(\n            resp,\n            (value: any) => {\n              this.socket.removeListener('data', reader.onData);\n              resolve(value);\n            },\n            reject\n          );\n        } else {\n          this.socket.removeListener('data', reader.onData);\n          resolve(resp);\n        }\n      });\n      this.socket.on('data', reader.onData);\n      this.writer.write(this.socket, msg);\n    });\n  }\n}\n"],"mappings":"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"}