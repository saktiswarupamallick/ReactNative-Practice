{"version":3,"file":"usbmux.js","names":["_plist","data","_interopRequireDefault","require","_debug","_protocol","obj","__esModule","default","_defineProperty","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","debug","Debug","USBMUXD_HEADER_SIZE","exports","UsbmuxProtocolClient","ProtocolClient","constructor","socket","ProtocolReaderFactory","UsbmuxProtocolReader","UsbmuxProtocolWriter","PlistProtocolReader","callback","parseHeader","readUInt32LE","parseBody","resp","JSON","stringify","write","msg","messageType","extraFields","plistMessage","plist","build","BundleID","ClientVersionString","MessageType","ProgName","kLibUSBMuxVersion","dataSize","length","protocolVersion","messageCode","header","Buffer","alloc","writeUInt32LE","useTag"],"sources":["../../../../../../src/apple/native-run/ios/lib/protocol/usbmux.ts"],"sourcesContent":["/**\n * Copyright (c) 2021 Expo, Inc.\n * Copyright (c) 2018 Drifty Co.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport plist from '@expo/plist';\nimport Debug from 'debug';\nimport type * as net from 'net';\n\nimport type { ProtocolWriter } from './protocol';\nimport { PlistProtocolReader, ProtocolClient, ProtocolReaderFactory } from './protocol';\n\nconst debug = Debug('expo:xdl:ios:lib:protocol:usbmux');\n\nexport const USBMUXD_HEADER_SIZE = 16;\n\nexport interface UsbmuxMessage {\n  messageType: string;\n  extraFields?: { [key: string]: any };\n}\n\nexport class UsbmuxProtocolClient extends ProtocolClient<UsbmuxMessage> {\n  constructor(socket: net.Socket) {\n    super(socket, new ProtocolReaderFactory(UsbmuxProtocolReader), new UsbmuxProtocolWriter());\n  }\n}\n\nexport class UsbmuxProtocolReader extends PlistProtocolReader {\n  constructor(callback: (data: any) => any) {\n    super(USBMUXD_HEADER_SIZE, callback);\n  }\n\n  parseHeader(data: Buffer) {\n    return data.readUInt32LE(0) - USBMUXD_HEADER_SIZE;\n  }\n\n  parseBody(data: Buffer) {\n    const resp = super.parseBody(data);\n    debug(`Response: ${JSON.stringify(resp)}`);\n    return resp;\n  }\n}\n\nexport class UsbmuxProtocolWriter implements ProtocolWriter {\n  private useTag = 0;\n\n  write(socket: net.Socket, msg: UsbmuxMessage) {\n    // TODO Usbmux message type\n    debug(`socket write: ${JSON.stringify(msg)}`);\n    const { messageType, extraFields } = msg;\n    const plistMessage = plist.build({\n      BundleID: 'dev.expo.native-run', // TODO\n      ClientVersionString: 'usbmux.js', // TODO\n      MessageType: messageType,\n      ProgName: 'native-run', // TODO\n      kLibUSBMuxVersion: 3,\n      ...extraFields,\n    });\n\n    const dataSize = plistMessage ? plistMessage.length : 0;\n    const protocolVersion = 1;\n    const messageCode = 8;\n\n    const header = Buffer.alloc(USBMUXD_HEADER_SIZE);\n    header.writeUInt32LE(USBMUXD_HEADER_SIZE + dataSize, 0);\n    header.writeUInt32LE(protocolVersion, 4);\n    header.writeUInt32LE(messageCode, 8);\n    header.writeUInt32LE(this.useTag++, 12); // TODO\n    socket.write(header);\n    socket.write(plistMessage);\n  }\n}\n"],"mappings":"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"}