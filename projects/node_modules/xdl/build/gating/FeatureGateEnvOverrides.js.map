{"version":3,"file":"FeatureGateEnvOverrides.js","names":["_nullthrows","data","_interopRequireDefault","require","_internal","obj","__esModule","default","_defineProperty","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","FeatureGateEnvOverrides","constructor","Map","enable","disable","Env","getFeatureGateOverrides","overrideEnableGateKeys","Set","overrideDisableGateKeys","overrideEnableKey","has","map","set","overrideDisableGateKey","isOverridden","_this$map$has","getOverride","nullthrows","get","exports"],"sources":["../../src/gating/FeatureGateEnvOverrides.ts"],"sourcesContent":["import nullthrows from 'nullthrows';\n\nimport { Env, FeatureGateKey } from '../internal';\n\nexport default class FeatureGateEnvOverrides {\n  private readonly map = new Map<string, boolean>();\n\n  constructor() {\n    const { enable, disable } = Env.getFeatureGateOverrides();\n    const overrideEnableGateKeys = new Set(enable);\n    const overrideDisableGateKeys = new Set(disable);\n\n    for (const overrideEnableKey of overrideEnableGateKeys) {\n      if (overrideDisableGateKeys.has(overrideEnableKey)) {\n        continue;\n      }\n      this.map.set(overrideEnableKey, true);\n    }\n    for (const overrideDisableGateKey of overrideDisableGateKeys) {\n      this.map.set(overrideDisableGateKey, false);\n    }\n  }\n\n  public isOverridden(key: FeatureGateKey): boolean {\n    return this.map.has(key) ?? false;\n  }\n\n  public getOverride(key: FeatureGateKey): boolean {\n    return nullthrows(this.map.get(key));\n  }\n}\n"],"mappings":";;;;;;AAAA,SAAAA,YAAA;EAAA,MAAAC,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAH,WAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEA,SAAAG,UAAA;EAAA,MAAAH,IAAA,GAAAE,OAAA;EAAAC,SAAA,YAAAA,CAAA;IAAA,OAAAH,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAAkD,SAAAC,uBAAAG,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAAA,SAAAG,gBAAAH,GAAA,EAAAI,GAAA,EAAAC,KAAA,IAAAD,GAAA,GAAAE,cAAA,CAAAF,GAAA,OAAAA,GAAA,IAAAJ,GAAA,IAAAO,MAAA,CAAAC,cAAA,CAAAR,GAAA,EAAAI,GAAA,IAAAC,KAAA,EAAAA,KAAA,EAAAI,UAAA,QAAAC,YAAA,QAAAC,QAAA,oBAAAX,GAAA,CAAAI,GAAA,IAAAC,KAAA,WAAAL,GAAA;AAAA,SAAAM,eAAAM,GAAA,QAAAR,GAAA,GAAAS,YAAA,CAAAD,GAAA,2BAAAR,GAAA,gBAAAA,GAAA,GAAAU,MAAA,CAAAV,GAAA;AAAA,SAAAS,aAAAE,KAAA,EAAAC,IAAA,eAAAD,KAAA,iBAAAA,KAAA,kBAAAA,KAAA,MAAAE,IAAA,GAAAF,KAAA,CAAAG,MAAA,CAAAC,WAAA,OAAAF,IAAA,KAAAG,SAAA,QAAAC,GAAA,GAAAJ,IAAA,CAAAK,IAAA,CAAAP,KAAA,EAAAC,IAAA,2BAAAK,GAAA,sBAAAA,GAAA,YAAAE,SAAA,4DAAAP,IAAA,gBAAAF,MAAA,GAAAU,MAAA,EAAAT,KAAA;AAEnC,MAAMU,uBAAuB,CAAC;EAG3CC,WAAWA,CAAA,EAAG;IAAAvB,eAAA,cAFS,IAAIwB,GAAG,CAAkB,CAAC;IAG/C,MAAM;MAAEC,MAAM;MAAEC;IAAQ,CAAC,GAAGC,eAAG,CAACC,uBAAuB,CAAC,CAAC;IACzD,MAAMC,sBAAsB,GAAG,IAAIC,GAAG,CAACL,MAAM,CAAC;IAC9C,MAAMM,uBAAuB,GAAG,IAAID,GAAG,CAACJ,OAAO,CAAC;IAEhD,KAAK,MAAMM,iBAAiB,IAAIH,sBAAsB,EAAE;MACtD,IAAIE,uBAAuB,CAACE,GAAG,CAACD,iBAAiB,CAAC,EAAE;QAClD;MACF;MACA,IAAI,CAACE,GAAG,CAACC,GAAG,CAACH,iBAAiB,EAAE,IAAI,CAAC;IACvC;IACA,KAAK,MAAMI,sBAAsB,IAAIL,uBAAuB,EAAE;MAC5D,IAAI,CAACG,GAAG,CAACC,GAAG,CAACC,sBAAsB,EAAE,KAAK,CAAC;IAC7C;EACF;EAEOC,YAAYA,CAACpC,GAAmB,EAAW;IAAA,IAAAqC,aAAA;IAChD,QAAAA,aAAA,GAAO,IAAI,CAACJ,GAAG,CAACD,GAAG,CAAChC,GAAG,CAAC,cAAAqC,aAAA,cAAAA,aAAA,GAAI,KAAK;EACnC;EAEOC,WAAWA,CAACtC,GAAmB,EAAW;IAC/C,OAAO,IAAAuC,qBAAU,EAAC,IAAI,CAACN,GAAG,CAACO,GAAG,CAACxC,GAAG,CAAC,CAAC;EACtC;AACF;AAACyC,OAAA,CAAA3C,OAAA,GAAAuB,uBAAA"}