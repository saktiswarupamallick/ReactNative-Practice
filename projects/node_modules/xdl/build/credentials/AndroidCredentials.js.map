{"version":3,"file":"AndroidCredentials.js","names":["_spawnAsync","data","_interopRequireDefault","require","_crypto","_fsExtra","_uuid","_internal","obj","__esModule","default","log","logger","global","exportCertBinary","keystorePath","keystorePassword","keyAlias","certFile","spawnAsync","err","code","warn","info","stdout","stderr","error","exportCertBase64","logKeystoreHashes","keystoreInfo","linePrefix","fs","readFile","googleHash","crypto","createHash","update","digest","toUpperCase","googleHash256","fbHash","replace","unlink","createKeystore","keyPassword","androidPackage","generateUploadKeystore","uploadKeystorePath","experienceName","keystoreData","uuidv4","Buffer","from","toString"],"sources":["../../src/credentials/AndroidCredentials.ts"],"sourcesContent":["import spawnAsync, { SpawnResult } from '@expo/spawn-async';\nimport crypto from 'crypto';\nimport fs from 'fs-extra';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { Logger as logger } from '../internal';\n\nconst log = logger.global;\n\nexport type Keystore = {\n  keystore: string;\n  keystorePassword: string;\n  keyPassword: string;\n  keyAlias: string;\n};\n\nexport type KeystoreInfo = {\n  keystorePath: string;\n  keystorePassword: string;\n  keyPassword: string;\n  keyAlias: string;\n};\n\nasync function exportCertBinary(\n  {\n    keystorePath,\n    keystorePassword,\n    keyAlias,\n  }: Pick<KeystoreInfo, 'keystorePath' | 'keystorePassword' | 'keyAlias'>,\n  certFile: string\n): Promise<SpawnResult> {\n  try {\n    return spawnAsync('keytool', [\n      '-exportcert',\n      '-keystore',\n      keystorePath,\n      '-storepass',\n      keystorePassword,\n      '-alias',\n      keyAlias,\n      '-file',\n      certFile,\n      '-noprompt',\n      '-storetype',\n      'JKS',\n    ]);\n  } catch (err: any) {\n    if (err.code === 'ENOENT') {\n      log.warn('Are you sure you have keytool installed?');\n      log.info('keytool is a part of OpenJDK: https://openjdk.java.net/');\n      log.info('Also make sure that keytool is in your PATH after installation.');\n    }\n    if (err.stdout) {\n      log.info(err.stdout);\n    }\n    if (err.stderr) {\n      log.error(err.stderr);\n    }\n    throw err;\n  }\n}\n\nexport async function exportCertBase64(\n  {\n    keystorePath,\n    keystorePassword,\n    keyAlias,\n  }: Pick<KeystoreInfo, 'keystorePath' | 'keystorePassword' | 'keyAlias'>,\n  certFile: string\n): Promise<SpawnResult> {\n  try {\n    return spawnAsync('keytool', [\n      '-export',\n      '-rfc',\n      '-keystore',\n      keystorePath,\n      '-storepass',\n      keystorePassword,\n      '-alias',\n      keyAlias,\n      '-file',\n      certFile,\n      '-noprompt',\n      '-storetype',\n      'JKS',\n    ]);\n  } catch (err: any) {\n    if (err.code === 'ENOENT') {\n      log.warn('Are you sure you have keytool installed?');\n      log.info('keytool is a part of OpenJDK: https://openjdk.java.net/');\n      log.info('Also make sure that keytool is in your PATH after installation.');\n    }\n    if (err.stdout) {\n      log.info(err.stdout);\n    }\n    if (err.stderr) {\n      log.error(err.stderr);\n    }\n    throw err;\n  }\n}\n\nexport async function logKeystoreHashes(keystoreInfo: KeystoreInfo, linePrefix: string = '') {\n  const { keystorePath } = keystoreInfo;\n  const certFile = `${keystorePath}.cer`;\n  try {\n    await exportCertBinary(keystoreInfo, certFile);\n    const data = await fs.readFile(certFile);\n    const googleHash = crypto.createHash('sha1').update(data).digest('hex').toUpperCase();\n    const googleHash256 = crypto.createHash('sha256').update(data).digest('hex').toUpperCase();\n    const fbHash = crypto.createHash('sha1').update(data).digest('base64');\n    log.info(\n      `${linePrefix}Google Certificate Fingerprint:     ${googleHash.replace(\n        /(.{2}(?!$))/g,\n        '$1:'\n      )}`\n    );\n    log.info(`${linePrefix}Google Certificate Hash (SHA-1):    ${googleHash}`);\n    log.info(`${linePrefix}Google Certificate Hash (SHA-256):  ${googleHash256}`);\n    log.info(`${linePrefix}Facebook Key Hash:                  ${fbHash}`);\n  } catch (err: any) {\n    if (err.code === 'ENOENT') {\n      log.warn('Are you sure you have keytool installed?');\n      log.info('keytool is a part of OpenJDK: https://openjdk.java.net/');\n      log.info('Also make sure that keytool is in your PATH after installation.');\n    }\n    if (err.stdout) {\n      log.info(err.stdout);\n    }\n    if (err.stderr) {\n      log.error(err.stderr);\n    }\n    throw err;\n  } finally {\n    try {\n      await fs.unlink(certFile);\n    } catch (err: any) {\n      if (err.code !== 'ENOENT') {\n        log.error(err);\n      }\n    }\n  }\n}\n\nasync function createKeystore(\n  { keystorePath, keystorePassword, keyAlias, keyPassword }: KeystoreInfo,\n  androidPackage: string\n): Promise<SpawnResult> {\n  try {\n    return await spawnAsync('keytool', [\n      '-genkey',\n      '-v',\n      '-storetype',\n      'JKS',\n      '-storepass',\n      keystorePassword,\n      '-keypass',\n      keyPassword,\n      '-keystore',\n      keystorePath,\n      '-alias',\n      keyAlias,\n      '-keyalg',\n      'RSA',\n      '-keysize',\n      '2048',\n      '-validity',\n      '10000',\n      '-dname',\n      `CN=${androidPackage},OU=,O=,L=,S=,C=US`,\n    ]);\n  } catch (err: any) {\n    if (err.code === 'ENOENT') {\n      log.warn('Are you sure you have keytool installed?');\n      log.info('keytool is a part of OpenJDK: https://openjdk.java.net/');\n      log.info('Also make sure that keytool is in your PATH after installation.');\n    }\n    if (err.stdout) {\n      log.info(err.stdout);\n    }\n    if (err.stderr) {\n      log.error(err.stderr);\n    }\n    throw err;\n  }\n}\n\nexport async function generateUploadKeystore(\n  uploadKeystorePath: string,\n  androidPackage: string,\n  experienceName: string\n): Promise<KeystoreInfo> {\n  const keystoreData = {\n    keystorePassword: uuidv4().replace(/-/g, ''),\n    keyPassword: uuidv4().replace(/-/g, ''),\n    keyAlias: Buffer.from(experienceName).toString('base64'),\n    keystorePath: uploadKeystorePath,\n  };\n  await createKeystore(keystoreData, androidPackage);\n  return keystoreData;\n}\n"],"mappings":"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"}