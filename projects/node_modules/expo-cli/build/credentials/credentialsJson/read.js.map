{"version":3,"file":"read.js","names":["_fsExtra","data","_interopRequireDefault","require","_joi","_path","obj","__esModule","default","CredentialsJsonSchema","Joi","object","android","keystore","keystorePath","string","required","keystorePassword","keyAlias","keyPassword","ios","provisioningProfilePath","distributionCertificate","path","password","experimental","npmToken","fileExistsAsync","projectDir","fs","pathExists","join","readAndroidCredentialsAsync","credentialsJson","readAsync","Error","keystoreInfo","readFile","getAbsolutePath","readIosCredentialsAsync","provisioningProfile","certP12","certPassword","readSecretEnvsAsync","_credentialsJson$expe","undefined","NPM_TOKEN","credentialsJSONRaw","readRawAsync","value","error","validate","stripUnknown","convert","abortEarly","toString","credentialsJsonFilePath","credentialsJSONContents","JSON","parse","filePath","isAbsolute"],"sources":["../../../src/credentials/credentialsJson/read.ts"],"sourcesContent":["import fs from 'fs-extra';\nimport Joi from 'joi';\nimport path from 'path';\n\nimport { Keystore } from '../credentials';\n\ninterface CredentialsJson {\n  android?: {\n    keystore: {\n      keystorePath: string;\n      keystorePassword: string;\n      keyAlias: string;\n      keyPassword: string;\n    };\n  };\n  ios?: {\n    provisioningProfilePath: string;\n    distributionCertificate: {\n      path: string;\n      password: string;\n    };\n  };\n  experimental?: {\n    npmToken?: string;\n  };\n}\n\nconst CredentialsJsonSchema = Joi.object({\n  android: Joi.object({\n    keystore: Joi.object({\n      keystorePath: Joi.string().required(),\n      keystorePassword: Joi.string().required(),\n      keyAlias: Joi.string().required(),\n      keyPassword: Joi.string().required(),\n    }),\n  }),\n  ios: Joi.object({\n    provisioningProfilePath: Joi.string().required(),\n    distributionCertificate: Joi.object({\n      path: Joi.string().required(),\n      password: Joi.string().required(),\n    }).required(),\n  }),\n  experimental: Joi.object({\n    npmToken: Joi.string(),\n  }),\n});\n\ninterface AndroidCredentials {\n  keystore: Keystore;\n}\n\ninterface iOSCredentials {\n  provisioningProfile: string;\n  distributionCertificate: {\n    certP12: string;\n    certPassword: string;\n  };\n}\n\nexport async function fileExistsAsync(projectDir: string): Promise<boolean> {\n  return await fs.pathExists(path.join(projectDir, 'credentials.json'));\n}\n\nexport async function readAndroidCredentialsAsync(projectDir: string): Promise<AndroidCredentials> {\n  const credentialsJson = await readAsync(projectDir);\n  if (!credentialsJson.android) {\n    throw new Error('Android credentials are missing from credentials.json'); // TODO: add fyi\n  }\n  const keystoreInfo = credentialsJson.android.keystore;\n  return {\n    keystore: {\n      keystore: await fs.readFile(getAbsolutePath(projectDir, keystoreInfo.keystorePath), 'base64'),\n      keystorePassword: keystoreInfo.keystorePassword,\n      keyAlias: keystoreInfo.keyAlias,\n      keyPassword: keystoreInfo.keyPassword,\n    },\n  };\n}\n\nexport async function readIosCredentialsAsync(projectDir: string): Promise<iOSCredentials> {\n  const credentialsJson = await readAsync(projectDir);\n  if (!credentialsJson.ios) {\n    throw new Error('iOS credentials are missing from credentials.json'); // TODO: add fyi\n  }\n  return {\n    provisioningProfile: await fs.readFile(\n      getAbsolutePath(projectDir, credentialsJson.ios.provisioningProfilePath),\n      'base64'\n    ),\n    distributionCertificate: {\n      certP12: await fs.readFile(\n        getAbsolutePath(projectDir, credentialsJson.ios.distributionCertificate.path),\n        'base64'\n      ),\n      certPassword: credentialsJson.ios.distributionCertificate.password,\n    },\n  };\n}\n\nexport async function readSecretEnvsAsync(\n  projectDir: string\n): Promise<Record<string, string> | undefined> {\n  if (!(await fileExistsAsync(projectDir))) {\n    return undefined;\n  }\n  const credentialsJson = await readAsync(projectDir);\n  const npmToken = credentialsJson?.experimental?.npmToken;\n  return npmToken ? { NPM_TOKEN: npmToken } : undefined;\n}\n\nasync function readAsync(projectDir: string): Promise<CredentialsJson> {\n  const credentialsJSONRaw = await readRawAsync(projectDir);\n\n  const { value: credentialsJson, error } = CredentialsJsonSchema.validate(credentialsJSONRaw, {\n    stripUnknown: true,\n    convert: true,\n    abortEarly: false,\n  });\n  if (error) {\n    throw new Error(`credentials.json is not valid [${error.toString()}]`);\n  }\n\n  return credentialsJson;\n}\n\nexport async function readRawAsync(projectDir: string): Promise<any> {\n  const credentialsJsonFilePath = path.join(projectDir, 'credentials.json');\n  try {\n    const credentialsJSONContents = await fs.readFile(credentialsJsonFilePath, 'utf8');\n    return JSON.parse(credentialsJSONContents);\n  } catch {\n    throw new Error(\n      `credentials.json must exist in the project root directory and contain a valid JSON`\n    );\n  }\n}\n\nconst getAbsolutePath = (projectDir: string, filePath: string): string =>\n  path.isAbsolute(filePath) ? filePath : path.join(projectDir, filePath);\n"],"mappings":"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"}