{"version":3,"file":"update.js","names":["_fsExtra","data","_interopRequireDefault","require","_path","_log","_prompts","_git","obj","__esModule","default","updateAndroidCredentialsAsync","ctx","_rawCredentialsJsonOb","_rawCredentialsJsonOb2","_rawCredentialsJsonOb3","_rawCredentialsJsonOb4","credentialsJsonFilePath","path","join","projectDir","rawCredentialsJsonObject","fs","pathExists","rawFile","readFile","JSON","parse","error","Log","experienceName","projectOwner","manifest","slug","keystore","android","fetchKeystore","isKeystoreComplete","keystorePassword","keyPassword","keyAlias","confirm","confirmAsync","message","warn","keystorePath","log","updateFileAsync","shouldWarnKeystore","isFileUntrackedAsync","writeJson","spaces","shouldWarnCredentialsJson","newFilePaths","push","displayUntrackedFilesWarning","updateIosCredentialsAsync","bundleIdentifier","_rawCredentialsJsonOb5","_rawCredentialsJsonOb6","_rawCredentialsJsonOb7","_rawCredentialsJsonOb8","_rawCredentialsJsonOb9","_rawCredentialsJsonOb10","_rawCredentialsJsonOb11","_appCredentials$crede","_appCredentials$crede2","_appCredentials$crede3","_appCredentials$crede4","appLookupParams","accountName","projectName","pprofilePath","ios","provisioningProfilePath","distCertPath","distributionCertificate","appCredentials","getAppCredentials","distCredentials","getDistCert","credentials","provisioningProfile","areCredentialsComplete","certP12","certPassword","shouldWarnPProfile","shouldWarnDistCert","password","filePath","base64Data","absolutePath","isAbsolute","remove","mkdirp","dirname","writeFile","Buffer","from","withUntrackedFiles","gitStatusAsync","showUntracked","trackedFiles","pathWithoutLeadingDot","replace","includes","length"],"sources":["../../../src/credentials/credentialsJson/update.ts"],"sourcesContent":["import fs from 'fs-extra';\nimport path from 'path';\n\nimport Log from '../../log';\nimport { confirmAsync } from '../../utils/prompts';\nimport { Context } from '../context';\nimport { gitStatusAsync } from '../utils/git';\n\nexport async function updateAndroidCredentialsAsync(ctx: Context) {\n  const credentialsJsonFilePath = path.join(ctx.projectDir, 'credentials.json');\n  let rawCredentialsJsonObject: any = {};\n  if (await fs.pathExists(credentialsJsonFilePath)) {\n    try {\n      const rawFile = await fs.readFile(credentialsJsonFilePath, 'utf-8');\n      rawCredentialsJsonObject = JSON.parse(rawFile);\n    } catch (error: any) {\n      Log.error(`There was an error while reading credentials.json [${error}]`);\n      Log.error('Make sure that file is correct (or remove it) and rerun this command.');\n      throw error;\n    }\n  }\n  const experienceName = `@${ctx.projectOwner}/${ctx.manifest.slug}`;\n  const keystore = await ctx.android.fetchKeystore(experienceName);\n  if (!keystore) {\n    Log.error('There are no credentials configured for this project on Expo servers');\n    return;\n  }\n\n  const isKeystoreComplete =\n    keystore.keystore && keystore.keystorePassword && keystore.keyPassword && keystore.keyAlias;\n\n  if (!isKeystoreComplete) {\n    const confirm = await confirmAsync({\n      message:\n        'Credentials on Expo servers might be invalid or incomplete. Are you sure you want to continue?',\n    });\n    if (!confirm) {\n      Log.warn('Aborting...');\n      return;\n    }\n  }\n\n  const keystorePath =\n    rawCredentialsJsonObject?.android?.keystore?.keystorePath ?? 'android/keystores/keystore.jks';\n  Log.log(`Writing Keystore to ${keystorePath}`);\n  await updateFileAsync(ctx.projectDir, keystorePath, keystore.keystore);\n  const shouldWarnKeystore = await isFileUntrackedAsync(keystorePath);\n\n  rawCredentialsJsonObject.android = {\n    keystore: {\n      keystorePath,\n      keystorePassword: keystore.keystorePassword,\n      keyAlias: keystore.keyAlias,\n      keyPassword: keystore.keyPassword,\n    },\n  };\n  await fs.writeJson(credentialsJsonFilePath, rawCredentialsJsonObject, {\n    spaces: 2,\n  });\n  const shouldWarnCredentialsJson = await isFileUntrackedAsync('credentials.json');\n\n  const newFilePaths = [];\n  if (shouldWarnKeystore) {\n    newFilePaths.push(keystorePath);\n  }\n  if (shouldWarnCredentialsJson) {\n    newFilePaths.push('credentials.json');\n  }\n  displayUntrackedFilesWarning(newFilePaths);\n}\n\nexport async function updateIosCredentialsAsync(ctx: Context, bundleIdentifier: string) {\n  const credentialsJsonFilePath = path.join(ctx.projectDir, 'credentials.json');\n  let rawCredentialsJsonObject: any = {};\n  if (await fs.pathExists(credentialsJsonFilePath)) {\n    try {\n      const rawFile = await fs.readFile(credentialsJsonFilePath, 'utf-8');\n      rawCredentialsJsonObject = JSON.parse(rawFile);\n    } catch (error: any) {\n      Log.error(`There was an error while reading credentials.json [${error}]`);\n      Log.error('Make sure that file is correct (or remove it) and rerun this command.');\n      throw error;\n    }\n  }\n\n  const appLookupParams = {\n    accountName: ctx.projectOwner,\n    projectName: ctx.manifest.slug,\n    bundleIdentifier,\n  };\n  const pprofilePath =\n    rawCredentialsJsonObject?.ios?.provisioningProfilePath ?? 'ios/certs/profile.mobileprovision';\n  const distCertPath =\n    rawCredentialsJsonObject?.ios?.distributionCertificate?.path ?? 'ios/certs/dist-cert.p12';\n  const appCredentials = await ctx.ios.getAppCredentials(appLookupParams);\n  const distCredentials = await ctx.ios.getDistCert(appLookupParams);\n  if (!appCredentials?.credentials?.provisioningProfile && !distCredentials) {\n    Log.error('There are no credentials configured for this project on Expo servers');\n    return;\n  }\n\n  const areCredentialsComplete =\n    appCredentials?.credentials?.provisioningProfile &&\n    distCredentials?.certP12 &&\n    distCredentials?.certPassword;\n\n  if (!areCredentialsComplete) {\n    const confirm = await confirmAsync({\n      message:\n        'Credentials on Expo servers might be invalid or incomplete. Are you sure you want to continue?',\n    });\n    if (!confirm) {\n      Log.warn('Aborting...');\n      return;\n    }\n  }\n\n  Log.log(`Writing Provisioning Profile to ${pprofilePath}`);\n  await updateFileAsync(\n    ctx.projectDir,\n    pprofilePath,\n    appCredentials?.credentials?.provisioningProfile\n  );\n  const shouldWarnPProfile = await isFileUntrackedAsync(pprofilePath);\n\n  Log.log(`Writing Distribution Certificate to ${distCertPath}`);\n  await updateFileAsync(ctx.projectDir, distCertPath, distCredentials?.certP12);\n  const shouldWarnDistCert = await isFileUntrackedAsync(distCertPath);\n\n  rawCredentialsJsonObject.ios = {\n    ...(appCredentials?.credentials?.provisioningProfile\n      ? { provisioningProfilePath: pprofilePath }\n      : {}),\n    ...(distCredentials?.certP12 && distCredentials?.certPassword\n      ? {\n          distributionCertificate: {\n            path: distCertPath,\n            password: distCredentials?.certPassword,\n          },\n        }\n      : {}),\n  };\n  await fs.writeJson(credentialsJsonFilePath, rawCredentialsJsonObject, {\n    spaces: 2,\n  });\n  const shouldWarnCredentialsJson = await isFileUntrackedAsync('credentials.json');\n\n  const newFilePaths = [];\n  if (shouldWarnPProfile) {\n    newFilePaths.push(pprofilePath);\n  }\n  if (shouldWarnDistCert) {\n    newFilePaths.push(distCertPath);\n  }\n  if (shouldWarnCredentialsJson) {\n    newFilePaths.push('credentials.json');\n  }\n  displayUntrackedFilesWarning(newFilePaths);\n}\n\nasync function updateFileAsync(projectDir: string, filePath: string, base64Data?: string) {\n  const absolutePath = path.isAbsolute(filePath) ? filePath : path.join(projectDir, filePath);\n  if (await fs.pathExists(absolutePath)) {\n    await fs.remove(absolutePath);\n  }\n  if (base64Data) {\n    await fs.mkdirp(path.dirname(filePath));\n    await fs.writeFile(filePath, Buffer.from(base64Data, 'base64'));\n  }\n}\n\nasync function isFileUntrackedAsync(path: string): Promise<boolean> {\n  const withUntrackedFiles = await gitStatusAsync({ showUntracked: true });\n  const trackedFiles = await gitStatusAsync({ showUntracked: false });\n  const pathWithoutLeadingDot = path.replace(/^\\.\\//, ''); // remove leading './' from path\n  return (\n    withUntrackedFiles.includes(pathWithoutLeadingDot) &&\n    !trackedFiles.includes(pathWithoutLeadingDot)\n  );\n}\n\nfunction displayUntrackedFilesWarning(newFilePaths: string[]) {\n  if (newFilePaths.length === 1) {\n    Log.warn(\n      `File ${newFilePaths[0]} is currently untracked, remember to add it to .gitignore or to encrypt it. (e.g. with git-crypt)`\n    );\n  } else if (newFilePaths.length > 1) {\n    Log.warn(\n      `Files ${newFilePaths.join(\n        ', '\n      )} are currently untracked, remember to add them to .gitignore or to encrypt them. (e.g. with git-crypt)`\n    );\n  }\n}\n"],"mappings":"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"}