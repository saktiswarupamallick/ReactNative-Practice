{"version":3,"file":"Select.js","names":["_assert","data","_interopRequireDefault","require","_prompts","_interopRequireWildcard","_list","_route","androidView","iosDistView","iosProvisionigProfileView","iosPushView","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_defineProperty","value","_toPropertyKey","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","Number","SelectPlatform","open","ctx","platform","prompts","type","name","message","choices","map","title","optionsPerPage","view","SelectIosExperience","SelectAndroidExperience","CredentialsManager","changeMainView","exports","_ref","accountName","hasProjectContext","manifest","owner","user","username","iosCredentials","ios","getAllCredentials","displayIosCredentials","projectSpecificActions","action","handleAction","getAppLookupParamsFromContext","_ctx$manifest$ios","projectName","slug","projectOwner","bundleIdentifier","Error","CreateAndAssignIosPush","UpdateIosPush","RemoveIosPush","CreateIosDist","UpdateIosDist","RemoveIosDist","app","UseExistingPushNotification","UseExistingDistributionCert","RemoveProvisioningProfile","constructor","askAboutProjectMode","experienceName","runProjectContext","confirmAsync","assert","ExperienceView","credentials","android","fetchAll","displayAndroidCredentials","values","cred","QuitError","setPrototypeOf","DoQuit","runAsync","mainpage","AskQuit","selected","process","exit"],"sources":["../../../src/credentials/views/Select.ts"],"sourcesContent":["import assert from 'assert';\n\nimport prompts, { confirmAsync } from '../../utils/prompts';\nimport { displayAndroidCredentials, displayIosCredentials } from '../actions/list';\nimport { AppLookupParams } from '../api/IosApi';\nimport { Context, IView } from '../context';\nimport { CredentialsManager } from '../route';\nimport * as androidView from './AndroidCredentials';\nimport * as iosDistView from './IosDistCert';\nimport * as iosProvisionigProfileView from './IosProvisioningProfile';\nimport * as iosPushView from './IosPushCredentials';\n\nexport class SelectPlatform implements IView {\n  async open(ctx: Context): Promise<IView | null> {\n    const { platform } = await prompts({\n      type: 'select',\n      name: 'platform',\n      message: 'Select platform',\n      choices: ['ios', 'android'].map(value => ({ value, title: value })),\n      optionsPerPage: 20,\n    });\n    const view = platform === 'ios' ? new SelectIosExperience() : new SelectAndroidExperience();\n    CredentialsManager.get().changeMainView(view);\n    return view;\n  }\n}\n\nexport class SelectIosExperience implements IView {\n  async open(ctx: Context): Promise<IView | null> {\n    const accountName =\n      (ctx.hasProjectContext ? ctx.manifest.owner : undefined) ?? ctx.user.username;\n    const iosCredentials = await ctx.ios.getAllCredentials(accountName);\n\n    await displayIosCredentials(iosCredentials);\n\n    const projectSpecificActions: { value: string; title: string }[] = ctx.hasProjectContext\n      ? [\n          {\n            value: 'use-existing-push-ios',\n            title: 'Use existing Push Notifications Key in current project',\n          },\n          {\n            value: 'use-existing-dist-ios',\n            title: 'Use existing Distribution Certificate in current project',\n          },\n          // {\n          //   value: 'current-remove-push-ios',\n          //   name: 'Remove Push Notifactions credentials for current project',\n          // },\n          // {\n          //   value: 'current-remove-dist-ios',\n          //   name: 'Remove Distribution Certificate for current project',\n          // },\n          // {\n          //   value: 'current-remove-app-ios',\n          //   name: 'Remove all credentials for current project',\n          // },\n        ]\n      : [];\n\n    const { action } = await prompts({\n      type: 'select',\n      name: 'action',\n      message: 'What do you want to do?',\n      choices: [\n        ...projectSpecificActions,\n        { value: 'remove-provisioning-profile', title: 'Remove Provisioning Profile' },\n        { value: 'create-ios-push', title: 'Add new Push Notifications Key' },\n        { value: 'remove-ios-push', title: 'Remove Push Notification credentials' },\n        { value: 'update-ios-push', title: 'Update Push Notifications Key' },\n        { value: 'create-ios-dist', title: 'Add new Distribution Certificate' },\n        { value: 'remove-ios-dist', title: 'Remove Distribution Certificate' },\n        { value: 'update-ios-dist', title: 'Update Distribution Certificate' },\n      ],\n      optionsPerPage: 20,\n    });\n    return this.handleAction(ctx, accountName, action);\n  }\n\n  getAppLookupParamsFromContext(ctx: Context): AppLookupParams {\n    const projectName = ctx.manifest.slug;\n    const accountName = ctx.projectOwner;\n    const bundleIdentifier = ctx.manifest.ios?.bundleIdentifier;\n    if (!bundleIdentifier) {\n      throw new Error(`ios.bundleIdentifier need to be defined`);\n    }\n\n    return { accountName, projectName, bundleIdentifier };\n  }\n\n  handleAction(ctx: Context, accountName: string, action: string): IView | null {\n    switch (action) {\n      case 'create-ios-push':\n        return new iosPushView.CreateAndAssignIosPush(accountName);\n      case 'update-ios-push':\n        return new iosPushView.UpdateIosPush(accountName);\n      case 'remove-ios-push':\n        return new iosPushView.RemoveIosPush(accountName);\n      case 'create-ios-dist':\n        return new iosDistView.CreateIosDist(accountName);\n      case 'update-ios-dist':\n        return new iosDistView.UpdateIosDist(accountName);\n      case 'remove-ios-dist':\n        return new iosDistView.RemoveIosDist(accountName);\n      case 'use-existing-push-ios': {\n        const app = this.getAppLookupParamsFromContext(ctx);\n        return new iosPushView.UseExistingPushNotification(app);\n      }\n      case 'use-existing-dist-ios': {\n        const app = this.getAppLookupParamsFromContext(ctx);\n        return new iosDistView.UseExistingDistributionCert(app);\n      }\n      case 'remove-provisioning-profile':\n        return new iosProvisionigProfileView.RemoveProvisioningProfile(accountName);\n      default:\n        throw new Error('Unknown action selected');\n    }\n  }\n}\n\nexport class SelectAndroidExperience implements IView {\n  private askAboutProjectMode = true;\n\n  async open(ctx: Context): Promise<IView | null> {\n    if (ctx.hasProjectContext && this.askAboutProjectMode) {\n      const experienceName = `@${ctx.projectOwner}/${ctx.manifest.slug}`;\n\n      const runProjectContext = await confirmAsync({\n        message: `You are currently in a directory with ${experienceName} experience. Do you want to select it?`,\n      });\n\n      if (runProjectContext) {\n        assert(ctx.manifest.slug, 'app.json slug field must be set');\n        const view = new androidView.ExperienceView(experienceName);\n        CredentialsManager.get().changeMainView(view);\n        return view;\n      }\n    }\n    this.askAboutProjectMode = false;\n\n    const credentials = await ctx.android.fetchAll();\n    await displayAndroidCredentials(Object.values(credentials));\n\n    const { experienceName } = await prompts({\n      type: 'select',\n      name: 'experienceName',\n      message: 'Select application',\n      choices: Object.values(credentials).map(cred => ({\n        title: cred.experienceName,\n        value: cred.experienceName,\n      })),\n      optionsPerPage: 20,\n    });\n\n    return new androidView.ExperienceView(experienceName);\n  }\n}\n\nexport class QuitError extends Error {\n  constructor() {\n    super();\n\n    // Set the prototype explicitly.\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, QuitError.prototype);\n  }\n}\n\nexport interface IQuit {\n  runAsync(mainpage: IView): Promise<IView>;\n}\n\nexport class DoQuit implements IQuit {\n  async runAsync(mainpage: IView): Promise<IView> {\n    throw new QuitError();\n  }\n}\n\nexport class AskQuit implements IQuit {\n  async runAsync(mainpage: IView): Promise<IView> {\n    const { selected } = await prompts({\n      type: 'select',\n      name: 'selected',\n      message: 'Do you want to quit Credential Manager',\n      choices: [\n        { value: 'exit', title: 'Quit Credential Manager' },\n        { value: 'mainpage', title: 'Go back to experience overview.' },\n      ],\n    });\n    if (selected === 'exit') {\n      process.exit(0);\n    }\n    return mainpage;\n  }\n}\n"],"mappings":"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"}