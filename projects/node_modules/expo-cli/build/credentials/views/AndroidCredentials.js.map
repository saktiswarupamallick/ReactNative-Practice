{"version":3,"file":"AndroidCredentials.js","names":["_isEmpty","data","_interopRequireDefault","require","_log","_prompts","_list","_AndroidKeystore","_AndroidPushCredentials","obj","__esModule","default","ExperienceView","constructor","experienceName","open","ctx","credentials","android","fetchCredentials","isEmpty","keystore","pushCredentials","Log","log","newLine","displayAndroidAppCredentials","action","prompt","type","name","message","choices","value","title","handleAction","context","selected","UpdateKeystore","skipKeystoreValidation","RemoveKeystore","UpdateFcmKey","DownloadKeystore","exports"],"sources":["../../../src/credentials/views/AndroidCredentials.ts"],"sourcesContent":["import isEmpty from 'lodash/isEmpty';\n\nimport Log from '../../log';\nimport prompt from '../../utils/prompts';\nimport { displayAndroidAppCredentials } from '../actions/list';\nimport { Context, IView } from '../context';\nimport { DownloadKeystore, RemoveKeystore, UpdateKeystore } from './AndroidKeystore';\nimport { UpdateFcmKey } from './AndroidPushCredentials';\n\nclass ExperienceView implements IView {\n  constructor(private experienceName: string) {}\n\n  async open(ctx: Context): Promise<IView | null> {\n    const credentials = await ctx.android.fetchCredentials(this.experienceName);\n\n    if (isEmpty(credentials.keystore) && isEmpty(credentials.pushCredentials)) {\n      Log.log(`No credentials available for ${this.experienceName} experience.\\n`);\n    } else if (this.experienceName) {\n      Log.newLine();\n      await displayAndroidAppCredentials(credentials);\n      Log.newLine();\n    }\n\n    const { action } = await prompt({\n      type: 'select',\n      name: 'action',\n      message: 'What do you want to do?',\n      choices: [\n        { value: 'update-keystore', title: 'Update upload Keystore' },\n        { value: 'remove-keystore', title: 'Remove keystore' },\n        { value: 'update-fcm-key', title: 'Update FCM Api Key' },\n        { value: 'fetch-keystore', title: 'Download Keystore from the Expo servers' },\n        // { value: 'fetch-public-cert', title: 'Extract public cert from Keystore' },\n        // {\n        //   value: 'fetch-private-signing-key',\n        //   title:\n        //     'Extract private signing key (required when migration to App Signing by Google Play)',\n        // },\n      ],\n    });\n\n    return this.handleAction(ctx, action);\n  }\n\n  handleAction(context: Context, selected: string): IView | null {\n    switch (selected) {\n      case 'update-keystore':\n        return new UpdateKeystore(this.experienceName, { skipKeystoreValidation: false });\n      case 'remove-keystore':\n        return new RemoveKeystore(this.experienceName);\n      case 'update-fcm-key':\n        return new UpdateFcmKey(this.experienceName);\n      case 'fetch-keystore':\n        return new DownloadKeystore(this.experienceName);\n      case 'fetch-public-cert':\n        return null;\n    }\n    return null;\n  }\n}\n\nexport { ExperienceView };\n"],"mappings":"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"}