{"version":3,"file":"SetupAndroidKeystore.js","names":["_log","data","_interopRequireDefault","require","credentialsJsonReader","_interopRequireWildcard","_validateKeystore","_AndroidKeystore","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","SetupAndroidKeystore","constructor","experienceName","options","open","ctx","_await$ctx$android$fe","keystore","keystorePassword","keyAlias","keyPassword","android","fetchKeystore","nonInteractive","allowMissingKeystore","Log","warn","Error","UpdateKeystore","bestEffortKeystoreGeneration","skipKeystoreValidation","exports","SetupAndroidBuildCredentialsFromLocal","localCredentials","readAndroidCredentialsAsync","projectDir","error","validateKeystoreAsync","updateKeystore"],"sources":["../../../src/credentials/views/SetupAndroidKeystore.ts"],"sourcesContent":["import Log from '../../log';\nimport { Context, IView } from '../context';\nimport * as credentialsJsonReader from '../credentialsJson/read';\nimport validateKeystoreAsync from '../utils/validateKeystore';\nimport { UpdateKeystore } from './AndroidKeystore';\n\ninterface Options {\n  nonInteractive?: boolean;\n  allowMissingKeystore?: boolean;\n  skipKeystoreValidation: boolean;\n}\n\nexport class SetupAndroidKeystore implements IView {\n  constructor(private experienceName: string, private options: Options) {}\n\n  async open(ctx: Context): Promise<IView | null> {\n    const { keystore, keystorePassword, keyAlias, keyPassword } =\n      (await ctx.android.fetchKeystore(this.experienceName)) ?? {};\n    if (keystore && keystorePassword && keyAlias && keyPassword) {\n      return null;\n    }\n    if (this.options.nonInteractive) {\n      if (this.options.allowMissingKeystore) {\n        Log.warn(\n          'There is no valid Keystore defined for this app, new one will be generated on Expo servers.'\n        );\n        return null;\n      } else {\n        throw new Error('Generating a new Keystore is not supported in --non-interactive mode');\n      }\n    }\n\n    return new UpdateKeystore(this.experienceName, {\n      bestEffortKeystoreGeneration: true,\n      skipKeystoreValidation: this.options.skipKeystoreValidation,\n    });\n  }\n}\n\nexport class SetupAndroidBuildCredentialsFromLocal implements IView {\n  constructor(\n    private experienceName: string,\n    private options: { skipKeystoreValidation: boolean }\n  ) {}\n\n  async open(ctx: Context): Promise<IView | null> {\n    let localCredentials;\n    try {\n      localCredentials = await credentialsJsonReader.readAndroidCredentialsAsync(ctx.projectDir);\n    } catch (error: any) {\n      Log.error(\n        'Reading credentials from credentials.json failed. Make sure this file is correct and all credentials are present there.'\n      );\n      throw error;\n    }\n    if (!this.options.skipKeystoreValidation) {\n      await validateKeystoreAsync(localCredentials.keystore);\n    }\n    await ctx.android.updateKeystore(this.experienceName, localCredentials.keystore);\n    return null;\n  }\n}\n"],"mappings":"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"}