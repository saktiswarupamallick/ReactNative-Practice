{"version":3,"file":"AndroidApi.js","names":["_keyBy","data","_interopRequireDefault","require","_AndroidApiV2Wrapper","obj","__esModule","default","_defineProperty","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","AndroidApi","constructor","api","client","ApiClient","fetchAll","shouldRefetchAll","credentials","keyBy","getAllCredentialsApi","fetchKeystore","experienceName","_this$credentials$exp","ensureCredentialsFetched","keystore","fetchCredentials","updateKeystore","_this$credentials$exp2","updateKeystoreApi","pushCredentials","fetchFcmKey","_this$credentials","_this$credentials$exp3","updateFcmKey","fcmApiKey","_this$credentials$exp4","updateFcmKeyApi","removeFcmKey","removeFcmKeyApi","removeKeystore","removeKeystoreApi","response","getAllCredentialsForAppApi","exports"],"sources":["../../../src/credentials/api/AndroidApi.ts"],"sourcesContent":["import keyBy from 'lodash/keyBy';\nimport { ApiV2 } from 'xdl';\n\nimport { AndroidCredentials, FcmCredentials, Keystore } from '../credentials';\nimport ApiClient from './AndroidApiV2Wrapper';\n\nexport default class AndroidApi {\n  private client: ApiClient;\n  private shouldRefetchAll: boolean = true;\n  private credentials: { [key: string]: AndroidCredentials } = {};\n\n  constructor(api: ApiV2) {\n    this.client = new ApiClient(api);\n  }\n\n  public async fetchAll(): Promise<{ [key: string]: AndroidCredentials }> {\n    if (this.shouldRefetchAll) {\n      this.credentials = keyBy(await this.client.getAllCredentialsApi(), 'experienceName');\n      this.shouldRefetchAll = false;\n    }\n    return this.credentials;\n  }\n\n  public async fetchKeystore(experienceName: string): Promise<Keystore | null> {\n    await this.ensureCredentialsFetched(experienceName);\n    return this.credentials[experienceName]?.keystore || null;\n  }\n\n  public async fetchCredentials(experienceName: string): Promise<AndroidCredentials> {\n    await this.ensureCredentialsFetched(experienceName);\n    return this.credentials[experienceName];\n  }\n\n  public async updateKeystore(experienceName: string, keystore: Keystore): Promise<void> {\n    await this.ensureCredentialsFetched(experienceName);\n    await this.client.updateKeystoreApi(experienceName, keystore);\n    this.credentials[experienceName] = {\n      experienceName,\n      keystore,\n      pushCredentials: this.credentials[experienceName]?.pushCredentials,\n    };\n  }\n\n  public async fetchFcmKey(experienceName: string): Promise<FcmCredentials | null> {\n    await this.ensureCredentialsFetched(experienceName);\n    return this.credentials?.[experienceName]?.pushCredentials;\n  }\n\n  public async updateFcmKey(experienceName: string, fcmApiKey: string): Promise<void> {\n    await this.ensureCredentialsFetched(experienceName);\n    await this.client.updateFcmKeyApi(experienceName, fcmApiKey);\n    this.credentials[experienceName] = {\n      experienceName,\n      keystore: this.credentials[experienceName]?.keystore,\n      pushCredentials: { fcmApiKey },\n    };\n  }\n\n  public async removeFcmKey(experienceName: string): Promise<void> {\n    await this.ensureCredentialsFetched(experienceName);\n    await this.client.removeFcmKeyApi(experienceName);\n    if (this.credentials[experienceName]) {\n      this.credentials[experienceName].pushCredentials = null;\n    }\n  }\n\n  public async removeKeystore(experienceName: string): Promise<void> {\n    await this.ensureCredentialsFetched(experienceName);\n    await this.client.removeKeystoreApi(experienceName);\n    if (this.credentials[experienceName]) {\n      this.credentials[experienceName].keystore = null;\n    }\n  }\n\n  private async ensureCredentialsFetched(experienceName: string): Promise<void> {\n    if (!this.credentials[experienceName]) {\n      const response = await this.client.getAllCredentialsForAppApi(experienceName);\n      this.credentials[experienceName] = {\n        experienceName,\n        keystore: response?.keystore,\n        pushCredentials: response?.pushCredentials,\n      };\n    }\n  }\n}\n"],"mappings":"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"}