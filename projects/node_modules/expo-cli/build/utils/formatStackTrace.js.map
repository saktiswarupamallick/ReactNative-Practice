{"version":3,"file":"formatStackTrace.js","names":["_chalk","data","_interopRequireDefault","require","obj","__esModule","default","getStringBetweenParens","value","regExp","matches","exec","length","focusLastPathComponent","parts","split","last","pop","current","chalk","dim","join","formatStackTrace","stacktrace","command","treeStackLines","line","first","trim","push","map","index","_first","_first2","_first3","shift","bold","startsWith","branch","filter","Boolean"],"sources":["../../src/utils/formatStackTrace.ts"],"sourcesContent":["import chalk from 'chalk';\n\nfunction getStringBetweenParens(value: string): string {\n  const regExp = /\\(([^)]+)\\)/;\n  const matches = regExp.exec(value);\n  if (matches && matches?.length > 1) {\n    return matches[1];\n  }\n  return value;\n}\n\nfunction focusLastPathComponent(value: string): string {\n  const parts = value.split('/');\n  if (parts.length > 1) {\n    const last = parts.pop();\n    const current = chalk.dim(parts.join('/') + '/');\n    return `${current}${last}`;\n  }\n  return chalk.dim(value);\n}\n\nexport function formatStackTrace(stacktrace: string, command: string): string {\n  const treeStackLines: string[][] = [];\n  for (const line of stacktrace.split('\\n')) {\n    const [first, ...parts] = line.trim().split(' ');\n    // Remove at -- we'll use a branch instead.\n    if (first === 'at') {\n      treeStackLines.push(parts);\n    }\n  }\n\n  return treeStackLines\n    .map((parts, index) => {\n      let first = parts.shift();\n      let last = parts.pop();\n\n      // Replace anonymous with command name\n      if (first === 'Command.<anonymous>') {\n        first = chalk.bold(`expo ${command}`);\n      } else if (first?.startsWith('Object.')) {\n        // Remove extra JS types from function names\n        first = first.split('Object.').pop()!;\n      } else if (first?.startsWith('Function.')) {\n        // Remove extra JS types from function names\n        first = first.split('Function.').pop()!;\n      } else if (first?.startsWith('/')) {\n        // If the first element is a path\n        first = focusLastPathComponent(getStringBetweenParens(first));\n      }\n\n      if (last) {\n        last = focusLastPathComponent(getStringBetweenParens(last));\n      }\n      const branch = (index === treeStackLines.length - 1 ? '└' : '├') + '─';\n      return ['   ', branch, first, ...parts, last].filter(Boolean).join(' ');\n    })\n    .join('\\n');\n}\n"],"mappings":"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"}