{"version":3,"file":"ora.js","names":["_chalk","data","_interopRequireDefault","require","_commander","_ora","_log","obj","__esModule","default","logReal","console","log","infoReal","info","warnReal","warn","errorReal","error","ora","options","inputOptions","text","disabled","program","nonInteractive","Log","isDebug","spinner","oraReal","isEnabled","stream","process","stdout","stderr","oraStart","start","bind","oraStop","stop","oraStopAndPersist","stopAndPersist","logWrap","method","args","wrapNativeLogs","resetNativeLogs","result","setSpinner","logNewSection","title","chalk","bold"],"sources":["../../src/utils/ora.ts"],"sourcesContent":["import chalk from 'chalk';\nimport program from 'commander';\nimport oraReal, { Ora } from 'ora';\n\nimport Log from '../log';\n\n// eslint-disable-next-line no-console\nconst logReal = console.log;\n// eslint-disable-next-line no-console\nconst infoReal = console.info;\n// eslint-disable-next-line no-console\nconst warnReal = console.warn;\n// eslint-disable-next-line no-console\nconst errorReal = console.error;\n\n/**\n * A custom ora spinner that sends the stream to stdout in CI, non-TTY, or expo's non-interactive flag instead of stderr (the default).\n *\n * @param options\n * @returns\n */\nexport function ora(options?: oraReal.Options | string): oraReal.Ora {\n  const inputOptions = typeof options === 'string' ? { text: options } : options || {};\n  const disabled = program.nonInteractive || Log.isDebug;\n  const spinner = oraReal({\n    // Ensure our non-interactive mode emulates CI mode.\n    isEnabled: !disabled,\n    // In non-interactive mode, send the stream to stdout so it prevents looking like an error.\n    stream: disabled ? process.stdout : process.stderr,\n    ...inputOptions,\n  });\n\n  const oraStart = spinner.start.bind(spinner);\n  const oraStop = spinner.stop.bind(spinner);\n  const oraStopAndPersist = spinner.stopAndPersist.bind(spinner);\n\n  const logWrap = (method: any, args: any[]): void => {\n    oraStop();\n    method(...args);\n    spinner.start();\n  };\n\n  const wrapNativeLogs = (): void => {\n    // eslint-disable-next-line no-console\n    console.log = (...args: any) => logWrap(logReal, args);\n    // eslint-disable-next-line no-console\n    console.info = (...args: any) => logWrap(infoReal, args);\n    // eslint-disable-next-line no-console\n    console.warn = (...args: any) => logWrap(warnReal, args);\n    // eslint-disable-next-line no-console\n    console.error = (...args: any) => logWrap(errorReal, args);\n  };\n\n  const resetNativeLogs = (): void => {\n    // eslint-disable-next-line no-console\n    console.log = logReal;\n    // eslint-disable-next-line no-console\n    console.info = logReal;\n    // eslint-disable-next-line no-console\n    console.warn = warnReal;\n    // eslint-disable-next-line no-console\n    console.error = errorReal;\n  };\n\n  spinner.start = (text): Ora => {\n    wrapNativeLogs();\n    return oraStart(text);\n  };\n\n  spinner.stopAndPersist = (options): Ora => {\n    const result = oraStopAndPersist(options);\n    resetNativeLogs();\n    return result;\n  };\n\n  spinner.stop = (): Ora => {\n    const result = oraStop();\n    resetNativeLogs();\n    return result;\n  };\n\n  // Always make the central logging module aware of the current spinner\n  Log.setSpinner(spinner);\n\n  return spinner;\n}\n\n/**\n * Create a unified section spinner.\n *\n * @param title\n * @returns\n */\nexport function logNewSection(title: string) {\n  const spinner = ora(chalk.bold(title));\n  // Prevent the spinner from clashing with debug logs\n  spinner.start();\n  return spinner;\n}\n"],"mappings":";;;;;;;AAAA,SAAAA,OAAA;EAAA,MAAAC,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAH,MAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAG,WAAA;EAAA,MAAAH,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAC,UAAA,YAAAA,CAAA;IAAA,OAAAH,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAI,KAAA;EAAA,MAAAJ,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAE,IAAA,YAAAA,CAAA;IAAA,OAAAJ,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEA,SAAAK,KAAA;EAAA,MAAAL,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAG,IAAA,YAAAA,CAAA;IAAA,OAAAL,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAAyB,SAAAC,uBAAAK,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAEzB;AACA,MAAMG,OAAO,GAAGC,OAAO,CAACC,GAAG;AAC3B;AACA,MAAMC,QAAQ,GAAGF,OAAO,CAACG,IAAI;AAC7B;AACA,MAAMC,QAAQ,GAAGJ,OAAO,CAACK,IAAI;AAC7B;AACA,MAAMC,SAAS,GAAGN,OAAO,CAACO,KAAK;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,GAAGA,CAACC,OAAkC,EAAe;EACnE,MAAMC,YAAY,GAAG,OAAOD,OAAO,KAAK,QAAQ,GAAG;IAAEE,IAAI,EAAEF;EAAQ,CAAC,GAAGA,OAAO,IAAI,CAAC,CAAC;EACpF,MAAMG,QAAQ,GAAGC,oBAAO,CAACC,cAAc,IAAIC,cAAG,CAACC,OAAO;EACtD,MAAMC,OAAO,GAAG,IAAAC,cAAO,EAAC;IACtB;IACAC,SAAS,EAAE,CAACP,QAAQ;IACpB;IACAQ,MAAM,EAAER,QAAQ,GAAGS,OAAO,CAACC,MAAM,GAAGD,OAAO,CAACE,MAAM;IAClD,GAAGb;EACL,CAAC,CAAC;EAEF,MAAMc,QAAQ,GAAGP,OAAO,CAACQ,KAAK,CAACC,IAAI,CAACT,OAAO,CAAC;EAC5C,MAAMU,OAAO,GAAGV,OAAO,CAACW,IAAI,CAACF,IAAI,CAACT,OAAO,CAAC;EAC1C,MAAMY,iBAAiB,GAAGZ,OAAO,CAACa,cAAc,CAACJ,IAAI,CAACT,OAAO,CAAC;EAE9D,MAAMc,OAAO,GAAGA,CAACC,MAAW,EAAEC,IAAW,KAAW;IAClDN,OAAO,CAAC,CAAC;IACTK,MAAM,CAAC,GAAGC,IAAI,CAAC;IACfhB,OAAO,CAACQ,KAAK,CAAC,CAAC;EACjB,CAAC;EAED,MAAMS,cAAc,GAAGA,CAAA,KAAY;IACjC;IACAlC,OAAO,CAACC,GAAG,GAAG,CAAC,GAAGgC,IAAS,KAAKF,OAAO,CAAChC,OAAO,EAAEkC,IAAI,CAAC;IACtD;IACAjC,OAAO,CAACG,IAAI,GAAG,CAAC,GAAG8B,IAAS,KAAKF,OAAO,CAAC7B,QAAQ,EAAE+B,IAAI,CAAC;IACxD;IACAjC,OAAO,CAACK,IAAI,GAAG,CAAC,GAAG4B,IAAS,KAAKF,OAAO,CAAC3B,QAAQ,EAAE6B,IAAI,CAAC;IACxD;IACAjC,OAAO,CAACO,KAAK,GAAG,CAAC,GAAG0B,IAAS,KAAKF,OAAO,CAACzB,SAAS,EAAE2B,IAAI,CAAC;EAC5D,CAAC;EAED,MAAME,eAAe,GAAGA,CAAA,KAAY;IAClC;IACAnC,OAAO,CAACC,GAAG,GAAGF,OAAO;IACrB;IACAC,OAAO,CAACG,IAAI,GAAGJ,OAAO;IACtB;IACAC,OAAO,CAACK,IAAI,GAAGD,QAAQ;IACvB;IACAJ,OAAO,CAACO,KAAK,GAAGD,SAAS;EAC3B,CAAC;EAEDW,OAAO,CAACQ,KAAK,GAAId,IAAI,IAAU;IAC7BuB,cAAc,CAAC,CAAC;IAChB,OAAOV,QAAQ,CAACb,IAAI,CAAC;EACvB,CAAC;EAEDM,OAAO,CAACa,cAAc,GAAIrB,OAAO,IAAU;IACzC,MAAM2B,MAAM,GAAGP,iBAAiB,CAACpB,OAAO,CAAC;IACzC0B,eAAe,CAAC,CAAC;IACjB,OAAOC,MAAM;EACf,CAAC;EAEDnB,OAAO,CAACW,IAAI,GAAG,MAAW;IACxB,MAAMQ,MAAM,GAAGT,OAAO,CAAC,CAAC;IACxBQ,eAAe,CAAC,CAAC;IACjB,OAAOC,MAAM;EACf,CAAC;;EAED;EACArB,cAAG,CAACsB,UAAU,CAACpB,OAAO,CAAC;EAEvB,OAAOA,OAAO;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASqB,aAAaA,CAACC,KAAa,EAAE;EAC3C,MAAMtB,OAAO,GAAGT,GAAG,CAACgC,gBAAK,CAACC,IAAI,CAACF,KAAK,CAAC,CAAC;EACtC;EACAtB,OAAO,CAACQ,KAAK,CAAC,CAAC;EACf,OAAOR,OAAO;AAChB"}