{"version":3,"file":"init.js","names":["_chalk","data","_interopRequireDefault","require","_applyAsyncAction","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_interopRequireWildcard","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_default","program","applyAsyncAction","command","alias","helpGroup","description","option","chalk","Promise","resolve","then"],"sources":["../../src/commands/init.ts"],"sourcesContent":["import chalk from 'chalk';\nimport type { Command } from 'commander';\n\nimport { applyAsyncAction } from './utils/applyAsyncAction';\n\nexport default function (program: Command) {\n  applyAsyncAction<string>(\n    program\n      .command('init [name]')\n      .alias('i')\n      .helpGroup('core')\n      .description('Create a new Expo project')\n      .option(\n        '-t, --template [name]',\n        'Specify which template to use. Valid options are \"blank\", \"tabs\", \"bare-minimum\" or a package on npm (e.g. \"expo-template-bare-minimum\") that includes an Expo project template.'\n      )\n      .option('--npm', 'Use npm to install dependencies. (default when Yarn is not installed)')\n      .option('--no-install', 'Skip installing npm packages or CocoaPods.')\n      .option('--name <name>', chalk`{yellow Deprecated}: Use {bold expo init [name]} instead.`)\n      .option('--yes', 'Use default options. Same as \"expo init . --template blank')\n      .option('--yarn', 'Use Yarn to install dependencies. (default when Yarn is installed)'),\n    () => import('./initAsync')\n  );\n}\n"],"mappings":";;;;;;AAAA,SAAAA,OAAA;EAAA,MAAAC,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAH,MAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAGA,SAAAG,kBAAA;EAAA,MAAAH,IAAA,GAAAE,OAAA;EAAAC,iBAAA,YAAAA,CAAA;IAAA,OAAAH,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAA4D,SAAAC,uBAAAG,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAAA,SAAAG,yBAAAC,WAAA,eAAAC,OAAA,kCAAAC,iBAAA,OAAAD,OAAA,QAAAE,gBAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,CAAAC,WAAA,WAAAA,WAAA,GAAAG,gBAAA,GAAAD,iBAAA,KAAAF,WAAA;AAAA,SAAAI,wBAAAR,GAAA,EAAAI,WAAA,SAAAA,WAAA,IAAAJ,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,QAAAA,GAAA,oBAAAA,GAAA,wBAAAA,GAAA,4BAAAE,OAAA,EAAAF,GAAA,UAAAS,KAAA,GAAAN,wBAAA,CAAAC,WAAA,OAAAK,KAAA,IAAAA,KAAA,CAAAC,GAAA,CAAAV,GAAA,YAAAS,KAAA,CAAAE,GAAA,CAAAX,GAAA,SAAAY,MAAA,WAAAC,qBAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,GAAA,IAAAjB,GAAA,QAAAiB,GAAA,kBAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAApB,GAAA,EAAAiB,GAAA,SAAAI,IAAA,GAAAR,qBAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAhB,GAAA,EAAAiB,GAAA,cAAAI,IAAA,KAAAA,IAAA,CAAAV,GAAA,IAAAU,IAAA,CAAAC,GAAA,KAAAR,MAAA,CAAAC,cAAA,CAAAH,MAAA,EAAAK,GAAA,EAAAI,IAAA,YAAAT,MAAA,CAAAK,GAAA,IAAAjB,GAAA,CAAAiB,GAAA,SAAAL,MAAA,CAAAV,OAAA,GAAAF,GAAA,MAAAS,KAAA,IAAAA,KAAA,CAAAa,GAAA,CAAAtB,GAAA,EAAAY,MAAA,YAAAA,MAAA;AAE7C,SAAAW,SAAUC,OAAgB,EAAE;EACzC,IAAAC,oCAAgB,EACdD,OAAO,CACJE,OAAO,CAAC,aAAa,CAAC,CACtBC,KAAK,CAAC,GAAG,CAAC,CACVC,SAAS,CAAC,MAAM,CAAC,CACjBC,WAAW,CAAC,2BAA2B,CAAC,CACxCC,MAAM,CACL,uBAAuB,EACvB,kLACF,CAAC,CACAA,MAAM,CAAC,OAAO,EAAE,uEAAuE,CAAC,CACxFA,MAAM,CAAC,cAAc,EAAE,4CAA4C,CAAC,CACpEA,MAAM,CAAC,eAAe,EAAE,IAAAC,gBAAK,CAAC,2DAA0D,CAAC,CACzFD,MAAM,CAAC,OAAO,EAAE,4DAA4D,CAAC,CAC7EA,MAAM,CAAC,QAAQ,EAAE,oEAAoE,CAAC,EACzF,MAAAE,OAAA,CAAAC,OAAA,GAAAC,IAAA,OAAA1B,uBAAA,CAAAV,OAAA,CAAa,aAAa,GAC5B,CAAC;AACH"}