{"version":3,"file":"runIos.js","names":["_config","data","require","_chalk","_interopRequireDefault","_fsExtra","path","_interopRequireWildcard","_xdl","_CommandError","_StatusEventEmitter","_getDevClientProperties","_log","_migration","_clearNativeFolder","_prebuildAppAsync","_installExitHooks","_profileMethod","_startBundlerAsync","_binaryPlist","_schemes","IOSDeploy","_Podfile","XcodeBuild","_installOnDeviceAsync","_resolveOptionsAsync","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","isMac","process","platform","actionAsync","projectRoot","options","warnAboutLocalCLI","localCmd","profileMethod","promptToClearMalformedNativeProjectsAsync","exp","getConfig","skipSDKVersionRequirement","track","Log","warn","chalk","cyan","fs","existsSync","join","prebuildAsync","install","platforms","maybePromptToSyncPodsAsync","props","resolveOptionsAsync","isSimulator","AppleDevice","isEnabled","log","gray","bold","assertInstalledAsync","buildOutput","buildAsync","binaryPath","getAppBinaryPath","setGlobalDevClientSettingsAsync","shouldStartBundler","startBundlerAsync","metroPort","port","bundleIdentifier","getBundleIdentifierForBinaryAsync","logPrettyItem","device","name","SimControl","installAsync","udid","dir","openInSimulatorAsync","installOnDeviceAsync","bundle","appDeltaDirectory","getAppDeltaDirectory","deviceName","nested","dim","UnifiedAnalytics","logEvent","status","getDevClientProperties","StatusEventEmitter","once","installCustomExitHook","flush","builtInfoPlistPath","CFBundleIdentifier","parseBinaryPlistAsync","Simulator","streamLogsAsync","schemes","getSchemesForIosAsync","result","openProjectAsync","devClient","scheme","applicationId","skipNativeLogs","success","CommandError","error"],"sources":["../../../../src/commands/run/ios/runIos.ts"],"sourcesContent":["import { ExpoConfig, getConfig } from '@expo/config';\nimport chalk from 'chalk';\nimport fs from 'fs-extra';\nimport * as path from 'path';\nimport { AppleDevice, SimControl, Simulator, UnifiedAnalytics } from 'xdl';\n\nimport CommandError from '../../../CommandError';\nimport StatusEventEmitter from '../../../analytics/StatusEventEmitter';\nimport getDevClientProperties from '../../../analytics/getDevClientProperties';\nimport Log from '../../../log';\nimport { warnAboutLocalCLI } from '../../../utils/migration';\nimport { promptToClearMalformedNativeProjectsAsync } from '../../eject/clearNativeFolder';\nimport { EjectAsyncOptions, prebuildAsync } from '../../eject/prebuildAppAsync';\nimport { installCustomExitHook } from '../../start/installExitHooks';\nimport { profileMethod } from '../../utils/profileMethod';\nimport { setGlobalDevClientSettingsAsync, startBundlerAsync } from '../ios/startBundlerAsync';\nimport { parseBinaryPlistAsync } from '../utils/binaryPlist';\nimport { getSchemesForIosAsync } from '../utils/schemes';\nimport * as IOSDeploy from './IOSDeploy';\nimport maybePromptToSyncPodsAsync from './Podfile';\nimport * as XcodeBuild from './XcodeBuild';\nimport { getAppDeltaDirectory, installOnDeviceAsync } from './installOnDeviceAsync';\nimport { Options, resolveOptionsAsync } from './resolveOptionsAsync';\n\nconst isMac = process.platform === 'darwin';\n\nexport async function actionAsync(projectRoot: string, options: Options) {\n  warnAboutLocalCLI(projectRoot, { localCmd: 'run:ios' });\n\n  // If the user has an empty ios folder then the project won't build, this can happen when they delete the prebuild files in git.\n  // Check to ensure most of the core files are in place, and prompt to remove the folder if they aren't.\n  await profileMethod(promptToClearMalformedNativeProjectsAsync)(projectRoot, ['ios']);\n\n  const { exp } = getConfig(projectRoot, { skipSDKVersionRequirement: true });\n  track(projectRoot, exp);\n\n  if (!isMac) {\n    // TODO: Prompt to use EAS?\n\n    Log.warn(\n      `iOS apps can only be built on macOS devices. Use ${chalk.cyan`eas build -p ios`} to build in the cloud.`\n    );\n    return;\n  }\n\n  // If the project doesn't have native code, prebuild it...\n  if (!fs.existsSync(path.join(projectRoot, 'ios'))) {\n    await prebuildAsync(projectRoot, {\n      install: options.install,\n      platforms: ['ios'],\n    } as EjectAsyncOptions);\n  } else if (options.install) {\n    await maybePromptToSyncPodsAsync(projectRoot);\n    // TODO: Ensure the pods are in sync -- https://github.com/expo/expo/pull/11593\n  }\n\n  const props = await resolveOptionsAsync(projectRoot, options);\n  if (!props.isSimulator) {\n    if (AppleDevice.isEnabled()) {\n      Log.log(\n        chalk.gray(\n          `\\u203A Unstable feature ${chalk.bold`EXPO_USE_APPLE_DEVICE`} is enabled. Device installation may not work as expected.`\n        )\n      );\n    } else {\n      // Assert as early as possible\n      await IOSDeploy.assertInstalledAsync();\n    }\n  }\n\n  const buildOutput = await profileMethod(XcodeBuild.buildAsync, 'XcodeBuild.buildAsync')(props);\n\n  const binaryPath = await profileMethod(\n    XcodeBuild.getAppBinaryPath,\n    'XcodeBuild.getAppBinaryPath'\n  )(buildOutput);\n\n  await setGlobalDevClientSettingsAsync(projectRoot);\n  if (props.shouldStartBundler) {\n    await startBundlerAsync(projectRoot, {\n      metroPort: props.port,\n      platforms: exp.platforms,\n    });\n  }\n  const bundleIdentifier = await profileMethod(getBundleIdentifierForBinaryAsync)(binaryPath);\n\n  if (props.isSimulator) {\n    XcodeBuild.logPrettyItem(`${chalk.bold`Installing`} on ${props.device.name}`);\n    await SimControl.installAsync({ udid: props.device.udid, dir: binaryPath });\n\n    await openInSimulatorAsync({\n      projectRoot,\n      bundleIdentifier,\n      device: props.device,\n      shouldStartBundler: props.shouldStartBundler,\n    });\n  } else {\n    await profileMethod(installOnDeviceAsync)({\n      bundleIdentifier,\n      bundle: binaryPath,\n      appDeltaDirectory: getAppDeltaDirectory(bundleIdentifier),\n      udid: props.device.udid,\n      deviceName: props.device.name,\n    });\n  }\n\n  if (props.shouldStartBundler) {\n    Log.nested(`\\nLogs for your project will appear below. ${chalk.dim(`Press Ctrl+C to exit.`)}`);\n  }\n}\n\nfunction track(projectRoot: string, exp: ExpoConfig) {\n  UnifiedAnalytics.logEvent('dev client run command', {\n    status: 'started',\n    platform: 'ios',\n    ...getDevClientProperties(projectRoot, exp),\n  });\n  StatusEventEmitter.once('bundleBuildFinish', () => {\n    // Send the 'bundle ready' event once the JS has been built.\n    UnifiedAnalytics.logEvent('dev client run command', {\n      status: 'bundle ready',\n      platform: 'ios',\n      ...getDevClientProperties(projectRoot, exp),\n    });\n  });\n  StatusEventEmitter.once('deviceLogReceive', () => {\n    // Send the 'ready' event once the app is running in a device.\n    UnifiedAnalytics.logEvent('dev client run command', {\n      status: 'ready',\n      platform: 'ios',\n      ...getDevClientProperties(projectRoot, exp),\n    });\n  });\n  installCustomExitHook(() => {\n    UnifiedAnalytics.logEvent('dev client run command', {\n      status: 'finished',\n      platform: 'ios',\n      ...getDevClientProperties(projectRoot, exp),\n    });\n    UnifiedAnalytics.flush();\n  });\n}\n\nasync function getBundleIdentifierForBinaryAsync(binaryPath: string): Promise<string> {\n  const builtInfoPlistPath = path.join(binaryPath, 'Info.plist');\n  const { CFBundleIdentifier } = await parseBinaryPlistAsync(builtInfoPlistPath);\n  return CFBundleIdentifier;\n}\n\nasync function openInSimulatorAsync({\n  projectRoot,\n  bundleIdentifier,\n  device,\n  shouldStartBundler,\n}: {\n  projectRoot: string;\n  bundleIdentifier: string;\n  device: XcodeBuild.BuildProps['device'];\n  shouldStartBundler?: boolean;\n}) {\n  XcodeBuild.logPrettyItem(\n    `${chalk.bold`Opening`} on ${device.name} ${chalk.dim(`(${bundleIdentifier})`)}`\n  );\n\n  if (shouldStartBundler) {\n    await Simulator.streamLogsAsync({\n      udid: device.udid,\n      bundleIdentifier,\n    });\n  }\n\n  const schemes = await getSchemesForIosAsync(projectRoot);\n  const result = await Simulator.openProjectAsync({\n    projectRoot,\n    udid: device.udid,\n    devClient: true,\n    scheme: schemes[0],\n    applicationId: bundleIdentifier,\n    // We always setup native logs before launching to ensure we catch any fatal errors.\n    skipNativeLogs: true,\n  });\n  if (!result.success) {\n    throw new CommandError(result.error);\n  }\n}\n"],"mappings":";;;;;;AAAA,SAAAA,QAAA;EAAA,MAAAC,IAAA,GAAAC,OAAA;EAAAF,OAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAE,OAAA;EAAA,MAAAF,IAAA,GAAAG,sBAAA,CAAAF,OAAA;EAAAC,MAAA,YAAAA,CAAA;IAAA,OAAAF,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAI,SAAA;EAAA,MAAAJ,IAAA,GAAAG,sBAAA,CAAAF,OAAA;EAAAG,QAAA,YAAAA,CAAA;IAAA,OAAAJ,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAK,KAAA;EAAA,MAAAL,IAAA,GAAAM,uBAAA,CAAAL,OAAA;EAAAI,IAAA,YAAAA,CAAA;IAAA,OAAAL,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAO,KAAA;EAAA,MAAAP,IAAA,GAAAC,OAAA;EAAAM,IAAA,YAAAA,CAAA;IAAA,OAAAP,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEA,SAAAQ,cAAA;EAAA,MAAAR,IAAA,GAAAG,sBAAA,CAAAF,OAAA;EAAAO,aAAA,YAAAA,CAAA;IAAA,OAAAR,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAS,oBAAA;EAAA,MAAAT,IAAA,GAAAG,sBAAA,CAAAF,OAAA;EAAAQ,mBAAA,YAAAA,CAAA;IAAA,OAAAT,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAU,wBAAA;EAAA,MAAAV,IAAA,GAAAG,sBAAA,CAAAF,OAAA;EAAAS,uBAAA,YAAAA,CAAA;IAAA,OAAAV,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAW,KAAA;EAAA,MAAAX,IAAA,GAAAG,sBAAA,CAAAF,OAAA;EAAAU,IAAA,YAAAA,CAAA;IAAA,OAAAX,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAY,WAAA;EAAA,MAAAZ,IAAA,GAAAC,OAAA;EAAAW,UAAA,YAAAA,CAAA;IAAA,OAAAZ,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAa,mBAAA;EAAA,MAAAb,IAAA,GAAAC,OAAA;EAAAY,kBAAA,YAAAA,CAAA;IAAA,OAAAb,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAc,kBAAA;EAAA,MAAAd,IAAA,GAAAC,OAAA;EAAAa,iBAAA,YAAAA,CAAA;IAAA,OAAAd,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAe,kBAAA;EAAA,MAAAf,IAAA,GAAAC,OAAA;EAAAc,iBAAA,YAAAA,CAAA;IAAA,OAAAf,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAgB,eAAA;EAAA,MAAAhB,IAAA,GAAAC,OAAA;EAAAe,cAAA,YAAAA,CAAA;IAAA,OAAAhB,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAiB,mBAAA;EAAA,MAAAjB,IAAA,GAAAC,OAAA;EAAAgB,kBAAA,YAAAA,CAAA;IAAA,OAAAjB,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAkB,aAAA;EAAA,MAAAlB,IAAA,GAAAC,OAAA;EAAAiB,YAAA,YAAAA,CAAA;IAAA,OAAAlB,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAmB,SAAA;EAAA,MAAAnB,IAAA,GAAAC,OAAA;EAAAkB,QAAA,YAAAA,CAAA;IAAA,OAAAnB,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAoB,UAAA;EAAA,MAAApB,IAAA,GAAAM,uBAAA,CAAAL,OAAA;EAAAmB,SAAA,YAAAA,CAAA;IAAA,OAAApB,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAqB,SAAA;EAAA,MAAArB,IAAA,GAAAG,sBAAA,CAAAF,OAAA;EAAAoB,QAAA,YAAAA,CAAA;IAAA,OAAArB,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAsB,WAAA;EAAA,MAAAtB,IAAA,GAAAM,uBAAA,CAAAL,OAAA;EAAAqB,UAAA,YAAAA,CAAA;IAAA,OAAAtB,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAuB,sBAAA;EAAA,MAAAvB,IAAA,GAAAC,OAAA;EAAAsB,qBAAA,YAAAA,CAAA;IAAA,OAAAvB,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAwB,qBAAA;EAAA,MAAAxB,IAAA,GAAAC,OAAA;EAAAuB,oBAAA,YAAAA,CAAA;IAAA,OAAAxB,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAAqE,SAAAyB,yBAAAC,WAAA,eAAAC,OAAA,kCAAAC,iBAAA,OAAAD,OAAA,QAAAE,gBAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,CAAAC,WAAA,WAAAA,WAAA,GAAAG,gBAAA,GAAAD,iBAAA,KAAAF,WAAA;AAAA,SAAApB,wBAAAwB,GAAA,EAAAJ,WAAA,SAAAA,WAAA,IAAAI,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,QAAAA,GAAA,oBAAAA,GAAA,wBAAAA,GAAA,4BAAAE,OAAA,EAAAF,GAAA,UAAAG,KAAA,GAAAR,wBAAA,CAAAC,WAAA,OAAAO,KAAA,IAAAA,KAAA,CAAAC,GAAA,CAAAJ,GAAA,YAAAG,KAAA,CAAAE,GAAA,CAAAL,GAAA,SAAAM,MAAA,WAAAC,qBAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,GAAA,IAAAX,GAAA,QAAAW,GAAA,kBAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAd,GAAA,EAAAW,GAAA,SAAAI,IAAA,GAAAR,qBAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAV,GAAA,EAAAW,GAAA,cAAAI,IAAA,KAAAA,IAAA,CAAAV,GAAA,IAAAU,IAAA,CAAAC,GAAA,KAAAR,MAAA,CAAAC,cAAA,CAAAH,MAAA,EAAAK,GAAA,EAAAI,IAAA,YAAAT,MAAA,CAAAK,GAAA,IAAAX,GAAA,CAAAW,GAAA,SAAAL,MAAA,CAAAJ,OAAA,GAAAF,GAAA,MAAAG,KAAA,IAAAA,KAAA,CAAAa,GAAA,CAAAhB,GAAA,EAAAM,MAAA,YAAAA,MAAA;AAAA,SAAAjC,uBAAA2B,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAErE,MAAMiB,KAAK,GAAGC,OAAO,CAACC,QAAQ,KAAK,QAAQ;AAEpC,eAAeC,WAAWA,CAACC,WAAmB,EAAEC,OAAgB,EAAE;EACvE,IAAAC,8BAAiB,EAACF,WAAW,EAAE;IAAEG,QAAQ,EAAE;EAAU,CAAC,CAAC;;EAEvD;EACA;EACA,MAAM,IAAAC,8BAAa,EAACC,8DAAyC,CAAC,CAACL,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC;EAEpF,MAAM;IAAEM;EAAI,CAAC,GAAG,IAAAC,mBAAS,EAACP,WAAW,EAAE;IAAEQ,yBAAyB,EAAE;EAAK,CAAC,CAAC;EAC3EC,KAAK,CAACT,WAAW,EAAEM,GAAG,CAAC;EAEvB,IAAI,CAACV,KAAK,EAAE;IACV;;IAEAc,cAAG,CAACC,IAAI,CACL,oDAAmDC,gBAAK,CAACC,IAAK,kBAAkB,yBACnF,CAAC;IACD;EACF;;EAEA;EACA,IAAI,CAACC,kBAAE,CAACC,UAAU,CAAC7D,IAAI,CAAD,CAAC,CAAC8D,IAAI,CAAChB,WAAW,EAAE,KAAK,CAAC,CAAC,EAAE;IACjD,MAAM,IAAAiB,iCAAa,EAACjB,WAAW,EAAE;MAC/BkB,OAAO,EAAEjB,OAAO,CAACiB,OAAO;MACxBC,SAAS,EAAE,CAAC,KAAK;IACnB,CAAsB,CAAC;EACzB,CAAC,MAAM,IAAIlB,OAAO,CAACiB,OAAO,EAAE;IAC1B,MAAM,IAAAE,kBAA0B,EAACpB,WAAW,CAAC;IAC7C;EACF;;EAEA,MAAMqB,KAAK,GAAG,MAAM,IAAAC,0CAAmB,EAACtB,WAAW,EAAEC,OAAO,CAAC;EAC7D,IAAI,CAACoB,KAAK,CAACE,WAAW,EAAE;IACtB,IAAIC,kBAAW,CAACC,SAAS,CAAC,CAAC,EAAE;MAC3Bf,cAAG,CAACgB,GAAG,CACLd,gBAAK,CAACe,IAAI,CACP,2BAA0Bf,gBAAK,CAACgB,IAAK,uBAAuB,4DAC/D,CACF,CAAC;IACH,CAAC,MAAM;MACL;MACA,MAAM3D,SAAS,CAAD,CAAC,CAAC4D,oBAAoB,CAAC,CAAC;IACxC;EACF;EAEA,MAAMC,WAAW,GAAG,MAAM,IAAA1B,8BAAa,EAACjC,UAAU,CAAD,CAAC,CAAC4D,UAAU,EAAE,uBAAuB,CAAC,CAACV,KAAK,CAAC;EAE9F,MAAMW,UAAU,GAAG,MAAM,IAAA5B,8BAAa,EACpCjC,UAAU,CAAD,CAAC,CAAC8D,gBAAgB,EAC3B,6BACF,CAAC,CAACH,WAAW,CAAC;EAEd,MAAM,IAAAI,oDAA+B,EAAClC,WAAW,CAAC;EAClD,IAAIqB,KAAK,CAACc,kBAAkB,EAAE;IAC5B,MAAM,IAAAC,sCAAiB,EAACpC,WAAW,EAAE;MACnCqC,SAAS,EAAEhB,KAAK,CAACiB,IAAI;MACrBnB,SAAS,EAAEb,GAAG,CAACa;IACjB,CAAC,CAAC;EACJ;EACA,MAAMoB,gBAAgB,GAAG,MAAM,IAAAnC,8BAAa,EAACoC,iCAAiC,CAAC,CAACR,UAAU,CAAC;EAE3F,IAAIX,KAAK,CAACE,WAAW,EAAE;IACrBpD,UAAU,CAAD,CAAC,CAACsE,aAAa,CAAE,GAAE7B,gBAAK,CAACgB,IAAK,YAAY,OAAMP,KAAK,CAACqB,MAAM,CAACC,IAAK,EAAC,CAAC;IAC7E,MAAMC,iBAAU,CAACC,YAAY,CAAC;MAAEC,IAAI,EAAEzB,KAAK,CAACqB,MAAM,CAACI,IAAI;MAAEC,GAAG,EAAEf;IAAW,CAAC,CAAC;IAE3E,MAAMgB,oBAAoB,CAAC;MACzBhD,WAAW;MACXuC,gBAAgB;MAChBG,MAAM,EAAErB,KAAK,CAACqB,MAAM;MACpBP,kBAAkB,EAAEd,KAAK,CAACc;IAC5B,CAAC,CAAC;EACJ,CAAC,MAAM;IACL,MAAM,IAAA/B,8BAAa,EAAC6C,4CAAoB,CAAC,CAAC;MACxCV,gBAAgB;MAChBW,MAAM,EAAElB,UAAU;MAClBmB,iBAAiB,EAAE,IAAAC,4CAAoB,EAACb,gBAAgB,CAAC;MACzDO,IAAI,EAAEzB,KAAK,CAACqB,MAAM,CAACI,IAAI;MACvBO,UAAU,EAAEhC,KAAK,CAACqB,MAAM,CAACC;IAC3B,CAAC,CAAC;EACJ;EAEA,IAAItB,KAAK,CAACc,kBAAkB,EAAE;IAC5BzB,cAAG,CAAC4C,MAAM,CAAE,8CAA6C1C,gBAAK,CAAC2C,GAAG,CAAE,uBAAsB,CAAE,EAAC,CAAC;EAChG;AACF;AAEA,SAAS9C,KAAKA,CAACT,WAAmB,EAAEM,GAAe,EAAE;EACnDkD,uBAAgB,CAACC,QAAQ,CAAC,wBAAwB,EAAE;IAClDC,MAAM,EAAE,SAAS;IACjB5D,QAAQ,EAAE,KAAK;IACf,GAAG,IAAA6D,iCAAsB,EAAC3D,WAAW,EAAEM,GAAG;EAC5C,CAAC,CAAC;EACFsD,6BAAkB,CAACC,IAAI,CAAC,mBAAmB,EAAE,MAAM;IACjD;IACAL,uBAAgB,CAACC,QAAQ,CAAC,wBAAwB,EAAE;MAClDC,MAAM,EAAE,cAAc;MACtB5D,QAAQ,EAAE,KAAK;MACf,GAAG,IAAA6D,iCAAsB,EAAC3D,WAAW,EAAEM,GAAG;IAC5C,CAAC,CAAC;EACJ,CAAC,CAAC;EACFsD,6BAAkB,CAACC,IAAI,CAAC,kBAAkB,EAAE,MAAM;IAChD;IACAL,uBAAgB,CAACC,QAAQ,CAAC,wBAAwB,EAAE;MAClDC,MAAM,EAAE,OAAO;MACf5D,QAAQ,EAAE,KAAK;MACf,GAAG,IAAA6D,iCAAsB,EAAC3D,WAAW,EAAEM,GAAG;IAC5C,CAAC,CAAC;EACJ,CAAC,CAAC;EACF,IAAAwD,yCAAqB,EAAC,MAAM;IAC1BN,uBAAgB,CAACC,QAAQ,CAAC,wBAAwB,EAAE;MAClDC,MAAM,EAAE,UAAU;MAClB5D,QAAQ,EAAE,KAAK;MACf,GAAG,IAAA6D,iCAAsB,EAAC3D,WAAW,EAAEM,GAAG;IAC5C,CAAC,CAAC;IACFkD,uBAAgB,CAACO,KAAK,CAAC,CAAC;EAC1B,CAAC,CAAC;AACJ;AAEA,eAAevB,iCAAiCA,CAACR,UAAkB,EAAmB;EACpF,MAAMgC,kBAAkB,GAAG9G,IAAI,CAAD,CAAC,CAAC8D,IAAI,CAACgB,UAAU,EAAE,YAAY,CAAC;EAC9D,MAAM;IAAEiC;EAAmB,CAAC,GAAG,MAAM,IAAAC,oCAAqB,EAACF,kBAAkB,CAAC;EAC9E,OAAOC,kBAAkB;AAC3B;AAEA,eAAejB,oBAAoBA,CAAC;EAClChD,WAAW;EACXuC,gBAAgB;EAChBG,MAAM;EACNP;AAMF,CAAC,EAAE;EACDhE,UAAU,CAAD,CAAC,CAACsE,aAAa,CACrB,GAAE7B,gBAAK,CAACgB,IAAK,SAAS,OAAMc,MAAM,CAACC,IAAK,IAAG/B,gBAAK,CAAC2C,GAAG,CAAE,IAAGhB,gBAAiB,GAAE,CAAE,EACjF,CAAC;EAED,IAAIJ,kBAAkB,EAAE;IACtB,MAAMgC,gBAAS,CAACC,eAAe,CAAC;MAC9BtB,IAAI,EAAEJ,MAAM,CAACI,IAAI;MACjBP;IACF,CAAC,CAAC;EACJ;EAEA,MAAM8B,OAAO,GAAG,MAAM,IAAAC,gCAAqB,EAACtE,WAAW,CAAC;EACxD,MAAMuE,MAAM,GAAG,MAAMJ,gBAAS,CAACK,gBAAgB,CAAC;IAC9CxE,WAAW;IACX8C,IAAI,EAAEJ,MAAM,CAACI,IAAI;IACjB2B,SAAS,EAAE,IAAI;IACfC,MAAM,EAAEL,OAAO,CAAC,CAAC,CAAC;IAClBM,aAAa,EAAEpC,gBAAgB;IAC/B;IACAqC,cAAc,EAAE;EAClB,CAAC,CAAC;EACF,IAAI,CAACL,MAAM,CAACM,OAAO,EAAE;IACnB,MAAM,KAAIC,uBAAY,EAACP,MAAM,CAACQ,KAAK,CAAC;EACtC;AACF"}