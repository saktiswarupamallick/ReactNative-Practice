{"version":3,"file":"fetchAndroidHashesAsync.js","names":["fs","data","_interopRequireWildcard","require","path","_xdl","_credentials","_route","_AndroidKeystore","_log","_interopRequireDefault","_utils","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","actionAsync","projectRoot","options","_options$parent","ctx","Context","init","nonInteractive","parent","outputPath","resolve","manifest","slug","assertSlug","experienceName","projectOwner","view","DownloadKeystore","quiet","runCredentialsManager","keystore","android","fetchKeystore","AndroidCredentials","logKeystoreHashes","keystorePath","keystorePassword","keyAlias","keyPassword","Log","log","warn","remove"],"sources":["../../../src/commands/fetch/fetchAndroidHashesAsync.ts"],"sourcesContent":["import * as fs from 'fs-extra';\nimport * as path from 'path';\nimport { AndroidCredentials } from 'xdl';\n\nimport { Context } from '../../credentials';\nimport { runCredentialsManager } from '../../credentials/route';\nimport { DownloadKeystore } from '../../credentials/views/AndroidKeystore';\nimport Log from '../../log';\nimport { assertSlug, Options } from './utils';\n\nexport async function actionAsync(projectRoot: string, options: Options): Promise<void> {\n  const ctx = new Context();\n  await ctx.init(projectRoot, {\n    nonInteractive: options.parent?.nonInteractive,\n  });\n  const outputPath = path.resolve(projectRoot, `${ctx.manifest.slug}.tmp.jks`);\n  try {\n    assertSlug(ctx.manifest.slug);\n    const experienceName = `@${ctx.projectOwner}/${ctx.manifest.slug}`;\n    const view = new DownloadKeystore(experienceName, {\n      outputPath,\n      quiet: true,\n    });\n    await runCredentialsManager(ctx, view);\n    const keystore = await ctx.android.fetchKeystore(experienceName);\n\n    if (keystore) {\n      await AndroidCredentials.logKeystoreHashes({\n        keystorePath: outputPath,\n        keystorePassword: keystore.keystorePassword,\n        keyAlias: keystore.keyAlias,\n        keyPassword: keystore.keyPassword,\n      });\n      Log.log(\n        `\\nNote: if you are using Google Play signing, this app will be signed with a different key after publishing to the store, and you'll need to use the hashes displayed in the Google Play console.`\n      );\n    } else {\n      Log.warn('There is no valid Keystore defined for this app');\n    }\n  } finally {\n    await fs.remove(outputPath);\n  }\n}\n"],"mappings":"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"}