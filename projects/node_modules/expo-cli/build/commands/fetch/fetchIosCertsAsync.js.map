{"version":3,"file":"fetchIosCertsAsync.js","names":["_chalk","data","_interopRequireDefault","require","fs","_interopRequireWildcard","path","_CommandError","_context","_log","_getOrPromptApplicationId","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","actionAsync","projectRoot","inProjectDir","filename","resolve","bundleIdentifier","getOrPromptForBundleIdentifier","_appCredentials$crede","ctx","Context","init","app","accountName","projectOwner","projectName","manifest","slug","Log","log","appCredentials","ios","getAppCredentials","pushCredentials","getPushKey","distCredentials","getDistCert","certP12","certPassword","certPrivateSigningKey","apnsKeyId","apnsKeyP8","pushP12","pushPassword","provisioningProfile","teamId","credentials","undefined","distPath","writeFile","Buffer","from","distPrivateKeyPath","apnsKeyP8Path","pushPath","provisioningProfilePath","chalk","bold","yellow","CommandError"],"sources":["../../../src/commands/fetch/fetchIosCertsAsync.ts"],"sourcesContent":["import chalk from 'chalk';\nimport * as fs from 'fs-extra';\nimport * as path from 'path';\n\nimport CommandError from '../../CommandError';\nimport { Context } from '../../credentials/context';\nimport Log from '../../log';\nimport { getOrPromptForBundleIdentifier } from '../utils/getOrPromptApplicationId';\n\nexport async function actionAsync(projectRoot: string): Promise<void> {\n  const inProjectDir = (filename: string): string => path.resolve(projectRoot, filename);\n\n  const bundleIdentifier = await getOrPromptForBundleIdentifier(projectRoot);\n\n  try {\n    const ctx = new Context();\n    await ctx.init(projectRoot);\n\n    const app = {\n      accountName: ctx.projectOwner,\n      projectName: ctx.manifest.slug,\n      bundleIdentifier,\n    };\n    Log.log(\n      `Retrieving iOS credentials for @${app.accountName}/${app.projectName} (${bundleIdentifier})`\n    );\n    const appCredentials = await ctx.ios.getAppCredentials(app);\n    const pushCredentials = await ctx.ios.getPushKey(app);\n    const distCredentials = await ctx.ios.getDistCert(app);\n\n    const { certP12, certPassword, certPrivateSigningKey } = distCredentials ?? {};\n    const { apnsKeyId, apnsKeyP8 } = pushCredentials ?? {};\n    const { pushP12, pushPassword, provisioningProfile, teamId } =\n      appCredentials?.credentials ?? {};\n\n    if (teamId !== undefined) {\n      Log.log(`These credentials are associated with Apple Team ID: ${teamId}`);\n    }\n    if (certP12) {\n      const distPath = inProjectDir(`${app.projectName}_dist.p12`);\n      await fs.writeFile(distPath, Buffer.from(certP12, 'base64'));\n    }\n    if (certPrivateSigningKey) {\n      const distPrivateKeyPath = inProjectDir(`${app.projectName}_dist_cert_private.key`);\n      await fs.writeFile(distPrivateKeyPath, certPrivateSigningKey);\n    }\n    if (certP12 || certPrivateSigningKey) {\n      Log.log('Wrote distribution cert credentials to disk.');\n    }\n    if (apnsKeyP8) {\n      const apnsKeyP8Path = inProjectDir(`${app.projectName}_apns_key.p8`);\n      await fs.writeFile(apnsKeyP8Path, apnsKeyP8);\n      Log.log('Wrote push key credentials to disk.');\n    }\n    if (pushP12) {\n      const pushPath = inProjectDir(`${app.projectName}_push.p12`);\n      await fs.writeFile(pushPath, Buffer.from(pushP12, 'base64'));\n    }\n    if (pushP12) {\n      Log.log('Wrote push cert credentials to disk.');\n    }\n    if (provisioningProfile) {\n      const provisioningProfilePath = path.resolve(\n        projectRoot,\n        `${app.projectName}.mobileprovision`\n      );\n      await fs.writeFile(provisioningProfilePath, Buffer.from(provisioningProfile, 'base64'));\n      Log.log('Wrote provisioning profile to disk');\n    }\n    Log.log(`Save these important values as well:\n\nDistribution P12 password: ${\n      certPassword ? chalk.bold(certPassword) : chalk.yellow('(not available)')\n    }\nPush Key ID:               ${apnsKeyId ? chalk.bold(apnsKeyId) : chalk.yellow('(not available)')}\nPush P12 password:         ${\n      pushPassword ? chalk.bold(pushPassword) : chalk.yellow('(not available)')\n    }\n`);\n  } catch {\n    throw new CommandError(\n      'Unable to fetch credentials for this project. Are you sure they exist?'\n    );\n  }\n\n  Log.log('All done!');\n}\n"],"mappings":"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"}