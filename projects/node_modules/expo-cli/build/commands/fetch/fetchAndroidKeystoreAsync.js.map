{"version":3,"file":"fetchAndroidKeystoreAsync.js","names":["path","data","_interopRequireWildcard","require","_credentials","_route","_AndroidKeystore","_utils","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","actionAsync","projectRoot","options","_options$parent","ctx","Context","init","nonInteractive","parent","keystoreFilename","manifest","slug","maybeRenameExistingFileAsync","backupKeystoreOutputPath","resolve","experienceName","projectOwner","assertSlug","runCredentialsManager","DownloadKeystore","outputPath","displayCredentials"],"sources":["../../../src/commands/fetch/fetchAndroidKeystoreAsync.ts"],"sourcesContent":["import * as path from 'path';\n\nimport { Context } from '../../credentials';\nimport { runCredentialsManager } from '../../credentials/route';\nimport { DownloadKeystore } from '../../credentials/views/AndroidKeystore';\nimport { assertSlug, maybeRenameExistingFileAsync, Options } from './utils';\n\nexport async function actionAsync(projectRoot: string, options: Options): Promise<void> {\n  const ctx = new Context();\n  await ctx.init(projectRoot, {\n    nonInteractive: options.parent?.nonInteractive,\n  });\n\n  const keystoreFilename = `${ctx.manifest.slug}.jks`;\n  await maybeRenameExistingFileAsync(projectRoot, keystoreFilename);\n  const backupKeystoreOutputPath = path.resolve(projectRoot, keystoreFilename);\n  const experienceName = `@${ctx.projectOwner}/${ctx.manifest.slug}`;\n\n  assertSlug(ctx.manifest.slug);\n  await runCredentialsManager(\n    ctx,\n    new DownloadKeystore(experienceName, {\n      outputPath: backupKeystoreOutputPath,\n      displayCredentials: true,\n    })\n  );\n}\n"],"mappings":"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"}