{"version":3,"file":"logArtifactUrl.js","names":["_xdl","data","require","_CommandError","_interopRequireDefault","_log","_getBuildStatusAsync","obj","__esModule","default","assertHTTPS","url","UrlUtils","isHttps","CommandError","logArtifactUrl","platform","projectRoot","options","_result$jobs","_result$jobs$filter$","_result$jobs$filter$$","publicUrl","result","getBuildStatusAsync","current","jobs","filter","job","artifacts","Log","nested","exports"],"sources":["../../../src/commands/url/logArtifactUrl.ts"],"sourcesContent":["import { UrlUtils } from 'xdl';\n\nimport CommandError from '../../CommandError';\nimport Log from '../../log';\nimport { BuildJobFields, getBuildStatusAsync } from '../build/getBuildStatusAsync';\n\ntype ArtifactUrlOptions = {\n  publicUrl?: string;\n};\n\nfunction assertHTTPS(url?: string) {\n  if (url && !UrlUtils.isHttps(url)) {\n    throw new CommandError('INVALID_PUBLIC_URL', '--public-url must be a valid HTTPS URL.');\n  }\n}\n\nexport const logArtifactUrl = (platform: 'ios' | 'android') => async (\n  projectRoot: string,\n  options: ArtifactUrlOptions\n) => {\n  assertHTTPS(options.publicUrl);\n\n  const result = await getBuildStatusAsync(projectRoot, {\n    current: false,\n    ...(options.publicUrl ? { publicUrl: options.publicUrl } : {}),\n  });\n\n  const url = result.jobs?.filter((job: BuildJobFields) => job.platform === platform)[0]?.artifacts\n    ?.url;\n\n  if (!url) {\n    throw new CommandError(\n      `No ${platform} binary file found. Use \"expo build:${platform}\" to create one.`\n    );\n  }\n\n  Log.nested(url);\n};\n"],"mappings":";;;;;;AAAA,SAAAA,KAAA;EAAA,MAAAC,IAAA,GAAAC,OAAA;EAAAF,IAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEA,SAAAE,cAAA;EAAA,MAAAF,IAAA,GAAAG,sBAAA,CAAAF,OAAA;EAAAC,aAAA,YAAAA,CAAA;IAAA,OAAAF,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAI,KAAA;EAAA,MAAAJ,IAAA,GAAAG,sBAAA,CAAAF,OAAA;EAAAG,IAAA,YAAAA,CAAA;IAAA,OAAAJ,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAK,qBAAA;EAAA,MAAAL,IAAA,GAAAC,OAAA;EAAAI,oBAAA,YAAAA,CAAA;IAAA,OAAAL,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAAmF,SAAAG,uBAAAG,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAMnF,SAASG,WAAWA,CAACC,GAAY,EAAE;EACjC,IAAIA,GAAG,IAAI,CAACC,eAAQ,CAACC,OAAO,CAACF,GAAG,CAAC,EAAE;IACjC,MAAM,KAAIG,uBAAY,EAAC,oBAAoB,EAAE,yCAAyC,CAAC;EACzF;AACF;AAEO,MAAMC,cAAc,GAAIC,QAA2B,IAAK,OAC7DC,WAAmB,EACnBC,OAA2B,KACxB;EAAA,IAAAC,YAAA,EAAAC,oBAAA,EAAAC,qBAAA;EACHX,WAAW,CAACQ,OAAO,CAACI,SAAS,CAAC;EAE9B,MAAMC,MAAM,GAAG,MAAM,IAAAC,0CAAmB,EAACP,WAAW,EAAE;IACpDQ,OAAO,EAAE,KAAK;IACd,IAAIP,OAAO,CAACI,SAAS,GAAG;MAAEA,SAAS,EAAEJ,OAAO,CAACI;IAAU,CAAC,GAAG,CAAC,CAAC;EAC/D,CAAC,CAAC;EAEF,MAAMX,GAAG,IAAAQ,YAAA,GAAGI,MAAM,CAACG,IAAI,cAAAP,YAAA,wBAAAC,oBAAA,GAAXD,YAAA,CAAaQ,MAAM,CAAEC,GAAmB,IAAKA,GAAG,CAACZ,QAAQ,KAAKA,QAAQ,CAAC,CAAC,CAAC,CAAC,cAAAI,oBAAA,wBAAAC,qBAAA,GAA1ED,oBAAA,CAA4ES,SAAS,cAAAR,qBAAA,uBAArFA,qBAAA,CACRV,GAAG;EAEP,IAAI,CAACA,GAAG,EAAE;IACR,MAAM,KAAIG,uBAAY,EACnB,MAAKE,QAAS,uCAAsCA,QAAS,kBAChE,CAAC;EACH;EAEAc,cAAG,CAACC,MAAM,CAACpB,GAAG,CAAC;AACjB,CAAC;AAACqB,OAAA,CAAAjB,cAAA,GAAAA,cAAA"}