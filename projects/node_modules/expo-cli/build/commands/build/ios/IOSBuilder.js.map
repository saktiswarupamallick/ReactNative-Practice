{"version":3,"file":"IOSBuilder.js","names":["_chalk","data","_interopRequireDefault","require","_pickBy","_os","_semver","_xdl","_CommandError","_interopRequireWildcard","apple","_list","_context","_route","_IosDistCert","_IosProvisioningProfile","_IosPushCredentials","_SetupIosDist","_SetupIosProvisioningProfile","_SetupIosPush","_log","_prompts","TerminalLink","_getOrPromptApplicationId","_BaseBuilder","_constants","utils","_image","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","noBundleIdMessage","missingBundleIdentifierError","XDLError","IOSBuilder","BaseBuilder","run","options","type","askBuildType","archive","simulator","maybeWarnDamagedSimulator","Log","addNewLineIfNone","checkForBuildInProgress","prepareCredentials","publishedExpIds","ensureProjectIsPublished","publicUrl","checkStatusBeforeBuild","build","maybeExplainUploadStep","bestEffortAppleCtx","ctx","hasAppleCtx","appleId","ensureAppleCtx","nonInteractive","parent","confirm","confirmAsync","message","log","chalk","green","checkProjectConfig","sdkVersion","manifest","checkIfSdkIsSupported","PLATFORMS","IOS","validateIcon","getOrPromptForBundleIdentifier","projectDir","updateProjectConfig","getAccountNameAsync","_await$this$getUserAs","owner","getUserAsync","username","_this$manifest$ios","_this$options$parent","accountName","projectName","slug","bundleIdentifier","ios","appLookupParams","context","Context","init","skipCredentialsCheck","clearAndRevokeCredentialsIfRequested","produceCredentials","e","code","ErrorCodes","NON_INTERACTIVE","newLine","link","fallbackToTextAndUrl","bold","red","CommandError","appCredentials","getAppCredentials","pushCredentials","getPushKey","distCredentials","getDistCert","displayProjectCredentials","_setupDistCert","distCertFromParams","getDistCertFromParams","useDistCertFromParams","runCredentialsManager","SetupIosDist","error","_setupPushCert","pushKeyFromParams","getPushKeyFromParams","usePushKeyFromParams","SetupIosPush","_setupProvisioningProfile","provisioningProfileFromParams","getProvisioningProfileFromParams","provisioningProfilePath","useProvisioningProfileFromParams","SetupIosProvisioningProfile","ensureBundleIdExistsAsync","appleCtx","enablePushNotifications","clearCredentials","clearDistCert","clearPushKey","clearPushCert","clearProvisioningProfile","shouldClearAnything","credsToClear","determineCredentialsToClear","shouldRevokeOnApple","revokeCredentials","provisioningProfile","getProvisioningProfile","view","RemoveProvisioningProfile","removeSpecific","distributionCert","RemoveIosDist","pushKey","RemoveIosPush","pushCert","getPushCert","deletePushCert","credsToClearAll","Boolean","pickBy","undefined","ensureReleaseExists","platform","_this$manifest$ios$ic","_this$manifest$ios2","icon","ensurePNGIsNotTransparent","err","process","transporterAppLink","learnMore","isMacOsCatalinaOrLater","os","semver","satisfies","release","underline","grey","_default","exports"],"sources":["../../../../src/commands/build/ios/IOSBuilder.ts"],"sourcesContent":["import chalk from 'chalk';\nimport pickBy from 'lodash/pickBy';\nimport os from 'os';\nimport semver from 'semver';\nimport { XDLError } from 'xdl';\n\nimport CommandError, { ErrorCodes } from '../../../CommandError';\nimport * as apple from '../../../appleApi';\nimport { displayProjectCredentials } from '../../../credentials/actions/list';\nimport { Context } from '../../../credentials/context';\nimport { runCredentialsManager } from '../../../credentials/route';\nimport {\n  getDistCertFromParams,\n  RemoveIosDist,\n  useDistCertFromParams,\n} from '../../../credentials/views/IosDistCert';\nimport {\n  getProvisioningProfileFromParams,\n  RemoveProvisioningProfile,\n  useProvisioningProfileFromParams,\n} from '../../../credentials/views/IosProvisioningProfile';\nimport {\n  getPushKeyFromParams,\n  RemoveIosPush,\n  usePushKeyFromParams,\n} from '../../../credentials/views/IosPushCredentials';\nimport { SetupIosDist } from '../../../credentials/views/SetupIosDist';\nimport { SetupIosProvisioningProfile } from '../../../credentials/views/SetupIosProvisioningProfile';\nimport { SetupIosPush } from '../../../credentials/views/SetupIosPush';\nimport Log from '../../../log';\nimport { confirmAsync } from '../../../utils/prompts';\nimport * as TerminalLink from '../../utils/TerminalLink';\nimport { getOrPromptForBundleIdentifier } from '../../utils/getOrPromptApplicationId';\nimport BaseBuilder from '../BaseBuilder';\nimport { PLATFORMS } from '../constants';\nimport * as utils from '../utils';\nimport { ensurePNGIsNotTransparent } from './utils/image';\n\nconst noBundleIdMessage = `Your project must have a \\`bundleIdentifier\\` set in the Expo config (app.json or app.config.js).\\nSee https://expo.fyi/bundle-identifier`;\n\nfunction missingBundleIdentifierError() {\n  return new XDLError('INVALID_OPTIONS', noBundleIdMessage);\n}\n\ninterface AppLookupParams {\n  accountName: string;\n  projectName: string;\n  bundleIdentifier: string;\n}\n\nclass IOSBuilder extends BaseBuilder {\n  async run(): Promise<void> {\n    // This gets run after all other validation to prevent users from having to answer this question multiple times.\n    this.options.type = await utils.askBuildType(this.options.type!, {\n      archive: 'Deploy the build to the store',\n      simulator: 'Run the build on a simulator',\n    });\n    this.maybeWarnDamagedSimulator();\n    Log.addNewLineIfNone();\n    await this.checkForBuildInProgress();\n    if (this.options.type === 'archive') {\n      await this.prepareCredentials();\n    }\n    const publishedExpIds = await this.ensureProjectIsPublished();\n    if (!this.options.publicUrl) {\n      await this.checkStatusBeforeBuild();\n    }\n    await this.build(publishedExpIds);\n\n    this.maybeExplainUploadStep();\n    this.maybeWarnDamagedSimulator();\n  }\n\n  // Try to get the user to provide Apple credentials upfront\n  // We will be able to do full validation of their iOS creds this way\n  async bestEffortAppleCtx(ctx: Context): Promise<void> {\n    if (ctx.hasAppleCtx()) {\n      // skip prompts if already have apple ctx\n      return;\n    }\n    if (this.options.appleId) {\n      // skip prompts and auto authenticate if flags are passed\n      return await ctx.ensureAppleCtx();\n    }\n\n    const nonInteractive = this.options.parent && this.options.parent.nonInteractive;\n    if (nonInteractive) {\n      return;\n    }\n\n    const confirm = await confirmAsync({\n      message: `Do you have access to the Apple account that will be used for submitting this app to the App Store?`,\n    });\n    if (confirm) {\n      return await ctx.ensureAppleCtx();\n    } else {\n      Log.log(\n        chalk.green(\n          'No problem! ðŸ‘Œ \\nWe canâ€™t auto-generate credentials if you donâ€™t have access to the main Apple account. \\nBut we can still set it up if you upload your credentials.'\n        )\n      );\n    }\n  }\n\n  // All config validation should happen here before any build logic takes place.\n  // It's important that the errors are revealed in a thoughtful manner.\n  async checkProjectConfig(): Promise<void> {\n    // Run this first because the error messages are related\n    // to ExpoKit which is harder to change than the bundle ID.\n    await super.checkProjectConfig();\n\n    // Check the SDK version next as it's the second hardest thing to change.\n    const sdkVersion = this.manifest.sdkVersion;\n\n    await utils.checkIfSdkIsSupported(sdkVersion!, PLATFORMS.IOS);\n\n    // Validate the icon third since it's fairly easy to modify.\n    await this.validateIcon();\n\n    // Check the bundle ID and possibly prompt the user to add a new one.\n    await getOrPromptForBundleIdentifier(this.projectDir);\n    // Update with the latest bundle ID\n    this.updateProjectConfig();\n  }\n\n  private async getAccountNameAsync(): Promise<string> {\n    if (this.manifest.owner) return this.manifest.owner;\n    return (await this.getUserAsync())?.username;\n  }\n\n  private async prepareCredentials() {\n    const accountName = await this.getAccountNameAsync();\n    const projectName = this.manifest.slug;\n    const bundleIdentifier = this.manifest.ios?.bundleIdentifier;\n    if (!bundleIdentifier) throw missingBundleIdentifierError();\n    const appLookupParams = {\n      accountName,\n      projectName,\n      bundleIdentifier,\n    };\n    const context = new Context();\n    await context.init(this.projectDir, {\n      ...this.options,\n      nonInteractive: this.options.parent?.nonInteractive,\n    });\n\n    if (this.options.skipCredentialsCheck) {\n      Log.log('Skipping credentials check...');\n      return;\n    }\n    await this.bestEffortAppleCtx(context);\n    await this.clearAndRevokeCredentialsIfRequested(context, appLookupParams);\n\n    try {\n      await this.produceCredentials(context, appLookupParams);\n    } catch (e: any) {\n      if (e.code === ErrorCodes.NON_INTERACTIVE) {\n        Log.newLine();\n        const link = TerminalLink.fallbackToTextAndUrl(\n          'expo.fyi/credentials-non-interactive',\n          'https://expo.fyi/credentials-non-interactive'\n        );\n        Log.log(\n          chalk.bold.red(\n            `Additional information needed to setup credentials in non-interactive mode.`\n          )\n        );\n        Log.log(chalk.bold.red(`Learn more about how to resolve this: ${link}.`));\n        Log.newLine();\n\n        // We don't want to display project credentials when we bail out due to\n        // non-interactive mode error, because we are unable to recover without\n        // user input.\n        throw new CommandError(\n          ErrorCodes.NON_INTERACTIVE,\n          'Unable to proceed, see the above error message.'\n        );\n      }\n\n      Log.log(\n        chalk.bold.red(\n          'Failed to prepare all credentials. \\nThe next time you build, we will automatically use the following configuration:'\n        )\n      );\n      throw e;\n    } finally {\n      const appCredentials = await context.ios.getAppCredentials(appLookupParams);\n      const pushCredentials = await context.ios.getPushKey(appLookupParams);\n      const distCredentials = await context.ios.getDistCert(appLookupParams);\n      displayProjectCredentials(appLookupParams, appCredentials, pushCredentials, distCredentials);\n    }\n  }\n\n  async _setupDistCert(ctx: Context, appLookupParams: AppLookupParams): Promise<void> {\n    try {\n      const distCertFromParams = await getDistCertFromParams(this.options);\n      if (distCertFromParams) {\n        await useDistCertFromParams(ctx, appLookupParams, distCertFromParams);\n      } else {\n        await runCredentialsManager(ctx, new SetupIosDist(appLookupParams));\n      }\n    } catch (e: any) {\n      Log.error('Failed to set up Distribution Certificate');\n      throw e;\n    }\n  }\n\n  async _setupPushCert(ctx: Context, appLookupParams: AppLookupParams): Promise<void> {\n    try {\n      const pushKeyFromParams = await getPushKeyFromParams(this.options);\n      if (pushKeyFromParams) {\n        await usePushKeyFromParams(ctx, appLookupParams, pushKeyFromParams);\n      } else {\n        await runCredentialsManager(ctx, new SetupIosPush(appLookupParams));\n      }\n    } catch (e: any) {\n      Log.error('Failed to set up Push Key');\n      throw e;\n    }\n  }\n\n  async _setupProvisioningProfile(ctx: Context, appLookupParams: AppLookupParams) {\n    try {\n      const provisioningProfileFromParams = await getProvisioningProfileFromParams(\n        this.options.provisioningProfilePath\n      );\n      if (provisioningProfileFromParams) {\n        await useProvisioningProfileFromParams(ctx, appLookupParams, provisioningProfileFromParams);\n      } else {\n        await runCredentialsManager(ctx, new SetupIosProvisioningProfile(appLookupParams));\n      }\n    } catch (e: any) {\n      Log.error('Failed to set up Provisioning Profile');\n      throw e;\n    }\n  }\n\n  async produceCredentials(ctx: Context, appLookupParams: AppLookupParams) {\n    if (ctx.hasAppleCtx()) {\n      await apple.ensureBundleIdExistsAsync(ctx.appleCtx, appLookupParams, {\n        enablePushNotifications: true,\n      });\n    }\n    await this._setupDistCert(ctx, appLookupParams);\n    await this._setupPushCert(ctx, appLookupParams);\n    await this._setupProvisioningProfile(ctx, appLookupParams);\n  }\n\n  async clearAndRevokeCredentialsIfRequested(\n    ctx: Context,\n    appLookupParams: AppLookupParams\n  ): Promise<void> {\n    const {\n      clearCredentials,\n      clearDistCert,\n      clearPushKey,\n      clearPushCert,\n      clearProvisioningProfile,\n    } = this.options;\n    const shouldClearAnything =\n      clearCredentials ||\n      clearDistCert ||\n      clearPushKey ||\n      clearPushCert ||\n      clearProvisioningProfile;\n    if (shouldClearAnything) {\n      const credsToClear = this.determineCredentialsToClear();\n      await this.clearCredentials(ctx, appLookupParams, credsToClear);\n    }\n  }\n\n  async clearCredentials(\n    ctx: Context,\n    appLookupParams: AppLookupParams,\n    credsToClear: Record<string, boolean>\n  ): Promise<void> {\n    const shouldRevokeOnApple = this.options.revokeCredentials;\n\n    const provisioningProfile = await ctx.ios.getProvisioningProfile(appLookupParams);\n    if (credsToClear.provisioningProfile && provisioningProfile) {\n      const view = new RemoveProvisioningProfile(appLookupParams.accountName, shouldRevokeOnApple);\n      await view.removeSpecific(ctx, appLookupParams);\n    }\n\n    const distributionCert = await ctx.ios.getDistCert(appLookupParams);\n    if (credsToClear.distributionCert && distributionCert) {\n      const view = new RemoveIosDist(appLookupParams.accountName, shouldRevokeOnApple);\n      await view.removeSpecific(ctx, distributionCert);\n    }\n\n    const pushKey = await ctx.ios.getPushKey(appLookupParams);\n    if (credsToClear.pushKey && pushKey) {\n      const view = new RemoveIosPush(appLookupParams.accountName, shouldRevokeOnApple);\n      await view.removeSpecific(ctx, pushKey);\n    }\n\n    const pushCert = await ctx.ios.getPushCert(appLookupParams);\n    if (credsToClear.pushCert && pushCert) {\n      await ctx.ios.deletePushCert(appLookupParams);\n    }\n  }\n\n  determineCredentialsToClear(): Record<string, boolean> {\n    const {\n      clearCredentials,\n      clearDistCert,\n      clearPushKey,\n      clearPushCert,\n      clearProvisioningProfile,\n    } = this.options;\n    const credsToClearAll = {\n      distributionCert: Boolean(clearCredentials || clearDistCert),\n      pushKey: Boolean(clearCredentials || clearPushKey),\n      // TODO: backward compatibility, remove when all users migrate to push keys\n      pushCert: Boolean(clearCredentials || clearPushCert),\n      provisioningProfile: Boolean(clearCredentials || clearProvisioningProfile),\n    };\n    return pickBy(credsToClearAll);\n  }\n\n  async ensureProjectIsPublished() {\n    if (this.options.publicUrl) {\n      return undefined;\n    } else {\n      return await this.ensureReleaseExists();\n    }\n  }\n\n  platform() {\n    return PLATFORMS.IOS;\n  }\n\n  // validates whether the icon doesn't have transparency\n  async validateIcon() {\n    // TODO: maybe recommend the icon builder website.\n    try {\n      const icon = this.manifest.ios?.icon ?? this.manifest.icon;\n      if (!icon) {\n        // icon is optional\n        return;\n      }\n      await ensurePNGIsNotTransparent(icon);\n    } catch (err: any) {\n      if (err instanceof XDLError) {\n        throw err;\n      } else {\n        // something weird happened, let's assume the icon is correct\n      }\n    }\n  }\n\n  maybeExplainUploadStep() {\n    if (process.platform !== 'darwin' || this.options.type === 'simulator') {\n      return;\n    }\n\n    Log.newLine();\n    Log.log(\n      `You can now publish to the App Store with ${TerminalLink.transporterAppLink()} or ${chalk.bold(\n        'eas submit --platform ios'\n      )}. ${TerminalLink.learnMore('https://docs.expo.dev/distribution/uploading-apps/')}`\n    );\n  }\n\n  // warns for \"damaged\" builds when targeting simulator\n  // see: https://github.com/expo/expo-cli/issues/1197\n  maybeWarnDamagedSimulator() {\n    // see: https://en.wikipedia.org/wiki/Darwin_%28operating_system%29#Release_history\n    const isMacOsCatalinaOrLater =\n      os.platform() === 'darwin' && semver.satisfies(os.release(), '>=19.0.0');\n\n    if (isMacOsCatalinaOrLater && this.options.type === 'simulator') {\n      Log.newLine();\n      Log.log(\n        chalk.bold(\n          `ðŸš¨ If the build is not installable on your simulator because of \"${chalk.underline(\n            `... is damaged and can't be opened.`\n          )}\", please run:`\n        )\n      );\n      Log.log(chalk.grey.bold('xattr -rd com.apple.quarantine /path/to/your.app'));\n    }\n  }\n}\n\nexport default IOSBuilder;\n"],"mappings":"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"}