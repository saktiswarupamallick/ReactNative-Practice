{"version":3,"file":"createFileTransform.js","names":["_configPlugins","data","require","_minipass","_interopRequireDefault","path","_interopRequireWildcard","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_defineProperty","value","_toPropertyKey","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","Number","escapeXMLCharacters","original","noAmps","replace","noLt","noGt","noApos","Transformer","Minipass","constructor","settings","write","getNormalizedName","includes","extension","name","end","replaced","IOSConfig","XcodeUtils","sanitizedName","toLowerCase","createEntryResolver","entry","type","test","basename","createFileTransform","extname"],"sources":["../../../src/commands/utils/createFileTransform.ts"],"sourcesContent":["import { IOSConfig } from '@expo/config-plugins';\nimport Minipass from 'minipass';\nimport * as path from 'path';\nimport { ReadEntry } from 'tar';\n\nfunction escapeXMLCharacters(original: string): string {\n  const noAmps = original.replace('&', '&amp;');\n  const noLt = noAmps.replace('<', '&lt;');\n  const noGt = noLt.replace('>', '&gt;');\n  const noApos = noGt.replace('\"', '\\\\\"');\n  return noApos.replace(\"'\", \"\\\\'\");\n}\n\nclass Transformer extends Minipass {\n  data = '';\n\n  constructor(private settings: { name: string; extension: string }) {\n    super();\n  }\n\n  write(data: string) {\n    this.data += data;\n    return true;\n  }\n\n  getNormalizedName(): string {\n    if (['.xml', '.plist'].includes(this.settings.extension)) {\n      return escapeXMLCharacters(this.settings.name);\n    }\n    return this.settings.name;\n  }\n\n  end() {\n    const name = this.getNormalizedName();\n    const replaced = this.data\n      .replace(/Hello App Display Name/g, name)\n      .replace(/HelloWorld/g, IOSConfig.XcodeUtils.sanitizedName(name))\n      .replace(/helloworld/g, IOSConfig.XcodeUtils.sanitizedName(name.toLowerCase()));\n    super.write(replaced);\n    return super.end();\n  }\n}\n\nexport function createEntryResolver(name: string) {\n  return (entry: ReadEntry) => {\n    if (name) {\n      // Rewrite paths for bare workflow\n      entry.path = entry.path\n        .replace(\n          /HelloWorld/g,\n          entry.path.includes('android')\n            ? IOSConfig.XcodeUtils.sanitizedName(name.toLowerCase())\n            : IOSConfig.XcodeUtils.sanitizedName(name)\n        )\n        .replace(/helloworld/g, IOSConfig.XcodeUtils.sanitizedName(name).toLowerCase());\n    }\n    if (entry.type && /^file$/i.test(entry.type) && path.basename(entry.path) === 'gitignore') {\n      // Rename `gitignore` because npm ignores files named `.gitignore` when publishing.\n      // See: https://github.com/npm/npm/issues/1862\n      entry.path = entry.path.replace(/gitignore$/, '.gitignore');\n    }\n  };\n}\n\nexport function createFileTransform(name: string) {\n  return (entry: ReadEntry) => {\n    const extension = path.extname(entry.path);\n\n    // Binary files, don't process these (avoid decoding as utf8)\n    if (\n      ![\n        '.png',\n        '.jpg',\n        '.jpeg',\n        '.gif',\n        '.webp',\n        '.psd',\n        '.tiff',\n        '.svg',\n        '.jar',\n        '.keystore',\n\n        // Font files\n        '.otf',\n        '.ttf',\n      ].includes(extension) &&\n      name\n    ) {\n      return new Transformer({ name, extension });\n    }\n    return undefined;\n  };\n}\n"],"mappings":"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"}