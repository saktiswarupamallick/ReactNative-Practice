{"version":3,"file":"CreateApp.js","names":["PackageManager","data","_interopRequireWildcard","require","_chalk","_interopRequireDefault","_fsExtra","_getenv","_jsYaml","path","_semver","_log","_ora","_Podfile","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","validateName","name","test","FORBIDDEN_NAMES","isFolderNameForbidden","folderName","includes","TOLERABLE_FILES","getConflictsForDirectory","projectRoot","tolerableFiles","fs","readdirSync","filter","file","assertFolderEmptyAsync","dirname","overwrite","conflicts","length","Log","addNewLineIfNone","nested","chalk","green","newLine","Promise","all","map","conflict","remove","join","resolvePackageManager","options","packageManager","yarn","npm","shouldUseYarn","install","log","dim","EXPO_DEBUG","getenv","boolish","installNodeDependenciesAsync","flags","silent","cwd","YarnPackageManager","version","versionAsync","nodeLinker","getConfigAsync","semver","satisfies","yarnRc","yamlString","readFileSync","error","code","config","yaml","safeLoad","warn","writeFileSync","safeDump","installAsync","NpmPackageManager","getChangeDirectoryPath","cdPath","relative","process","installCocoaPodsAsync","step","logNewSection","platform","succeed","CocoaPodsPackageManager","isCLIInstalledAsync","text","stopAndPersist","installCLIAsync","nonInteractive","spawnOptions","stdio","e","symbol","red","CocoaPodsError","message","spinner","hasPackageJsonDependencyListChangedAsync","catch"],"sources":["../../../src/commands/utils/CreateApp.ts"],"sourcesContent":["import * as PackageManager from '@expo/package-manager';\nimport chalk from 'chalk';\nimport fs from 'fs-extra';\nimport getenv from 'getenv';\nimport yaml from 'js-yaml';\nimport * as path from 'path';\nimport semver from 'semver';\n\nimport Log from '../../log';\nimport { logNewSection } from '../../utils/ora';\nimport { hasPackageJsonDependencyListChangedAsync } from '../run/ios/Podfile';\n\nexport function validateName(name?: string): string | true {\n  if (typeof name !== 'string' || name === '') {\n    return 'The project name can not be empty.';\n  }\n  if (!/^[a-z0-9@.\\-_]+$/i.test(name)) {\n    return 'The project name can only contain URL-friendly characters (alphanumeric and @ . -  _)';\n  }\n  return true;\n}\n\nconst FORBIDDEN_NAMES = ['react-native', 'react', 'react-dom', 'react-native-web', 'expo'];\n\nexport function isFolderNameForbidden(folderName: string): boolean {\n  return FORBIDDEN_NAMES.includes(folderName);\n}\n\n// Any of these files are allowed to exist in the projectRoot\nconst TOLERABLE_FILES = [\n  // System\n  '.DS_Store',\n  'Thumbs.db',\n  // Git\n  '.git',\n  '.gitattributes',\n  '.gitignore',\n  // Project\n  '.npmignore',\n  '.travis.yml',\n  'LICENSE',\n  'docs',\n  '.idea',\n  // Package manager\n  'npm-debug.log',\n  'yarn-debug.log',\n  'yarn-error.log',\n];\n\nexport function getConflictsForDirectory(\n  projectRoot: string,\n  tolerableFiles: string[] = TOLERABLE_FILES\n): string[] {\n  return fs\n    .readdirSync(projectRoot)\n    .filter((file: string) => !(/\\.iml$/.test(file) || tolerableFiles.includes(file)));\n}\n\nexport async function assertFolderEmptyAsync({\n  projectRoot,\n  folderName = path.dirname(projectRoot),\n  overwrite,\n}: {\n  projectRoot: string;\n  folderName?: string;\n  overwrite: boolean;\n}): Promise<boolean> {\n  const conflicts = getConflictsForDirectory(projectRoot);\n  if (conflicts.length) {\n    Log.addNewLineIfNone();\n    Log.nested(`The directory ${chalk.green(folderName)} has files that might be overwritten:`);\n    Log.newLine();\n    for (const file of conflicts) {\n      Log.nested(`  ${file}`);\n    }\n\n    if (overwrite) {\n      Log.newLine();\n      Log.nested(`Removing existing files from ${chalk.green(folderName)}`);\n      await Promise.all(conflicts.map(conflict => fs.remove(path.join(projectRoot, conflict))));\n      return true;\n    }\n\n    return false;\n  }\n  return true;\n}\n\nexport type PackageManagerName = 'npm' | 'yarn';\n\nexport function resolvePackageManager(options: {\n  yarn?: boolean;\n  npm?: boolean;\n  install?: boolean;\n}): PackageManagerName {\n  let packageManager: PackageManagerName = 'npm';\n  if (options.yarn || (!options.npm && PackageManager.shouldUseYarn())) {\n    packageManager = 'yarn';\n  } else {\n    packageManager = 'npm';\n  }\n  if (options.install) {\n    Log.log(\n      packageManager === 'yarn'\n        ? `üß∂ Using Yarn to install packages. ${chalk.dim('Pass --npm to use npm instead.')}`\n        : 'üì¶ Using npm to install packages.'\n    );\n  }\n\n  return packageManager;\n}\n\nconst EXPO_DEBUG = getenv.boolish('EXPO_DEBUG', false);\n\nexport async function installNodeDependenciesAsync(\n  projectRoot: string,\n  packageManager: PackageManagerName,\n  flags: { silent: boolean } = {\n    // default to silent\n    silent: !EXPO_DEBUG,\n  }\n) {\n  const options = { cwd: projectRoot, silent: flags.silent };\n  if (packageManager === 'yarn') {\n    const yarn = new PackageManager.YarnPackageManager(options);\n    const version = await yarn.versionAsync();\n    const nodeLinker = await yarn.getConfigAsync('nodeLinker');\n    if (semver.satisfies(version, '>=2.0.0-rc.24') && nodeLinker !== 'node-modules') {\n      const yarnRc = path.join(projectRoot, '.yarnrc.yml');\n      let yamlString = '';\n      try {\n        yamlString = fs.readFileSync(yarnRc, 'utf8');\n      } catch (error: any) {\n        if (error.code !== 'ENOENT') {\n          throw error;\n        }\n      }\n      const config = yamlString ? yaml.safeLoad(yamlString) : {};\n      config.nodeLinker = 'node-modules';\n      !flags.silent &&\n        Log.warn(\n          `Yarn v${version} detected, enabling experimental Yarn v2 support using the node-modules plugin.`\n        );\n      !flags.silent && Log.log(`Writing ${yarnRc}...`);\n      fs.writeFileSync(yarnRc, yaml.safeDump(config));\n    }\n    await yarn.installAsync();\n  } else {\n    await new PackageManager.NpmPackageManager(options).installAsync();\n  }\n}\n\nexport function getChangeDirectoryPath(projectRoot: string): string {\n  const cdPath = path.relative(process.cwd(), projectRoot);\n  if (cdPath.length <= projectRoot.length) {\n    return cdPath;\n  }\n  return projectRoot;\n}\n\nexport async function installCocoaPodsAsync(projectRoot: string) {\n  let step = logNewSection('Installing CocoaPods...');\n  if (process.platform !== 'darwin') {\n    step.succeed('Skipped installing CocoaPods because operating system is not on macOS.');\n    return false;\n  }\n\n  const packageManager = new PackageManager.CocoaPodsPackageManager({\n    cwd: path.join(projectRoot, 'ios'),\n    silent: !EXPO_DEBUG,\n  });\n\n  if (!(await packageManager.isCLIInstalledAsync())) {\n    try {\n      // prompt user -- do you want to install cocoapods right now?\n      step.text = 'CocoaPods CLI not found in your PATH, installing it now.';\n      step.stopAndPersist();\n      await PackageManager.CocoaPodsPackageManager.installCLIAsync({\n        nonInteractive: true,\n        spawnOptions: {\n          ...packageManager.options,\n          // Don't silence this part\n          stdio: ['inherit', 'inherit', 'pipe'],\n        },\n      });\n      step.succeed('Installed CocoaPods CLI.');\n      step = logNewSection('Running `pod install` in the `ios` directory.');\n    } catch (e: any) {\n      step.stopAndPersist({\n        symbol: '‚ö†Ô∏è ',\n        text: chalk.red('Unable to install the CocoaPods CLI.'),\n      });\n      if (e instanceof PackageManager.CocoaPodsError) {\n        Log.log(e.message);\n      } else {\n        Log.log(`Unknown error: ${e.message}`);\n      }\n      return false;\n    }\n  }\n\n  try {\n    await packageManager.installAsync({ spinner: step });\n    // Create cached list for later\n    await hasPackageJsonDependencyListChangedAsync(projectRoot).catch(() => null);\n    step.succeed('Installed pods and initialized Xcode workspace.');\n    return true;\n  } catch (e: any) {\n    step.stopAndPersist({\n      symbol: '‚ö†Ô∏è ',\n      text: chalk.red('Something went wrong running `pod install` in the `ios` directory.'),\n    });\n    if (e instanceof PackageManager.CocoaPodsError) {\n      Log.log(e.message);\n    } else {\n      Log.log(`Unknown error: ${e.message}`);\n    }\n    return false;\n  }\n}\n"],"mappings":"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"}