{"version":3,"file":"ensureTypeScriptSetup.js","names":["_config","data","require","PackageManager","_interopRequireWildcard","_chalk","_interopRequireDefault","_commander","fs","path","_wrapAnsi","_xdl","_CommandError","_log","_ora","_prompts","_profileMethod","_resolveModules","_updateTSConfig","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","ensureTypeScriptSetupAsync","projectRoot","isTypeScriptSetupDisabled","Log","log","chalk","dim","tsConfigPath","join","intent","shouldSetupTypeScriptAsync","ensureRequiredDependenciesAsync","program","nonInteractive","updateTSConfigAsync","isBootstrapping","hasTSConfig","content","readFile","encoding","then","txt","trim","isBlankConfig","typescriptFile","profileMethod","queryFirstProjectTypeScriptFileAsync","getSDKVersionsAsync","exp","getConfig","skipSDKVersionRequirement","sdkVersion","_sdkVersions$exp$sdkV","sdkVersions","Versions","releasedSdkVersionsAsync","skipPrompt","resolutions","missing","collectMissingPackages","length","typescript","versions","relatedPackages","pkg","version","readableMissingPackages","map","p","isYarn","isUsingYarn","title","confirmAsync","message","wrapAnsi","cyan","process","stdout","columns","initial","installPackagesAsync","devPackages","col","installCommand","disableMessage","solution","bold","reset","CommandError","packageManager","createForProject","yarn","silent","isDebug","packagesStr","newLine","installingPackageStep","logNewSection","addDevAsync","e","fail","succeed"],"sources":["../../../../src/commands/utils/typescript/ensureTypeScriptSetup.ts"],"sourcesContent":["import { getConfig } from '@expo/config';\nimport * as PackageManager from '@expo/package-manager';\nimport chalk from 'chalk';\nimport program from 'commander';\nimport * as fs from 'fs-extra';\nimport * as path from 'path';\nimport wrapAnsi from 'wrap-ansi';\nimport { Versions } from 'xdl';\n\nimport CommandError from '../../../CommandError';\nimport Log from '../../../log';\nimport { logNewSection } from '../../../utils/ora';\nimport { confirmAsync } from '../../../utils/prompts';\nimport { profileMethod } from '../profileMethod';\nimport {\n  collectMissingPackages,\n  hasTSConfig,\n  queryFirstProjectTypeScriptFileAsync,\n} from './resolveModules';\nimport { isTypeScriptSetupDisabled, updateTSConfigAsync } from './updateTSConfig';\n\nexport async function ensureTypeScriptSetupAsync(projectRoot: string): Promise<void> {\n  if (isTypeScriptSetupDisabled) {\n    Log.log(chalk.dim('\\u203A Skipping TypeScript verification'));\n    return;\n  }\n\n  const tsConfigPath = path.join(projectRoot, 'tsconfig.json');\n\n  // Ensure the project is TypeScript before continuing.\n  const intent = await shouldSetupTypeScriptAsync(projectRoot);\n  if (!intent) {\n    return;\n  }\n\n  // Ensure TypeScript packages are installed\n  await ensureRequiredDependenciesAsync(\n    projectRoot,\n    // Don't prompt in CI\n    program.nonInteractive\n  );\n\n  // Update the config\n  await updateTSConfigAsync({ projectRoot, tsConfigPath, isBootstrapping: intent.isBootstrapping });\n}\n\nexport async function shouldSetupTypeScriptAsync(\n  projectRoot: string\n): Promise<{ isBootstrapping: boolean } | null> {\n  const tsConfigPath = await hasTSConfig(projectRoot);\n\n  // Enable TS setup if the project has a `tsconfig.json`\n  if (tsConfigPath) {\n    const content = await fs.readFile(tsConfigPath, { encoding: 'utf8' }).then(\n      txt => txt.trim(),\n      () => null\n    );\n    const isBlankConfig = content === '' || content === '{}';\n    return { isBootstrapping: isBlankConfig };\n  }\n  // This is a somewhat heavy check in larger projects.\n  // Test that this is reasonably paced by running expo start in `expo/apps/native-component-list`\n  const typescriptFile = await profileMethod(queryFirstProjectTypeScriptFileAsync)(projectRoot);\n  if (typescriptFile) {\n    return { isBootstrapping: true };\n  }\n\n  return null;\n}\n\nasync function getSDKVersionsAsync(projectRoot: string): Promise<Versions.SDKVersion | null> {\n  try {\n    const { exp } = getConfig(projectRoot, { skipSDKVersionRequirement: true });\n    if (exp.sdkVersion) {\n      const sdkVersions = await Versions.releasedSdkVersionsAsync();\n      return sdkVersions[exp.sdkVersion] ?? null;\n    }\n  } catch {\n    // This is a convenience method and we should avoid making this halt the process.\n  }\n  return null;\n}\n\nasync function ensureRequiredDependenciesAsync(\n  projectRoot: string,\n  skipPrompt: boolean = false\n): Promise<string> {\n  const { resolutions, missing } = collectMissingPackages(projectRoot);\n  if (!missing.length) {\n    return resolutions.typescript!;\n  }\n\n  // Ensure the versions are right for the SDK that the project is currently using.\n  const versions = await getSDKVersionsAsync(projectRoot);\n  if (versions?.relatedPackages) {\n    for (const pkg of missing) {\n      if (pkg.pkg in versions.relatedPackages) {\n        pkg.version = versions.relatedPackages[pkg.pkg];\n      }\n    }\n  }\n\n  // Prompt to install or bail out...\n  const readableMissingPackages = missing.map(p => p.pkg).join(', ');\n\n  const isYarn = PackageManager.isUsingYarn(projectRoot);\n\n  let title = `It looks like you're trying to use TypeScript but don't have the required dependencies installed.`;\n\n  if (!skipPrompt) {\n    if (\n      await confirmAsync({\n        message: wrapAnsi(\n          title + ` Would you like to install ${chalk.cyan(readableMissingPackages)}?`,\n          // This message is a bit too long, so wrap it to fit smaller terminals\n          process.stdout.columns || 80\n        ),\n        initial: true,\n      })\n    ) {\n      await installPackagesAsync(projectRoot, {\n        isYarn,\n        devPackages: missing.map(({ pkg, version }) => {\n          if (version) {\n            return [pkg, version].join('@');\n          }\n          return pkg;\n        }),\n      });\n      // Try again but skip prompting twice.\n      return await ensureRequiredDependenciesAsync(projectRoot, true);\n    }\n\n    // Reset the title so it doesn't print twice in interactive mode.\n    title = '';\n  } else {\n    title += '\\n\\n';\n  }\n\n  const col = process.stdout.columns || 80;\n\n  const installCommand =\n    (isYarn ? 'yarn add --dev' : 'npm install --save-dev') +\n    ' ' +\n    missing\n      .map(({ pkg, version }) => {\n        if (version) {\n          return [pkg, version].join('@');\n        }\n        return pkg;\n      })\n      .join(' ');\n\n  let disableMessage =\n    \"If you're not using TypeScript, please remove the TypeScript files from your project\";\n\n  if (await hasTSConfig(projectRoot)) {\n    disableMessage += ` and delete the tsconfig.json.`;\n  } else {\n    disableMessage += '.';\n  }\n\n  const solution = `Please install ${chalk.bold(\n    readableMissingPackages\n  )} by running:\\n\\n  ${chalk.reset.bold(installCommand)}\\n\\n`;\n\n  // This prevents users from starting a misconfigured JS or TS project by default.\n  throw new CommandError(wrapAnsi(title + solution + disableMessage + '\\n', col));\n}\n\nasync function installPackagesAsync(\n  projectRoot: string,\n  { isYarn, devPackages }: { isYarn: boolean; devPackages: string[] }\n) {\n  const packageManager = PackageManager.createForProject(projectRoot, {\n    yarn: isYarn,\n    log: Log.log,\n    silent: !Log.isDebug,\n  });\n\n  const packagesStr = chalk.bold(devPackages.join(', '));\n  Log.newLine();\n  const installingPackageStep = logNewSection(`Installing ${packagesStr}`);\n  try {\n    await packageManager.addDevAsync(...devPackages);\n  } catch (e: any) {\n    installingPackageStep.fail(`Failed to install ${packagesStr} with error: ${e.message}`);\n    throw e;\n  }\n  installingPackageStep.succeed(`Installed ${packagesStr}`);\n}\n"],"mappings":"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"}