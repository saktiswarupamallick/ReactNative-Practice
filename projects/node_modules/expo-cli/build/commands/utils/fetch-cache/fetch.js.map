{"version":3,"file":"fetch.js","names":["_crypto","data","_interopRequireDefault","require","_fs","_nodeFetch","_interopRequireWildcard","_url","_response","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","CACHE_VERSION","lockPromiseForKey","unlockFunctionForKey","lock","Promise","resolve","takeLockPromise","then","fulfill","unlock","md5","str","crypto","createHash","update","digest","getFormDataCacheKey","formData","cacheKey","boundary","getBoundary","_boundary","boundaryReplaceRegex","RegExp","_streams","map","s","replace","getBodyCacheKeyJson","body","URLSearchParams","toString","fs","ReadStream","path","Buffer","Error","getRequestCacheKey","req","credentials","destination","headers","integrity","method","redirect","referrer","referrerPolicy","url","getCacheKey","requestArguments","resource","init","resourceCacheKeyJson","Request","initCacheKeyJson","agent","JSON","stringify","getResponse","cachedValue","ejectSelfFromCache","remove","NFCResponse","bodyStream","metaData","fetchResponse","fetch","serializedMeta","serializeMetaFromNodeFetchResponse","newlyCachedData","createFetchWithCache","_default","exports"],"sources":["../../../../src/commands/utils/fetch-cache/fetch.ts"],"sourcesContent":["/**\n * Copyright (c) 2021 Expo, Inc.\n * Copyright (c) 2020 mistval.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * Based on https://github.com/mistval/node-fetch-cache/blob/9c40ddf786b0de22ce521d8bdaa6347bc44dd629/src/index.js#L1\n * But with TypeScript support to fix Jest tests, and removed unused code.\n */\nimport crypto from 'crypto';\nimport FormData from 'form-data';\nimport fs from 'fs';\nimport fetch, { Request, RequestInfo, RequestInit, Response } from 'node-fetch';\nimport { URLSearchParams } from 'url';\n\nimport { NFCResponse } from './response';\n\nconst CACHE_VERSION = 3;\n\nconst lockPromiseForKey: Record<string, Promise<any>> = {};\nconst unlockFunctionForKey: Record<string, any> = {};\n\n/**\n * Take out a lock. When this function returns (asynchronously),\n * you have the lock.\n * @param {string} key - The key to lock on. Anyone else who\n *   tries to lock on the same key will need to wait for it to\n *   be unlocked.\n */\nasync function lock(key: string) {\n  if (!lockPromiseForKey[key]) {\n    lockPromiseForKey[key] = Promise.resolve();\n  }\n\n  const takeLockPromise = lockPromiseForKey[key];\n  lockPromiseForKey[key] = takeLockPromise.then(\n    () =>\n      new Promise(fulfill => {\n        unlockFunctionForKey[key] = fulfill;\n      })\n  );\n\n  return takeLockPromise;\n}\n\n/**\n * Release a lock.\n * @param {string} key - The key to release the lock for.\n *   The next person in line will now be able to take out\n *   the lock for that key.\n */\nfunction unlock(key: string) {\n  if (unlockFunctionForKey[key]) {\n    unlockFunctionForKey[key]();\n    delete unlockFunctionForKey[key];\n  }\n}\n\nfunction md5(str: string) {\n  return crypto.createHash('md5').update(str).digest('hex');\n}\n\n// Since the boundary in FormData is random,\n// we ignore it for purposes of calculating\n// the cache key.\nfunction getFormDataCacheKey(formData: FormData) {\n  const cacheKey = { ...formData };\n  const boundary = formData.getBoundary();\n\n  // @ts-expect-error\n  delete cacheKey._boundary;\n\n  const boundaryReplaceRegex = new RegExp(boundary, 'g');\n\n  // @ts-expect-error\n  cacheKey._streams = cacheKey._streams.map(s => {\n    if (typeof s === 'string') {\n      return s.replace(boundaryReplaceRegex, '');\n    }\n\n    return s;\n  });\n\n  return cacheKey;\n}\n\nfunction getBodyCacheKeyJson(body: any) {\n  if (!body) {\n    return body;\n  }\n  if (typeof body === 'string') {\n    return body;\n  }\n  if (body instanceof URLSearchParams) {\n    return body.toString();\n  }\n  if (body instanceof fs.ReadStream) {\n    return body.path;\n  }\n  if (body.toString && body.toString() === '[object FormData]') {\n    return getFormDataCacheKey(body);\n  }\n  if (body instanceof Buffer) {\n    return body.toString();\n  }\n\n  throw new Error(\n    'Unsupported body type. Supported body types are: string, number, undefined, null, url.URLSearchParams, fs.ReadStream, FormData'\n  );\n}\n\nfunction getRequestCacheKey(req: any) {\n  return {\n    cache: req.cache,\n    credentials: req.credentials,\n    destination: req.destination,\n    headers: req.headers,\n    integrity: req.integrity,\n    method: req.method,\n    redirect: req.redirect,\n    referrer: req.referrer,\n    referrerPolicy: req.referrerPolicy,\n    url: req.url,\n    body: getBodyCacheKeyJson(req.body),\n  };\n}\n\nfunction getCacheKey(requestArguments: any[]) {\n  const resource = requestArguments[0];\n  const init = requestArguments[1] || {};\n\n  const resourceCacheKeyJson =\n    resource instanceof Request ? getRequestCacheKey(resource) : { url: resource };\n\n  const initCacheKeyJson = { ...init };\n\n  // @ts-ignore\n  resourceCacheKeyJson.body = getBodyCacheKeyJson(resourceCacheKeyJson.body);\n  initCacheKeyJson.body = getBodyCacheKeyJson(initCacheKeyJson.body);\n\n  delete initCacheKeyJson.agent;\n\n  return md5(JSON.stringify([resourceCacheKeyJson, initCacheKeyJson, CACHE_VERSION]));\n}\n\nasync function getResponse(\n  cache: import('./FileSystemCache').FileSystemCache,\n  url: RequestInfo,\n  init?: RequestInit | undefined\n) {\n  const cacheKey = getCacheKey([url, init]);\n  let cachedValue = await cache.get(cacheKey);\n\n  const ejectSelfFromCache = () => cache.remove(cacheKey);\n\n  if (cachedValue) {\n    return new NFCResponse(cachedValue.bodyStream, cachedValue.metaData, ejectSelfFromCache, true);\n  }\n\n  await lock(cacheKey);\n  try {\n    cachedValue = await cache.get(cacheKey);\n    if (cachedValue) {\n      return new NFCResponse(\n        cachedValue.bodyStream,\n        cachedValue.metaData,\n        ejectSelfFromCache,\n        true\n      );\n    }\n\n    const fetchResponse = await fetch(url, init);\n    const serializedMeta = NFCResponse.serializeMetaFromNodeFetchResponse(fetchResponse);\n\n    const newlyCachedData = await cache.set(\n      cacheKey,\n      // @ts-expect-error\n      fetchResponse.body,\n      serializedMeta\n    );\n\n    return new NFCResponse(\n      newlyCachedData!.bodyStream,\n      newlyCachedData!.metaData,\n      ejectSelfFromCache,\n      false\n    );\n  } finally {\n    unlock(cacheKey);\n  }\n}\n\nfunction createFetchWithCache(\n  cache: import('./FileSystemCache').FileSystemCache\n): (url: RequestInfo, init?: RequestInit | undefined) => Promise<Response> {\n  return (url: RequestInfo, init?: RequestInit | undefined) => getResponse(cache, url, init);\n}\n\nexport default createFetchWithCache;\n"],"mappings":"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"}