{"version":3,"file":"ensureWebSetup.js","names":["_config","data","require","PackageManager","_interopRequireWildcard","_chalk","_interopRequireDefault","_commander","_getenv","_wrapAnsi","_xdl","_CommandError","_log","_ora","_prompts","_getMissingPackages","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","WEB_FEATURE_FLAG","hasChecked","disabledReason","ensureWebSupportSetupAsync","projectRoot","skipCache","Log","log","chalk","dim","result","shouldSetupWebSupportAsync","failureReason","ensureWebDependenciesInstalledAsync","exp","isWebPlatformExcluded","rootConfig","_rootConfig$expo","_rootConfig$expo2","_rootConfig$expo3","isWebExcluded","Array","isArray","expo","platforms","length","includes","boolish","projectConfig","getConfig","skipSDKVersionRequirement","configName","getProjectConfigDescriptionWithPaths","bold","requiredPackages","file","pkg","skipPrompt","program","nonInteractive","missing","getMissingPackagesAsync","readableMissingPackages","map","p","join","isYarn","isUsingYarn","title","Prompts","pauseInteractions","confirm","confirmAsync","message","wrapForTerminal","cyan","initial","resumeInteractions","packages","version","installPackagesAsync","installCommand","createInstallCommand","disableMessage","solution","reset","CommandError","wrapAnsi","process","stdout","columns","packageManager","createForProject","yarn","silent","isDebug","packagesStr","newLine","installingPackageStep","logNewSection","addAsync","e","fail","succeed"],"sources":["../../../../src/commands/utils/web/ensureWebSetup.ts"],"sourcesContent":["import {\n  AppJSONConfig,\n  ExpoConfig,\n  getConfig,\n  getProjectConfigDescriptionWithPaths,\n  ProjectConfig,\n} from '@expo/config';\nimport * as PackageManager from '@expo/package-manager';\nimport chalk from 'chalk';\nimport program from 'commander';\nimport { boolish } from 'getenv';\nimport wrapAnsi from 'wrap-ansi';\nimport { Prompts } from 'xdl';\n\nimport CommandError from '../../../CommandError';\nimport Log from '../../../log';\nimport { logNewSection } from '../../../utils/ora';\nimport { confirmAsync } from '../../../utils/prompts';\nimport { getMissingPackagesAsync } from './getMissingPackages';\n\nconst WEB_FEATURE_FLAG = 'EXPO_NO_WEB_SETUP';\n\n// Only check once per run.\nlet hasChecked = false;\nlet disabledReason = '';\n\nexport async function ensureWebSupportSetupAsync(\n  projectRoot: string,\n  { skipCache = false }: { skipCache?: boolean } = {}\n): Promise<boolean> {\n  if (!skipCache && hasChecked) {\n    if (disabledReason) {\n      Log.log(chalk.dim(disabledReason));\n    }\n    return false;\n  }\n  hasChecked = true;\n\n  const result = await shouldSetupWebSupportAsync(projectRoot);\n\n  if ('failureReason' in result) {\n    disabledReason = result.failureReason;\n    return ensureWebSupportSetupAsync(projectRoot);\n  }\n\n  // Ensure web packages are installed\n  await ensureWebDependenciesInstalledAsync(projectRoot, { exp: result.exp });\n\n  return true;\n}\n\nexport function isWebPlatformExcluded(rootConfig: AppJSONConfig): boolean {\n  // Detect if the 'web' string is purposefully missing from the platforms array.\n  const isWebExcluded =\n    Array.isArray(rootConfig.expo?.platforms) &&\n    !!rootConfig.expo?.platforms.length &&\n    !rootConfig.expo?.platforms.includes('web');\n  return isWebExcluded;\n}\n\nexport async function shouldSetupWebSupportAsync(\n  projectRoot: string\n): Promise<{ failureReason: string } | ProjectConfig> {\n  if (boolish(WEB_FEATURE_FLAG, false)) {\n    return { failureReason: '\\u203A Skipping web setup: EXPO_NO_WEB_SETUP is enabled.' };\n  }\n\n  const projectConfig = getConfig(projectRoot, { skipSDKVersionRequirement: true });\n\n  // Detect if the 'web' string is purposefully missing from the platforms array.\n  if (isWebPlatformExcluded(projectConfig.rootConfig)) {\n    // Get exact config description with paths.\n    const configName = getProjectConfigDescriptionWithPaths(projectRoot, projectConfig);\n    return {\n      failureReason: `\\u203A Skipping web setup: ${chalk.bold`\"web\"`} is not included in the project ${configName} ${chalk.bold`\"platforms\"`} array.`,\n    };\n  }\n\n  return projectConfig;\n}\n\nconst requiredPackages = [\n  // use react-native-web/package.json to skip node module cache issues when the user installs\n  // the package and attempts to resolve the module in the same process.\n  { file: 'react-native-web/package.json', pkg: 'react-native-web' },\n  { file: 'react-dom/package.json', pkg: 'react-dom' },\n];\n\nasync function ensureWebDependenciesInstalledAsync(\n  projectRoot: string,\n  {\n    exp = getConfig(projectRoot, { skipSDKVersionRequirement: true }).exp,\n    // Don't prompt in CI\n    skipPrompt = program.nonInteractive,\n  }: {\n    exp?: ExpoConfig;\n    skipPrompt?: boolean;\n  } = {}\n): Promise<boolean> {\n  const { missing } = await getMissingPackagesAsync(projectRoot, { exp, requiredPackages });\n  if (!missing.length) {\n    return true;\n  }\n\n  // Prompt to install or bail out...\n  const readableMissingPackages = missing.map(p => p.pkg).join(', ');\n\n  const isYarn = PackageManager.isUsingYarn(projectRoot);\n\n  let title = `It looks like you're trying to use web support but don't have the required dependencies installed.`;\n\n  if (skipPrompt) {\n    title += '\\n\\n';\n  } else {\n    Prompts.pauseInteractions();\n    let confirm: boolean;\n    try {\n      confirm = await confirmAsync({\n        message: wrapForTerminal(\n          title + ` Would you like to install ${chalk.cyan(readableMissingPackages)}?`\n        ),\n        initial: true,\n      });\n    } finally {\n      Prompts.resumeInteractions();\n    }\n\n    if (confirm) {\n      // Format with version if available.\n      const packages = missing.map(({ pkg, version }) =>\n        version ? [pkg, version].join('@') : pkg\n      );\n      // Install packages with versions\n      await installPackagesAsync(projectRoot, {\n        isYarn,\n        packages,\n      });\n      // Try again but skip prompting twice, simply fail if the packages didn't install correctly.\n      return await ensureWebDependenciesInstalledAsync(projectRoot, {\n        skipPrompt: true,\n      });\n    }\n\n    // Reset the title so it doesn't print twice in interactive mode.\n    title = '';\n  }\n\n  const installCommand = createInstallCommand({ isYarn, packages: missing });\n\n  const disableMessage = `If you're not using web, please remove the ${chalk.bold(\n    '\"web\"'\n  )} string from the platforms array in the project Expo config.`;\n\n  const solution = `Please install ${chalk.bold(\n    readableMissingPackages\n  )} by running:\\n\\n  ${chalk.reset.bold(installCommand)}\\n\\n`;\n\n  // Reset the cached check so we can re-run the check if the user re-runs the command.\n  hasChecked = false;\n  // This prevents users from starting a misconfigured JS or TS project by default.\n  throw new CommandError(wrapForTerminal(title + solution + disableMessage + '\\n'));\n}\n\n// Wrap long messages to fit smaller terminals.\nfunction wrapForTerminal(message: string): string {\n  return wrapAnsi(message, process.stdout.columns || 80);\n}\n\nexport function createInstallCommand({\n  isYarn,\n  packages,\n}: {\n  isYarn: boolean;\n  packages: {\n    file: string;\n    pkg: string;\n    version?: string | undefined;\n  }[];\n}) {\n  return (\n    (isYarn ? 'yarn add' : 'npm install') +\n    ' ' +\n    packages\n      .map(({ pkg, version }) => {\n        if (version) {\n          return [pkg, version].join('@');\n        }\n        return pkg;\n      })\n      .join(' ')\n  );\n}\n\nasync function installPackagesAsync(\n  projectRoot: string,\n  { isYarn, packages }: { isYarn: boolean; packages: string[] }\n) {\n  const packageManager = PackageManager.createForProject(projectRoot, {\n    yarn: isYarn,\n    log: Log.log,\n    silent: !Log.isDebug,\n  });\n\n  const packagesStr = chalk.bold(packages.join(', '));\n  Log.newLine();\n  const installingPackageStep = logNewSection(`Installing ${packagesStr}`);\n  try {\n    await packageManager.addAsync(...packages);\n  } catch (e: any) {\n    installingPackageStep.fail(`Failed to install ${packagesStr} with error: ${e.message}`);\n    throw e;\n  }\n  installingPackageStep.succeed(`Installed ${packagesStr}`);\n}\n"],"mappings":"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"}