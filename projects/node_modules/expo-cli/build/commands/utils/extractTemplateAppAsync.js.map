{"version":3,"file":"extractTemplateAppAsync.js","names":["_jsonFile","data","_interopRequireDefault","require","_merge","_path","_npm","obj","__esModule","default","extractAndPrepareTemplateAppAsync","npmPackageName","projectRoot","config","_ref","_config$name","name","expo","downloadAndExtractNpmModuleAsync","cwd","appFile","JsonFile","path","join","appJson","merge","readAsync","writeAsync","preparePackageJsonAsync","appName","packageFile","packageJson","description","tags","repository","sanitizeNpmPackageName","version","private"],"sources":["../../../src/commands/utils/extractTemplateAppAsync.ts"],"sourcesContent":["import { ExpoConfig } from '@expo/config';\nimport JsonFile from '@expo/json-file';\nimport merge from 'lodash/merge';\nimport path from 'path';\n\nimport { downloadAndExtractNpmModuleAsync, sanitizeNpmPackageName } from './npm';\n\n/**\n * Extract a template app to a given file path and clean up any properties left over from npm to\n * prepare it for usage.\n */\nexport async function extractAndPrepareTemplateAppAsync(\n  npmPackageName: string,\n  projectRoot: string,\n  config: { expo: Partial<ExpoConfig>; name?: string }\n) {\n  const name = config.name ?? config.expo.name ?? 'app';\n\n  await downloadAndExtractNpmModuleAsync(npmPackageName, {\n    cwd: projectRoot,\n    name,\n  });\n\n  const appFile = new JsonFile(path.join(projectRoot, 'app.json'));\n  const appJson = merge(await appFile.readAsync(), config);\n  await appFile.writeAsync(appJson);\n\n  await preparePackageJsonAsync(projectRoot, name);\n\n  return projectRoot;\n}\n\n/** Modify the template package.json, removing any extra fields and adding known properties. */\nasync function preparePackageJsonAsync(projectRoot: string, appName: string) {\n  const packageFile = new JsonFile(path.join(projectRoot, 'package.json'));\n  const packageJson = await packageFile.readAsync();\n\n  // Remove unused properties from package.json first.\n  delete packageJson.description;\n  delete packageJson.tags;\n  delete packageJson.repository;\n\n  // name and version are required for yarn workspaces (monorepos)\n  packageJson.name = sanitizeNpmPackageName(appName);\n  // These are metadata fields related to the template package, let's remove them from the package.json.\n  // A good place to start\n  packageJson.version = '1.0.0';\n  packageJson.private = true;\n\n  await packageFile.writeAsync(packageJson);\n}\n"],"mappings":";;;;;;AACA,SAAAA,UAAA;EAAA,MAAAC,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAH,SAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAG,OAAA;EAAA,MAAAH,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAC,MAAA,YAAAA,CAAA;IAAA,OAAAH,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAI,MAAA;EAAA,MAAAJ,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAE,KAAA,YAAAA,CAAA;IAAA,OAAAJ,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEA,SAAAK,KAAA;EAAA,MAAAL,IAAA,GAAAE,OAAA;EAAAG,IAAA,YAAAA,CAAA;IAAA,OAAAL,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAAiF,SAAAC,uBAAAK,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAEjF;AACA;AACA;AACA;AACO,eAAeG,iCAAiCA,CACrDC,cAAsB,EACtBC,WAAmB,EACnBC,MAAoD,EACpD;EAAA,IAAAC,IAAA,EAAAC,YAAA;EACA,MAAMC,IAAI,IAAAF,IAAA,IAAAC,YAAA,GAAGF,MAAM,CAACG,IAAI,cAAAD,YAAA,cAAAA,YAAA,GAAIF,MAAM,CAACI,IAAI,CAACD,IAAI,cAAAF,IAAA,cAAAA,IAAA,GAAI,KAAK;EAErD,MAAM,IAAAI,uCAAgC,EAACP,cAAc,EAAE;IACrDQ,GAAG,EAAEP,WAAW;IAChBI;EACF,CAAC,CAAC;EAEF,MAAMI,OAAO,GAAG,KAAIC,mBAAQ,EAACC,eAAI,CAACC,IAAI,CAACX,WAAW,EAAE,UAAU,CAAC,CAAC;EAChE,MAAMY,OAAO,GAAG,IAAAC,gBAAK,EAAC,MAAML,OAAO,CAACM,SAAS,CAAC,CAAC,EAAEb,MAAM,CAAC;EACxD,MAAMO,OAAO,CAACO,UAAU,CAACH,OAAO,CAAC;EAEjC,MAAMI,uBAAuB,CAAChB,WAAW,EAAEI,IAAI,CAAC;EAEhD,OAAOJ,WAAW;AACpB;;AAEA;AACA,eAAegB,uBAAuBA,CAAChB,WAAmB,EAAEiB,OAAe,EAAE;EAC3E,MAAMC,WAAW,GAAG,KAAIT,mBAAQ,EAACC,eAAI,CAACC,IAAI,CAACX,WAAW,EAAE,cAAc,CAAC,CAAC;EACxE,MAAMmB,WAAW,GAAG,MAAMD,WAAW,CAACJ,SAAS,CAAC,CAAC;;EAEjD;EACA,OAAOK,WAAW,CAACC,WAAW;EAC9B,OAAOD,WAAW,CAACE,IAAI;EACvB,OAAOF,WAAW,CAACG,UAAU;;EAE7B;EACAH,WAAW,CAACf,IAAI,GAAG,IAAAmB,6BAAsB,EAACN,OAAO,CAAC;EAClD;EACA;EACAE,WAAW,CAACK,OAAO,GAAG,OAAO;EAC7BL,WAAW,CAACM,OAAO,GAAG,IAAI;EAE1B,MAAMP,WAAW,CAACH,UAAU,CAACI,WAAW,CAAC;AAC3C"}