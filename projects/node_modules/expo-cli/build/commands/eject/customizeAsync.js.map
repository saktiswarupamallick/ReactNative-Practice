{"version":3,"file":"customizeAsync.js","names":["_config","data","require","PackageManager","_interopRequireWildcard","_spawnAsync","_interopRequireDefault","_chalk","_fsExtra","_path","_prompts","_resolveFrom","_log","_migration","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","maybeWarnToCommitAsync","projectRoot","workingTreeStatus","result","spawnAsync","stdout","Log","log","chalk","yellow","dependencyMap","resolveFromLocalOrGlobal","moduleId","resolved","resolveFrom","silent","resolve","generateFilesAsync","staticPath","options","answer","templateFolder","promises","file","keys","includes","projectFilePath","path","push","fs","copy","join","overwrite","recursive","packageManager","createForProject","dependency","addDevAsync","fileName","basename","src","dest","pathExists","Error","Promise","all","actionAsync","force","warnAboutLocalCLI","localCmd","exp","getConfig","skipSDKVersionRequirement","dirname","files","readdir","filter","item","web","allFiles","map","values","localProjectFile","exists","existsSync","title","value","disabled","description","red","length","bold","prompts","type","name","message","hint","warn","limit","instructions","choices"],"sources":["../../../src/commands/eject/customizeAsync.ts"],"sourcesContent":["import { getConfig } from '@expo/config';\nimport * as PackageManager from '@expo/package-manager';\nimport spawnAsync from '@expo/spawn-async';\nimport chalk from 'chalk';\nimport fs from 'fs-extra';\nimport path from 'path';\nimport prompts from 'prompts';\nimport resolveFrom from 'resolve-from';\n\nimport Log from '../../log';\nimport { warnAboutLocalCLI } from '../../utils/migration';\n\ntype Options = { force: boolean };\n\nasync function maybeWarnToCommitAsync(projectRoot: string) {\n  let workingTreeStatus = 'unknown';\n  try {\n    const result = await spawnAsync('git', ['status', '--porcelain']);\n    workingTreeStatus = result.stdout === '' ? 'clean' : 'dirty';\n  } catch {\n    // Maybe git is not installed?\n    // Maybe this project is not using git?\n  }\n\n  if (workingTreeStatus === 'dirty') {\n    Log.log(\n      chalk.yellow(\n        'You should commit your changes before generating code into the root of your project.'\n      )\n    );\n  }\n}\n\nconst dependencyMap: { [key: string]: string[] } = {\n  'babel.config.js': ['babel-preset-expo'],\n  'webpack.config.js': ['@expo/webpack-config'],\n};\n\nfunction resolveFromLocalOrGlobal(projectRoot: string, moduleId: string) {\n  const resolved = resolveFrom.silent(projectRoot, moduleId);\n  if (resolved) {\n    return resolved;\n  }\n  return require.resolve(moduleId);\n}\n\nasync function generateFilesAsync({\n  projectRoot,\n  staticPath,\n  options,\n  answer,\n  templateFolder,\n}: {\n  projectRoot: string;\n  staticPath: string;\n  options: Options;\n  answer: string[];\n  templateFolder: string;\n}) {\n  const promises = [];\n\n  for (const file of answer) {\n    if (Object.keys(dependencyMap).includes(file)) {\n      const projectFilePath = path.resolve(projectRoot, file);\n      // copy the file from template\n      promises.push(\n        fs.copy(\n          resolveFromLocalOrGlobal(projectRoot, path.join('@expo/webpack-config/template', file)),\n          projectFilePath,\n          { overwrite: true, recursive: true }\n        )\n      );\n\n      if (file in dependencyMap) {\n        const packageManager = PackageManager.createForProject(projectRoot, { log: Log.log });\n        for (const dependency of dependencyMap[file]) {\n          promises.push(packageManager.addDevAsync(dependency));\n        }\n      }\n    } else {\n      const fileName = path.basename(file);\n      const src = path.resolve(templateFolder, fileName);\n      const dest = path.resolve(projectRoot, staticPath, fileName);\n      if (await fs.pathExists(src)) {\n        promises.push(fs.copy(src, dest, { overwrite: true, recursive: true }));\n      } else {\n        throw new Error(`Expected template file for ${fileName} doesn't exist at path: ${src}`);\n      }\n    }\n  }\n  await Promise.all(promises);\n}\n\nexport async function actionAsync(projectRoot: string = './', options: Options = { force: false }) {\n  warnAboutLocalCLI(projectRoot, { localCmd: 'customize' });\n  // Get the static path (defaults to 'web/')\n  // Doesn't matter if expo is installed or which mode is used.\n  const { exp } = getConfig(projectRoot, {\n    skipSDKVersionRequirement: true,\n  });\n\n  const templateFolder = path.dirname(\n    resolveFromLocalOrGlobal(projectRoot, '@expo/webpack-config/web-default/index.html')\n  );\n\n  const files = (await fs.readdir(templateFolder)).filter(item => item !== 'icon.png');\n  const { web: { staticPath = 'web' } = {} } = exp;\n\n  const allFiles = [\n    ...Object.keys(dependencyMap),\n    ...files.map(file => path.join(staticPath, file)),\n  ];\n  const values = [];\n\n  for (const file of allFiles) {\n    const localProjectFile = path.resolve(projectRoot, file);\n    const exists = fs.existsSync(localProjectFile);\n\n    values.push({\n      title: file,\n      value: file,\n      // @ts-ignore: broken types\n      disabled: !options.force && exists,\n      description:\n        options.force && exists ? chalk.red('This will overwrite the existing file') : '',\n    });\n  }\n\n  if (!values.filter(({ disabled }) => !disabled).length) {\n    Log.log(\n      chalk.yellow('\\nAll of the custom web files already exist.') +\n        '\\nTo regenerate the files run:' +\n        chalk.bold(' expo customize:web --force\\n')\n    );\n    return;\n  }\n\n  await maybeWarnToCommitAsync(projectRoot);\n\n  const { answer } = await prompts({\n    type: 'multiselect',\n    name: 'answer',\n    message: 'Which files would you like to generate?',\n    hint: '- Space to select. Return to submit',\n    // @ts-ignore: broken types\n    warn: 'File exists, use --force to overwrite it.',\n    limit: values.length,\n    instructions: '',\n    choices: values,\n  });\n  if (!answer || answer.length === 0) {\n    Log.log('\\n\\u203A Exiting with no change...\\n');\n    return;\n  }\n  await generateFilesAsync({\n    projectRoot,\n    staticPath,\n    options,\n    answer,\n    templateFolder,\n  });\n}\n"],"mappings":"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"}