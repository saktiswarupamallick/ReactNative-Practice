{"version":3,"file":"Github.js","names":["_chalk","data","_interopRequireDefault","require","fs","_interopRequireWildcard","_nodeFetch","_path","_CommandError","_log","_npm","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","isUrlOk","url","res","fetch","status","getRepoInfo","examplePath","username","name","t","_branch","file","pathname","split","filePath","replace","join","undefined","infoResponse","info","json","branch","RegExp","hasRepo","contentsUrl","packagePath","resolveTemplateArgAsync","tempDir","oraInstance","appName","template","templatePath","repoInfo","repoUrl","URL","error","code","fail","path","resolve","existsSync","CommandError","extractLocalNpmTarballAsync","cwd","origin","chalk","red","AbortCommandError","found","text","bold","cyan","downloadAndExtractRepoAsync","root","projectName","basename","strip","length","Log","debug","extractNpmTarballFromUrlAsync","fileList"],"sources":["../../../src/commands/eject/Github.ts"],"sourcesContent":["import chalk from 'chalk';\nimport * as fs from 'fs-extra';\nimport fetch from 'node-fetch';\nimport { Ora } from 'ora';\nimport path from 'path';\n\nimport CommandError, { AbortCommandError } from '../../CommandError';\nimport Log from '../../log';\nimport { extractLocalNpmTarballAsync, extractNpmTarballFromUrlAsync } from '../utils/npm';\n\ntype RepoInfo = {\n  username: string;\n  name: string;\n  branch: string;\n  filePath: string;\n};\n\nasync function isUrlOk(url: string): Promise<boolean> {\n  try {\n    const res = await fetch(url);\n    return res.status === 200;\n  } catch {\n    return false;\n  }\n}\n\nasync function getRepoInfo(url: any, examplePath?: string): Promise<RepoInfo | undefined> {\n  const [, username, name, t, _branch, ...file] = url.pathname.split('/');\n  const filePath = examplePath ? examplePath.replace(/^\\//, '') : file.join('/');\n\n  // Support repos whose entire purpose is to be an example, e.g.\n  // https://github.com/:username/:my-cool-example-repo-name.\n  if (t === undefined) {\n    const infoResponse = await fetch(`https://api.github.com/repos/${username}/${name}`);\n    if (infoResponse.status !== 200) {\n      return;\n    }\n    const info = await infoResponse.json();\n    return { username, name, branch: info['default_branch'], filePath };\n  }\n\n  // If examplePath is available, the branch name takes the entire path\n  const branch = examplePath\n    ? `${_branch}/${file.join('/')}`.replace(new RegExp(`/${filePath}|/$`), '')\n    : _branch;\n\n  if (username && name && branch && t === 'tree') {\n    return { username, name, branch, filePath };\n  }\n  return undefined;\n}\n\nfunction hasRepo({ username, name, branch, filePath }: RepoInfo) {\n  const contentsUrl = `https://api.github.com/repos/${username}/${name}/contents`;\n  const packagePath = `${filePath ? `/${filePath}` : ''}/package.json`;\n\n  return isUrlOk(contentsUrl + packagePath + `?ref=${branch}`);\n}\n\nexport async function resolveTemplateArgAsync(\n  tempDir: string,\n  oraInstance: Ora,\n  appName: string,\n  template: string,\n  templatePath?: string\n) {\n  let repoInfo: RepoInfo | undefined;\n\n  if (template) {\n    // @ts-ignore\n    let repoUrl: URL | undefined;\n\n    try {\n      // @ts-ignore\n      repoUrl = new URL(template);\n    } catch (error: any) {\n      if (error.code !== 'ERR_INVALID_URL') {\n        oraInstance.fail(error);\n        throw error;\n      }\n    }\n\n    if (!repoUrl) {\n      const templatePath = path.resolve(template);\n      if (!fs.existsSync(templatePath)) {\n        throw new CommandError(`template file does not exist: ${templatePath}`);\n      }\n\n      await extractLocalNpmTarballAsync(templatePath, { cwd: tempDir, name: appName });\n      return tempDir;\n    }\n\n    if (repoUrl.origin !== 'https://github.com') {\n      oraInstance.fail(\n        `Invalid URL: ${chalk.red(\n          `\"${template}\"`\n        )}. Only GitHub repositories are supported. Please use a GitHub URL and try again.`\n      );\n      throw new AbortCommandError();\n    }\n\n    repoInfo = await getRepoInfo(repoUrl, templatePath);\n\n    if (!repoInfo) {\n      oraInstance.fail(\n        `Found invalid GitHub URL: ${chalk.red(`\"${template}\"`)}. Please fix the URL and try again.`\n      );\n      throw new AbortCommandError();\n    }\n\n    const found = await hasRepo(repoInfo);\n\n    if (!found) {\n      oraInstance.fail(\n        `Could not locate the repository for ${chalk.red(\n          `\"${template}\"`\n        )}. Please check that the repository exists and try again.`\n      );\n      throw new AbortCommandError();\n    }\n  }\n\n  if (repoInfo) {\n    oraInstance.text = chalk.bold(\n      `Downloading files from repo ${chalk.cyan(template)}. This might take a moment.`\n    );\n\n    await downloadAndExtractRepoAsync(tempDir, repoInfo);\n  }\n\n  return true;\n}\n\nfunction downloadAndExtractRepoAsync(\n  root: string,\n  { username, name, branch, filePath }: RepoInfo\n): Promise<void> {\n  const projectName = path.basename(root);\n\n  const strip = filePath ? filePath.split('/').length + 1 : 1;\n\n  const url = `https://codeload.github.com/${username}/${name}/tar.gz/${branch}`;\n  Log.debug('Downloading tarball from:', url);\n  return extractNpmTarballFromUrlAsync(url, {\n    cwd: root,\n    name: projectName,\n    strip,\n    fileList: [`${name}-${branch}${filePath ? `/${filePath}` : ''}`],\n  });\n}\n"],"mappings":"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"}