{"version":3,"file":"install.js","names":["_chalk","data","_interopRequireDefault","require","_log","_applyAsyncAction","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_interopRequireWildcard","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_default","program","applyAsyncAction","command","alias","helpGroup","option","description","on","Log","log","chalk","green","Promise","resolve","then"],"sources":["../../src/commands/install.ts"],"sourcesContent":["import chalk from 'chalk';\nimport type { Command } from 'commander';\n\nimport Log from '../log';\nimport { applyAsyncAction } from './utils/applyAsyncAction';\n\nexport default function (program: Command) {\n  applyAsyncAction<string[]>(\n    program\n      .command('install [packages...]')\n      .alias('add')\n      .helpGroup('core')\n      .option('--npm', 'Use npm to install dependencies. (default when package-lock.json exists)')\n      .option('--yarn', 'Use Yarn to install dependencies. (default when yarn.lock exists)')\n      .description('Install a module or other package to a project')\n      .on('--help', () => {\n        Log.log(\n          `  Additional options can be passed to the ${chalk.green('npm install')} or ${chalk.green(\n            'yarn add'\n          )} command by using ${chalk.green('--')}`\n        );\n        Log.log(`  For example: ${chalk.green('expo install somepackage -- --verbose')}`);\n      }),\n    () => import('./installAsync')\n  );\n}\n"],"mappings":";;;;;;AAAA,SAAAA,OAAA;EAAA,MAAAC,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAH,MAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAGA,SAAAG,KAAA;EAAA,MAAAH,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAC,IAAA,YAAAA,CAAA;IAAA,OAAAH,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAI,kBAAA;EAAA,MAAAJ,IAAA,GAAAE,OAAA;EAAAE,iBAAA,YAAAA,CAAA;IAAA,OAAAJ,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAA4D,SAAAC,uBAAAI,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAAA,SAAAG,yBAAAC,WAAA,eAAAC,OAAA,kCAAAC,iBAAA,OAAAD,OAAA,QAAAE,gBAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,CAAAC,WAAA,WAAAA,WAAA,GAAAG,gBAAA,GAAAD,iBAAA,KAAAF,WAAA;AAAA,SAAAI,wBAAAR,GAAA,EAAAI,WAAA,SAAAA,WAAA,IAAAJ,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,QAAAA,GAAA,oBAAAA,GAAA,wBAAAA,GAAA,4BAAAE,OAAA,EAAAF,GAAA,UAAAS,KAAA,GAAAN,wBAAA,CAAAC,WAAA,OAAAK,KAAA,IAAAA,KAAA,CAAAC,GAAA,CAAAV,GAAA,YAAAS,KAAA,CAAAE,GAAA,CAAAX,GAAA,SAAAY,MAAA,WAAAC,qBAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,GAAA,IAAAjB,GAAA,QAAAiB,GAAA,kBAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAApB,GAAA,EAAAiB,GAAA,SAAAI,IAAA,GAAAR,qBAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAhB,GAAA,EAAAiB,GAAA,cAAAI,IAAA,KAAAA,IAAA,CAAAV,GAAA,IAAAU,IAAA,CAAAC,GAAA,KAAAR,MAAA,CAAAC,cAAA,CAAAH,MAAA,EAAAK,GAAA,EAAAI,IAAA,YAAAT,MAAA,CAAAK,GAAA,IAAAjB,GAAA,CAAAiB,GAAA,SAAAL,MAAA,CAAAV,OAAA,GAAAF,GAAA,MAAAS,KAAA,IAAAA,KAAA,CAAAa,GAAA,CAAAtB,GAAA,EAAAY,MAAA,YAAAA,MAAA;AAE7C,SAAAW,SAAUC,OAAgB,EAAE;EACzC,IAAAC,oCAAgB,EACdD,OAAO,CACJE,OAAO,CAAC,uBAAuB,CAAC,CAChCC,KAAK,CAAC,KAAK,CAAC,CACZC,SAAS,CAAC,MAAM,CAAC,CACjBC,MAAM,CAAC,OAAO,EAAE,0EAA0E,CAAC,CAC3FA,MAAM,CAAC,QAAQ,EAAE,mEAAmE,CAAC,CACrFC,WAAW,CAAC,gDAAgD,CAAC,CAC7DC,EAAE,CAAC,QAAQ,EAAE,MAAM;IAClBC,cAAG,CAACC,GAAG,CACJ,6CAA4CC,gBAAK,CAACC,KAAK,CAAC,aAAa,CAAE,OAAMD,gBAAK,CAACC,KAAK,CACvF,UACF,CAAE,qBAAoBD,gBAAK,CAACC,KAAK,CAAC,IAAI,CAAE,EAC1C,CAAC;IACDH,cAAG,CAACC,GAAG,CAAE,kBAAiBC,gBAAK,CAACC,KAAK,CAAC,uCAAuC,CAAE,EAAC,CAAC;EACnF,CAAC,CAAC,EACJ,MAAAC,OAAA,CAAAC,OAAA,GAAAC,IAAA,OAAA9B,uBAAA,CAAAX,OAAA,CAAa,gBAAgB,GAC/B,CAAC;AACH"}