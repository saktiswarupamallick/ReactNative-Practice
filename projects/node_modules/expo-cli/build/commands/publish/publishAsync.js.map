{"version":3,"file":"publishAsync.js","names":["_config","data","require","_spawnAsync","_interopRequireDefault","_chalk","_resolveFrom","_xdl","_CommandError","_interopRequireWildcard","_log","_ora","_prompts","TerminalLink","_logConfigWarnings","sendTo","_deprecationNotice","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","EAS_UPDATE_URL","actionAsync","projectRoot","options","_options$target","printDeprecationNotice","assertValidReleaseChannel","releaseChannel","exp","pkg","getConfig","skipSDKVersionRequirement","confirmExpoUpdatesInstalledAsync","assertUpdateURLCorrectlyConfigured","sdkVersion","runtimeVersion","CommandError","ErrorCodes","INVALID_RUNTIME_VERSION","target","getDefaultTarget","user","UserManager","ensureLoggedInAsync","owner","getProjectOwner","Log","addNewLineIfNone","log","chalk","bold","replace","l","toUpperCase","kind","newLine","logExpoUpdatesWarnings","isLegacyImportsEnabled","logBareWorkflowWarnings","spinner","quiet","logNewSection","result","Project","publishAsync","maxWorkers","resetCache","clear","url","projectPageUrl","succeed","logManifestUrl","logProjectPageUrl","copiedToClipboard","recipient","getRecipient","sendUrlAsync","isInvalidReleaseChannel","channelRe","RegExp","test","isExpoUpdatesInstalledAsync","projectDir","resolveFrom","err","debug","installExpoUpdatesAsync","expoCliPath","spawnAsync","isBare","dim","learnMore","install","confirmAsync","message","isMaybeAnEASUrl","includes","_exp$updates","configuredURL","updates","INVALID_UPDATE_URL","_getExampleManifestUr","manifestUrl","getExampleManifestUrl","fallbackToUrl","productionMessage","gray","urlWithIndexSuffix","_pkg$dependencies","_pkg$dependencies2","hasConflictingUpdatesPackages","dependencies","nestedWarn","formatNamedWarning","_pkg$dependencies3","hasExpoInstalled"],"sources":["../../../src/commands/publish/publishAsync.ts"],"sourcesContent":["import {\n  ExpoConfig,\n  getConfig,\n  getDefaultTarget,\n  isLegacyImportsEnabled,\n  PackageJSONConfig,\n  ProjectTarget,\n} from '@expo/config';\nimport spawnAsync from '@expo/spawn-async';\nimport chalk from 'chalk';\nimport { Ora } from 'ora';\nimport resolveFrom from 'resolve-from';\nimport { Project, UserManager } from 'xdl';\n\nimport CommandError, { ErrorCodes } from '../../CommandError';\nimport Log from '../../log';\nimport { logNewSection } from '../../utils/ora';\nimport { confirmAsync } from '../../utils/prompts';\nimport * as TerminalLink from '../utils/TerminalLink';\nimport { formatNamedWarning } from '../utils/logConfigWarnings';\nimport * as sendTo from '../utils/sendTo';\nimport { printDeprecationNotice } from './deprecationNotice';\n\nconst EAS_UPDATE_URL = 'https://u.expo.dev';\n\ntype Options = {\n  clear?: boolean;\n  sendTo?: string | boolean;\n  quiet?: boolean;\n  target?: ProjectTarget;\n  releaseChannel?: string;\n  duringBuild?: boolean;\n  maxWorkers?: number;\n  parent?: { nonInteractive: boolean };\n};\n\nexport async function actionAsync(\n  projectRoot: string,\n  options: Options = {}\n): Promise<Project.PublishedProjectResult> {\n  printDeprecationNotice();\n  assertValidReleaseChannel(options.releaseChannel);\n\n  const { exp, pkg } = getConfig(projectRoot, {\n    skipSDKVersionRequirement: true,\n  });\n  await confirmExpoUpdatesInstalledAsync(projectRoot);\n  assertUpdateURLCorrectlyConfigured(exp);\n  const { sdkVersion, runtimeVersion } = exp;\n\n  // TODO(@jkhales): remove this check when runtimeVersion policies are supported, if they are ever supported\n  if (typeof runtimeVersion !== 'undefined' && typeof runtimeVersion !== 'string') {\n    throw new CommandError(\n      ErrorCodes.INVALID_RUNTIME_VERSION,\n      `Runtime version policies are not supported by the publish command.`\n    );\n  }\n\n  const target = options.target ?? getDefaultTarget(projectRoot);\n\n  // note: this validates the exp.owner when the user is a robot\n  const user = await UserManager.ensureLoggedInAsync();\n  const owner = UserManager.getProjectOwner(user, exp);\n\n  Log.addNewLineIfNone();\n\n  // Log building info before building.\n  // This gives the user sometime to bail out if the info is unexpected.\n  if (runtimeVersion) {\n    Log.log(`\\u203A Runtime version: ${chalk.bold(runtimeVersion)}`);\n  } else if (sdkVersion) {\n    Log.log(`\\u203A Expo SDK: ${chalk.bold(sdkVersion)}`);\n  }\n  Log.log(`\\u203A Release channel: ${chalk.bold(options.releaseChannel)}`);\n  Log.log(`\\u203A Workflow: ${chalk.bold(target.replace(/\\b\\w/g, l => l.toUpperCase()))}`);\n  if (user.kind === 'robot') {\n    Log.log(`\\u203A Owner: ${chalk.bold(owner)}`);\n  }\n\n  Log.newLine();\n\n  // Log warnings.\n\n  logExpoUpdatesWarnings(pkg);\n\n  if (!options.target && target === 'bare' && isLegacyImportsEnabled(exp)) {\n    logBareWorkflowWarnings(pkg);\n  }\n\n  Log.addNewLineIfNone();\n\n  // Build and publish the project.\n\n  let spinner: Ora | null = null;\n  if (options.quiet) {\n    spinner = logNewSection(`Building optimized bundles and generating sourcemaps...`);\n  } else {\n    Log.log(`Building optimized bundles and generating sourcemaps...`);\n  }\n\n  const result = await Project.publishAsync(projectRoot, {\n    releaseChannel: options.releaseChannel,\n    quiet: options.quiet,\n    maxWorkers: options.maxWorkers,\n    target,\n    resetCache: options.clear,\n  });\n\n  const url = result.url;\n  const projectPageUrl = result.projectPageUrl;\n\n  if (options.quiet && spinner) {\n    spinner.succeed();\n  }\n\n  Log.log('Publish complete');\n  Log.newLine();\n\n  logManifestUrl({ url, sdkVersion, runtimeVersion });\n\n  if (target === 'managed' && projectPageUrl) {\n    // note(brentvatne): disable copy to clipboard functionality for now, need to think more about\n    // whether this is desirable.\n    //\n    // Attempt to copy the URL to the clipboard, if it succeeds then append a notice to the log.\n    // const copiedToClipboard = copyToClipboard(websiteUrl);\n\n    logProjectPageUrl({ url: projectPageUrl, copiedToClipboard: false });\n\n    // Only send the link for managed projects.\n    const recipient = await sendTo.getRecipient(options.sendTo);\n    if (recipient) {\n      await sendTo.sendUrlAsync(projectPageUrl, recipient);\n    }\n  }\n\n  Log.newLine();\n\n  return result;\n}\n\nexport function isInvalidReleaseChannel(releaseChannel?: string): boolean {\n  const channelRe = new RegExp(/^[a-z\\d][a-z\\d._-]*$/);\n  return !!releaseChannel && !channelRe.test(releaseChannel);\n}\n\n// TODO(Bacon): should we prompt with a normalized value?\nfunction assertValidReleaseChannel(releaseChannel?: string): void {\n  if (isInvalidReleaseChannel(releaseChannel)) {\n    throw new CommandError(\n      'Release channel name can only contain lowercase letters, numbers and special characters . _ and -'\n    );\n  }\n}\n\nasync function isExpoUpdatesInstalledAsync(projectDir: string): Promise<boolean> {\n  try {\n    resolveFrom(projectDir, 'expo-updates/package.json');\n    return true;\n  } catch (err: any) {\n    Log.debug(err);\n    return false;\n  }\n}\n\nasync function installExpoUpdatesAsync(projectDir: string): Promise<void> {\n  const expoCliPath = resolveFrom(projectDir, 'expo/bin/cli.js');\n\n  Log.newLine();\n  Log.log(`Running ${chalk.bold('expo install expo-updates')}`);\n  Log.newLine();\n  await spawnAsync(expoCliPath, ['install', 'expo-updates']);\n  Log.newLine();\n}\n\nasync function confirmExpoUpdatesInstalledAsync(projectDir: string): Promise<void> {\n  if (await isExpoUpdatesInstalledAsync(projectDir)) {\n    return;\n  }\n\n  const isBare = getDefaultTarget(projectDir) === 'bare';\n  if (isBare) {\n    throw new CommandError(\n      `This project is missing ${chalk.bold(\n        'expo-updates'\n      )}. Please install it in order to publish an update. ${chalk.dim(\n        TerminalLink.learnMore('https://docs.expo.dev/bare/installing-updates/')\n      )}`\n    );\n  }\n\n  const install = await confirmAsync({\n    message: `In order to publish an update, ${chalk.bold(\n      'expo-updates'\n    )} needs to be installed. Do you want to install it now?`,\n  });\n\n  if (install) {\n    await installExpoUpdatesAsync(projectDir);\n  } else {\n    throw new CommandError(\n      `This project is missing ${chalk.bold(\n        'expo-updates'\n      )}. Please install it in order to publish an update.`\n    );\n  }\n}\n\nfunction isMaybeAnEASUrl(url: string): boolean {\n  return url.includes(EAS_UPDATE_URL);\n}\n\nfunction assertUpdateURLCorrectlyConfigured(exp: ExpoConfig): void {\n  const configuredURL = exp.updates?.url;\n  if (!configuredURL) {\n    // If no URL is configured, we generate a classic updates URL in the expo-updates config-plugin.\n    return;\n  }\n  if (isMaybeAnEASUrl(configuredURL)) {\n    throw new CommandError(\n      ErrorCodes.INVALID_UPDATE_URL,\n      `It seems like your project is configured for EAS Update. Please use 'eas update' instead.`\n    );\n  }\n}\n\n/**\n * @example üìù  Manifest: https://exp.host/@bacon/my-app/index.exp?sdkVersion=38.0.0 Learn more: https://expo.fyi/manifest-url\n * @param options\n */\nfunction logManifestUrl({\n  url,\n  sdkVersion,\n  runtimeVersion,\n}: {\n  url: string;\n  sdkVersion?: string;\n  runtimeVersion?: string;\n}) {\n  const manifestUrl = getExampleManifestUrl(url, { sdkVersion, runtimeVersion }) ?? url;\n  Log.log(\n    `üìù  Manifest: ${chalk.bold(TerminalLink.fallbackToUrl(url, manifestUrl))} ${chalk.dim(\n      TerminalLink.learnMore('https://expo.fyi/manifest-url')\n    )}`\n  );\n}\n\n/**\n *\n * @example ‚öôÔ∏è   Project page: https://expo.dev/@bacon/projects/my-app [copied to clipboard] Learn more: https://expo.fyi/project-page\n * @param options\n */\nfunction logProjectPageUrl({\n  url,\n  copiedToClipboard,\n}: {\n  url: string;\n  copiedToClipboard: boolean;\n}) {\n  let productionMessage = `‚öôÔ∏è   Project page: ${chalk.bold(TerminalLink.fallbackToUrl(url, url))}`;\n\n  if (copiedToClipboard) {\n    productionMessage += ` ${chalk.gray(`[copied to clipboard]`)}`;\n  }\n  productionMessage += ` ${chalk.dim(TerminalLink.learnMore('https://expo.fyi/project-page'))}`;\n\n  Log.log(productionMessage);\n}\n\nfunction getExampleManifestUrl(\n  url: string,\n  { sdkVersion, runtimeVersion }: { sdkVersion?: string; runtimeVersion?: string }\n): string | null {\n  if (!(sdkVersion || runtimeVersion)) {\n    return null;\n  }\n\n  if (url.includes('release-channel') && url.includes('?release-channel')) {\n    const urlWithIndexSuffix = url.replace('?release-channel', '/index.exp?release-channel');\n    return runtimeVersion\n      ? urlWithIndexSuffix + `&runtimeVersion=${runtimeVersion}`\n      : urlWithIndexSuffix + `&sdkVersion=${sdkVersion}`;\n  } else if (url.includes('?') && !url.includes('release-channel')) {\n    // This is the only relevant url query param we are aware of at the time of\n    // writing this code, so if there is some other param included we don't know\n    // how to deal with it and log nothing.\n    return null;\n  } else {\n    return runtimeVersion\n      ? `${url}/index.exp?runtimeVersion=${runtimeVersion}`\n      : `${url}/index.exp?sdkVersion=${sdkVersion}`;\n  }\n}\n\nexport function logExpoUpdatesWarnings(pkg: PackageJSONConfig): void {\n  const hasConflictingUpdatesPackages =\n    pkg.dependencies?.['expo-updates'] && pkg.dependencies?.['expokit'];\n\n  if (!hasConflictingUpdatesPackages) {\n    return;\n  }\n\n  Log.nestedWarn(\n    formatNamedWarning(\n      'Conflicting Updates',\n      `You have both the ${chalk.bold('expokit')} and ${chalk.bold(\n        'expo-updates'\n      )} packages installed in package.json.\\n  These two packages are incompatible and ${chalk.bold(\n        'publishing updates with expo-updates will not work if expokit is installed'\n      )}.\\n  If you intend to use ${chalk.bold('expo-updates')}, please remove ${chalk.bold(\n        'expokit'\n      )} from your dependencies.`\n    )\n  );\n}\n\n/**\n * Warn users if they attempt to publish in a bare project that may also be\n * using Expo Go and does not If the developer does not have the Expo\n * package installed then we do not need to warn them as there is no way that\n * it will run in Expo Go in development even. We should revisit this with\n * dev client, and possibly also by excluding SDK version for bare\n * expo-updates usage in the future (and then surfacing this as an error in\n * the Expo Go app instead)\n *\n * Related: https://github.com/expo/expo/issues/9517\n *\n * @param pkg package.json\n */\nexport function logBareWorkflowWarnings(pkg: PackageJSONConfig) {\n  const hasExpoInstalled = pkg.dependencies?.['expo'];\n  if (!hasExpoInstalled) {\n    return;\n  }\n\n  Log.nestedWarn(\n    formatNamedWarning(\n      'Workflow target',\n      `This is a ${chalk.bold(\n        'bare workflow'\n      )} project. The resulting publish will only run properly inside of a native build of your project. If you want to publish a version of your app that will run in Expo Go, please use ${chalk.bold(\n        'expo publish --target managed'\n      )}. You can skip this warning by explicitly running ${chalk.bold(\n        'expo publish --target bare'\n      )} in the future.`\n    )\n  );\n}\n"],"mappings":"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"}